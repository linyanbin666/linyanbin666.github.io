<?xml version="1.0" encoding="utf-8"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>原生菜鸟</title><link>https://ithorizon.top/</link><description>原生菜鸟的个人博客，记录与分享个人的所见所学所得.</description><generator>Hugo 0.133.0 https://gohugo.io/</generator><language>zh-CN</language><managingEditor>1468387317@qq.com (Yanbin Lin)</managingEditor><webMaster>1468387317@qq.com (Yanbin Lin)</webMaster><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><lastBuildDate>Fri, 23 Aug 2024 16:11:23 +0800</lastBuildDate><atom:link rel="self" type="application/rss+xml" href="https://ithorizon.top/rss.xml"/><item><title>书籍学习-一本书讲透Elasticsearch：原理、进阶和工程实践（三）</title><link>https://ithorizon.top/posts/2024-08-19-learning_es_1_3/</link><guid isPermaLink="true">https://ithorizon.top/posts/2024-08-19-learning_es_1_3/</guid><pubDate>Mon, 19 Aug 2024 09:33:00 +0000</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;blockquote>
&lt;p>本文是个人学习书籍《一本书讲透Elasticsearch：原理、进阶和工程实践》过程中所记录的一些笔记，内容来源于书籍&lt;/p>
&lt;/blockquote>
&lt;h2 id="elasticsearch集群">Elasticsearch集群&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>冷热集群架构&lt;/p>
&lt;ul>
&lt;li>
&lt;p>热节点存储用户最为关注的数据，而温或冷节点则用于存放用户不太重要或优先级较低的数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>可以提高查询性能、降低存储成本、优化集群性能、更好地管理数据和提高可扩展性&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>索引生命周期管理&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Rollover：滚动索引&lt;/p>
&lt;ul>
&lt;li>
&lt;p>创建符合正则表达式规范（即中间是“-”字符并且后面是数字字符）的索引，并批量导入数据&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">PUT my-index-20240528-000001
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;aliases&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;my-alias&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;is_write_index&amp;#34;&lt;/span>: &lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PUT my-alias/_bulk
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;_id&amp;#34;&lt;/span>: 1&lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;testing 01&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;_id&amp;#34;&lt;/span>: 2&lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;testing 02&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;_id&amp;#34;&lt;/span>: 3&lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;testing 03&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;_id&amp;#34;&lt;/span>: 4&lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;testing 04&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;_id&amp;#34;&lt;/span>: 5&lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;testing 05&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>基于滚动条件配置实现索引的滚动&lt;/p>
&lt;ul>
&lt;li>
&lt;p>max_age：在索引层面，指从索引创建开始所经过的时间&lt;/p>
&lt;/li>
&lt;li>
&lt;p>max_docs：在索引层面，指最大文档数（不含副本分片中的文档）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>max_size：在索引层面，指索引中所有分片的总存储空间（不含副本）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>max_primary_shard_size：在分片层面，指索引中最大主分片的存储空间&lt;/p>
&lt;/li>
&lt;li>
&lt;p>max_primary_shard_docs：在分片层面，指索引中最大主分片的文档数&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my-alias/_rollover
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;conditions&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;max_age&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;7d&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;max_docs&amp;#34;&lt;/span>: 5,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;max_size&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;5gb&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Shrink：压缩索引&lt;/p>
&lt;ul>
&lt;li>
&lt;p>3个必要条件&lt;/p>
&lt;ul>
&lt;li>
&lt;p>副本数为0（”index.number_of_replicas”: 0）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>将分片数据都集中到一个独立的节点（”index.routing.allocation.include._tier_preference”: “data_hot”）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>索引数据只读（”index.blocks.write“: true）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>索引生命周期&lt;/p>
&lt;ul>
&lt;li>
&lt;p>热(Hot)阶段&lt;/p>
&lt;/li>
&lt;li>
&lt;p>温(Warm)阶段&lt;/p>
&lt;/li>
&lt;li>
&lt;p>冷(Cold)阶段&lt;/p>
&lt;/li>
&lt;li>
&lt;p>归档(Frozen)阶段&lt;/p>
&lt;/li>
&lt;li>
&lt;p>删除(Delete)阶段&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>DSL命令行实战步骤&lt;/p>
&lt;ul>
&lt;li>
&lt;p>创建生命周期policy&lt;/p>
&lt;/li>
&lt;li>
&lt;p>创建索引模板，在模板中关联policy和别名&lt;/p>
&lt;/li>
&lt;li>
&lt;p>创建符合模板的起始索引，并插入数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>索引基于配置的ILM滚动&lt;/p>
&lt;/li>
&lt;li>
&lt;p>验证结果是否达到预期&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>跨机房、跨机架部署&lt;/p>
&lt;ul>
&lt;li>
&lt;p>设置节点属性&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 节点1设置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">node.attr.rack_id: rack_01
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 节点2设置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">node.attr.rack_id: rack_02
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>设置集群层面的分片分配策略&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">PUT _cluster/settings
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;persisent&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;cluster.routing.allocation.awareness.attributes&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;rack_id&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;cluster.routing.allocation.awareness.force.rack_id.values&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;rack_01,rack_02&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>索引/集群的备份与恢复&lt;/p>
&lt;ul>
&lt;li>
&lt;p>常见方案&lt;/p>
&lt;ul>
&lt;li>
&lt;p>使用Elasticsearch的快照和恢复功能进行备份和恢复。该方案适用于集群整体备份与迁移，包括全量、增量备份和恢复&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通过reindex操作在集群内或跨集群同步数据。该方案适用于相同集群但不同索引层面的迁移，或者跨集群的索引迁移&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用elasticdump来迁移映射和数据。该方案适用于仅对索引层面进行数据或映射的迁移&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch快照和恢复功能&lt;/p>
&lt;ul>
&lt;li>
&lt;p>快照执行步骤&lt;/p>
&lt;ul>
&lt;li>
&lt;p>配置快照存储路径&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">path.repo: &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;path&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>注册快照存储库&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">PUT /_snapshot/my_backup
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;type&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;fs&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;settings&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;location&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;path&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>拍摄快照&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 集群快照&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PUT /_snapshot/my_backup/snapshot_cluster?wait_for_completion&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 索引快照&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PUT /_snapshot/my_backup/snapshot_hamlet_index?wait_for_completion&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;indices&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;hamlet_*&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;ignore_unavailable&amp;#34;&lt;/span>: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;include_global_state&amp;#34;&lt;/span>: false,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;metadata&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;taken_by&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;horin&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;taken_because&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;backup before restart&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>恢复索引快照&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST /_snapshot/my_backup/snapshot_hamlet_index/_restore
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>快照常见操作&lt;/p>
&lt;ul>
&lt;li>
&lt;p>查看所有快照库&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">GET /_snapshot/all
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>查看快照状态&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">GET /_snapshot/my_backup/snapshot_hamlet_index/_status
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>删除快照&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">DELETE /_snapshot/my_backup/snapshot_hamlet_index
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>应用场景&lt;/p>
&lt;ul>
&lt;li>
&lt;p>数据备份&lt;/p>
&lt;/li>
&lt;li>
&lt;p>集群迁移&lt;/p>
&lt;/li>
&lt;li>
&lt;p>复制生产数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>数据恢复&lt;/p>
&lt;/li>
&lt;li>
&lt;p>高可用性&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>快照生命周期管理&lt;/p>
&lt;/li>
&lt;li>
&lt;p>跨集群检索&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="elasticsearch安全">Elasticsearch安全&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>从6.8版本（尤其是7.1及以上版本）开始，Elasticsearch的基础级别安全功能永久免费，在Elasticsearch 8.X版本之后，安全功能不再是可选项，而是必须项&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch的安全机制&lt;/p>
&lt;ul>
&lt;li>
&lt;p>认证和授权：Elasticsearch支持基于用户名和密码的认证及授权机制&lt;/p>
&lt;/li>
&lt;li>
&lt;p>传输加密：Elasticsearch可以使用TLS（传输层安全）协议来加密网络传输&lt;/p>
&lt;/li>
&lt;li>
&lt;p>数据加密：Elasticsearch支持字段级别的加密（付费功能）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>安全插件：Elasticsearch提供了一些安全插件（付费功能）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>安全使用Elasticsearch脚本&lt;/p>
&lt;ul>
&lt;li>
&lt;p>脚本类型细分&lt;/p>
&lt;ul>
&lt;li>
&lt;p>stored类型脚本：stored类型的脚本是先定义好脚本，将其存储起来，后续既可以使用，也可以不使用&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 定义脚本&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">POST _scripts/sum_score_script
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;script&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;lang&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;painless&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;source&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;ctx._source.total_score = ctx._source.math_score + ctx._source.english_score&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 使用脚本&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">POST my_index/_update_by_query
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;script&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;sum_score_script&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;match_all&amp;#34;&lt;/span>: &lt;span class="o">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>inline类型脚本：inline类型脚本就是在使用时直接指定脚本，而不提前创建脚本&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_update_by_query
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;script&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;lang&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;painless&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;source&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;ctx._source.total_score = ctx._source.math_score + ctx._source.english_score&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;match_all&amp;#34;&lt;/span>: &lt;span class="o">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>脚本限制配置（在elasticsearch.yml中设置）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>脚本分级限制（script.allowed_types）：默认配置为&lt;code>both&lt;/code>，即不做任何限制；将配置修改为&lt;code>inline&lt;/code>或&lt;code>stored&lt;/code>则表示限制只能执行指定类型的脚本；将配置修改为&lt;code>none&lt;/code>，则表示完全禁止执行脚本&lt;/p>
&lt;/li>
&lt;li>
&lt;p>脚本可用范围（script.allowed_contexts）：默认为&lt;code>none&lt;/code>，即不做任务限制；可以配置下选项有下面几种，如果需要同时允许多种选项，则可以用英文逗号进行分隔&lt;/p>
&lt;ul>
&lt;li>
&lt;p>scoring：计算评分&lt;/p>
&lt;/li>
&lt;li>
&lt;p>update：更新&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ingest processor：管道预处理&lt;/p>
&lt;/li>
&lt;li>
&lt;p>reindex：索引迁移&lt;/p>
&lt;/li>
&lt;li>
&lt;p>sort：排序&lt;/p>
&lt;/li>
&lt;li>
&lt;p>metric aggregation map：指标聚合&lt;/p>
&lt;/li>
&lt;li>
&lt;p>……&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="elasticsearch运维">Elasticsearch运维&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Elasticsearch集群监控的维度及指标&lt;/p>
&lt;ul>
&lt;li>
&lt;p>5个重要监控维度&lt;/p>
&lt;ul>
&lt;li>
&lt;p>集群健康维度：分片和节点&lt;/p>
&lt;ul>
&lt;li>
&lt;p>通过&lt;code>GET _cluster/health&lt;/code>监视集群&lt;/p>
&lt;ul>
&lt;li>
&lt;p>status：集群的状态，其中“红色”是指部分主分片未分配成功，“黄色”是指部分副本分片未分配成功，“绿色”是指所有分片均分配成功&lt;/p>
&lt;/li>
&lt;li>
&lt;p>active_primary_shards：集群中活动主分片的数量&lt;/p>
&lt;/li>
&lt;li>
&lt;p>relocating_shards：重定位分片数，指由于节点丢失而移动的分片计数&lt;/p>
&lt;/li>
&lt;li>
&lt;p>initializing_shards：初始化分片数，指由于添加索引而初始化的分片计数&lt;/p>
&lt;/li>
&lt;li>
&lt;p>unassigned_shards：未分配的分片数&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>搜索性能维度：请求率和延迟&lt;/p>
&lt;ul>
&lt;li>
&lt;p>通过&lt;code>GET index_a/_stats&lt;/code>查看对应目标索引状态&lt;/p>
&lt;ul>
&lt;li>
&lt;p>query_current：集群当前正在处理的查询操作的计数&lt;/p>
&lt;/li>
&lt;li>
&lt;p>fetch_current：集群中正在进行的取回操作的计数&lt;/p>
&lt;/li>
&lt;li>
&lt;p>query_total：集群处理的所有查询的总数&lt;/p>
&lt;/li>
&lt;li>
&lt;p>query_time_in_millis：所有查询消耗的总时间&lt;/p>
&lt;/li>
&lt;li>
&lt;p>fetch_total：集群处理的所有取回操作的总数&lt;/p>
&lt;/li>
&lt;li>
&lt;p>fetch_time_in_millis：所有取回操作消耗的总时间&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>索引性能维度：刷新和合并时间&lt;/p>
&lt;ul>
&lt;li>
&lt;p>通过&lt;code>GET _nodes/stats&lt;/code>获取索引性能指标&lt;/p>
&lt;ul>
&lt;li>
&lt;p>refresh.total：总刷新计数&lt;/p>
&lt;/li>
&lt;li>
&lt;p>refresh.total_time_in_millis：刷新总时间&lt;/p>
&lt;/li>
&lt;li>
&lt;p>merges.current_docs：当前的合并文档数&lt;/p>
&lt;/li>
&lt;li>
&lt;p>merges.total_docs：合并的总文档数&lt;/p>
&lt;/li>
&lt;li>
&lt;p>merges.total_stopped_time_in_millis：合并操作所消耗的总时间&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>节点运行状况维度：内存、磁盘和CPU指标&lt;/p>
&lt;ul>
&lt;li>
&lt;p>通过&lt;code>GET _cat/nodes?v&amp;amp;h=id,disk.total,disk.used,disk.avail,disk.used_percent,ram.current,ram.percent,ram.max,cpu&lt;/code>获取节点运行指标&lt;/p>
&lt;ul>
&lt;li>
&lt;p>disk.total：存储容量&lt;/p>
&lt;/li>
&lt;li>
&lt;p>disk.used：存储空间使用量&lt;/p>
&lt;/li>
&lt;li>
&lt;p>disk.avail：可用存储空间总量&lt;/p>
&lt;/li>
&lt;li>
&lt;p>disk.used_percent：已使用的存储空间的百分比&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ram.current：当前内存使用量&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ram.percent：当前内存使用百分比&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ram.max：内存总量&lt;/p>
&lt;/li>
&lt;li>
&lt;p>cpu：CPU使用百分比&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>JVM运行状况维度：GC和堆内存使用率&lt;/p>
&lt;ul>
&lt;li>
&lt;p>通过&lt;code>GET /_nodes/stats&lt;/code>命令检索JVM度量标准&lt;/p>
&lt;ul>
&lt;li>
&lt;p>jvm.mem：内存使用情况&lt;/p>
&lt;/li>
&lt;li>
&lt;p>jvm.threads：当前使用的线程数和最大线程数&lt;/p>
&lt;/li>
&lt;li>
&lt;p>jvm.gc：垃圾收集相关指标&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>集群故障排查及修复指南&lt;/p>
&lt;ul>
&lt;li>
&lt;p>如何定位红色或黄色的索引&lt;/p>
&lt;ul>
&lt;li>
&lt;p>确定我们所能知道的主要问题&lt;/p>
&lt;/li>
&lt;li>
&lt;p>确定哪些索引有问题，多少索引有问题&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">GET _cat/indices?v&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="nv">health&lt;/span>&lt;span class="o">=&lt;/span>yellow
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>查看有问题的分片及其原因&lt;/p>
&lt;ul>
&lt;li>
&lt;p>v：显示表头&lt;/p>
&lt;/li>
&lt;li>
&lt;p>h：指定要在结果中显示的列&lt;/p>
&lt;/li>
&lt;li>
&lt;p>s：指定对结果进行排序的列&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">GET _cat/shards?v&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="nv">h&lt;/span>&lt;span class="o">=&lt;/span>n,index,shard,prirep,state,sto,sc,unassigned.reason,unassigned.details&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="nv">s&lt;/span>&lt;span class="o">=&lt;/span>sto,index
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>进一步定位未分配的原因&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">GET _cluster/allocation/explain
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;my_index&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;shard&amp;#34;&lt;/span>: 0,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;primary&amp;#34;&lt;/span>: &lt;span class="nb">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>对症下药，解决问题&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>运维及故障诊断的常用命令&lt;/p>
&lt;ul>
&lt;li>
&lt;p>集群节点下线：保证集群颜色绿色的前提下，使某个节点优雅下线&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">PUT _cluster/settings
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;transient&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;cluster.routing.allocation.exclude_ip&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;127.0.0.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>强制刷新：刷新索引可以确保当前仅存储在事务日志中的所有数据也永久存储在Lucene索引中&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST _flush
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>更改并发分片的数量以平衡集群：控制在集群范围内有多少并发分片，以达到重新平衡，默认值为2&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">PUT _cluster/settings
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;transient&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;cluster.routing.allocation.cluster_concurrent_rebalance&amp;#34;&lt;/span>: &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>更改每个节点同时恢复的分片数量：如果节点已从集群断开连接，则其所有分片都将变为未分配状态。经过一定的延迟后，分片将被分配到其他位置。每个节点要恢复的并发分片数由该设置确定&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">PUT _cluster/settings
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;transient&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;cluster.routing.allocation.node_concurrent_recoveries&amp;#34;&lt;/span>: &lt;span class="m">6&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>调整恢复速度：为了避免集群过载，Elasticsearch限制了恢复速度&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">PUT _cluster/settings
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;transient&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;indices.recovery.max_byte_per_sec&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;80mb&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>清除节点上的缓存：如果节点达到较高的堆内存值，则可以在节点级别上调用如下API以使Elasticsearch清理缓存。这会降低性能，但可以摆脱内存不足引发的OOM的困扰&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST _cache/clear
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>调整断路器：为了避免Elasticsearch OOM，可以调整断路器上的设置。这将限制搜索所占用的内存，并舍弃所有估计消耗内存会超出阈值的搜索请求&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">PUT _cluster/settings
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;transient&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;indices.breaker.total.limit&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;40%&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>集群迁移：集群数据迁移、索引数据迁移等&lt;/p>
&lt;ul>
&lt;li>
&lt;p>方案一：针对索引部分或者全部数据执行reindex指令&lt;/p>
&lt;/li>
&lt;li>
&lt;p>借助第三方工具（如elasticdump和elasticsearch-migration）迁移索引或者集群，本质上是一种“scroll+bulk”方案的实现&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>集群数据备份和恢复：对于高可用业务场景，定期增量、全量数据备份&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 索引快照&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PUT /_snapshot/my_backup/snapshot_hamlet_index?wait_for_completion&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;indices&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;hamlet_*&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;ignore_unavailable&amp;#34;&lt;/span>: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;include_global_state&amp;#34;&lt;/span>: false,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;metadata&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;taken_by&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;horin&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;taken_because&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;backup before restart&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 恢复索引&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">POST /_snapshot/my_backup/snapshot_hamlet_index/_restore
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch日志&lt;/p>
&lt;ul>
&lt;li>
&lt;p>作用是什么？进行集群状态监测和故障诊断&lt;/p>
&lt;/li>
&lt;li>
&lt;p>默认路径是什么？$ES_HOME/logs&lt;/p>
&lt;/li>
&lt;li>
&lt;p>基于什么组件实现的？Log4j2&lt;/p>
&lt;/li>
&lt;li>
&lt;p>配置文件是什么？log4j2.properties&lt;/p>
&lt;/li>
&lt;li>
&lt;p>配置内容主要是什么？命名规范、日志随日期滚动策略（日志大小等条件设置）等&lt;/p>
&lt;/li>
&lt;li>
&lt;p>日志的级别如何划分？TRACE→DEBUG→INFO→WARN→ERROR→FATAL&lt;/p>
&lt;/li>
&lt;li>
&lt;p>日志级别调整方式有什么？&lt;/p>
&lt;ul>
&lt;li>
&lt;p>方式一：支持动态更新，无须重启&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">PUT _cluster/settings
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;persistent&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;logger.org.elasticsearch.discovery&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;DEBUG&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>方式二：elasticsearch.yml配置（静态配置方式，重启后生效）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">logger.org.elasticsearch.discovery: DEBUG
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>方式三：log4j2.properties配置（静态配置方式，重启后生效）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">logger.discovery.name &lt;span class="o">=&lt;/span> org.elasticsearch.discovery
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">logger.discovery.level &lt;span class="o">=&lt;/span> DEBUG
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>slowlog：指慢日志，又可以分为慢检索日志和慢写入日志&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="elasticsearch核心工作原理">Elasticsearch核心工作原理&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Elasticsearch文档版本冲突（本质：老版本覆盖掉了新版本）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>创建场景的版本冲突&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 重复执行create会出现冲突&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">POST my_index_1501/_create/1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;hello&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>批量更新场景的版本冲突&lt;/p>
&lt;/li>
&lt;li>
&lt;p>批量删除场景的版本冲突&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>如何解决或避免Elasticsearch文档版本冲突&lt;/p>
&lt;ul>
&lt;li>
&lt;p>利用external对版本号进行外部控制&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index_1501/_doc/1?version&lt;span class="o">=&lt;/span>2&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="nv">version_type&lt;/span>&lt;span class="o">=&lt;/span>external
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;hello2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>利用if_seq_no和if_primary_term作为唯一标识来避免版本冲突&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看_seq_no和_primary_term&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">GET my_index_1501/_doc/1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 基于获取到的_seq_no和_primary_term进行更新&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">POST my_index_1501/_doc/1?if_seq_no&lt;span class="o">=&lt;/span>2&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="nv">if_primary_term&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;hello2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>批量更新和批量删除中通过proceed忽略冲突&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index_1501/_update_by_query?conflicts&lt;span class="o">=&lt;/span>proceed
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch文档更新/删除的原理&lt;/p>
&lt;ul>
&lt;li>
&lt;p>更新/删除操作时文档版本号的变化&lt;/p>
&lt;ul>
&lt;li>
&lt;p>更新、删除操作实际是在原来文档的版本号基础上加1，且每执行一次，版本号进行一次加1操作&lt;/p>
&lt;/li>
&lt;li>
&lt;p>原来老版本的文档被标记为“已删除”状态&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>文档删除、索引删除和文档更新的本质&lt;/p>
&lt;ul>
&lt;li>
&lt;p>文档删除的本质：本质上是逻辑删除而非物理删除，文档被删除时，文档版本+1且标识为“已删除”，等到段合并时才会从磁盘上删除这些文档&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 强制执行段合并，only_expunge_deletes**表示**只清除已标记为“已删除”的文档&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">POST my_index/_forcemerge?only_expunge_deletes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>索引删除的本质：本质上是物理删除，索引删除包含两个步骤：更新集群、将分片从磁盘删除&lt;/p>
&lt;/li>
&lt;li>
&lt;p>文档更新的本质：本质上是“delete+add”操作，将旧文档标记为“已删除”，并增加一个全新的文档&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch写入的原理&lt;/p>
&lt;ul>
&lt;li>
&lt;p>核心概念&lt;/p>
&lt;ul>
&lt;li>
&lt;p>分段：在Elasticsearch中，段是由一些倒排索引和一些元数据组成的。分段是将索引分成多个小段的过程，每个分段包含一部分索引数据&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">GET my_index/_segments
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>事务日志文件：一个文档被索引之后，Elasticsearch就会将其添加到内存缓冲区，并且同时写入事务日志文件(translog)中。translog的作用是保证数据的可靠性和一致性&lt;/p>
&lt;/li>
&lt;li>
&lt;p>倒排索引是不可变的：已写入磁盘的倒排索引永远不会改变&lt;/p>
&lt;/li>
&lt;li>
&lt;p>段是不可变的：段一旦被创建，就不能被修改，任何对索引的更改都会生成新的段&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>写入的实现流程&lt;/p>
&lt;ul>
&lt;li>
&lt;p>客户端向主节点发送写数据请求，主节点充当协调节点的角色&lt;/p>
&lt;/li>
&lt;li>
&lt;p>主节点使用文档ID确认文档所属分片，将请求转发到主分片所属的节点&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在主分片上面执行写入操作，如果写入成功，将请求并行转发到副本分片上，并向协调节点报告写入成功&lt;/p>
&lt;/li>
&lt;li>
&lt;p>协调节点向客户端报告写入结果&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>refresh和flush操作&lt;/p>
&lt;ul>
&lt;li>
&lt;p>refresh操作&lt;/p>
&lt;ul>
&lt;li>
&lt;p>将文档插入Elasticsearch时，文档会被写入内存缓冲区中，然后通过refresh（刷新）操作定期从该缓冲区刷新到内存段中。刷新频率由refresh_interval参数控制，默认1s。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">PUT my_index
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;settings&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;refresh_interval&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;60s&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>refresh操作在本质上是将写入数据由内存缓冲区写入内存段中，以保证搜索可见&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>flush操作&lt;/p>
&lt;ul>
&lt;li>
&lt;p>当新的文档写入后，写入索引缓冲区(index buffer)的同时会写入事务日志，当flush操作后事务日志才可清空&lt;/p>
&lt;/li>
&lt;li>
&lt;p>flush操作将文件系统缓存(filesystem cache)写入磁盘，以达到持久化的目的&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch段合并的原理&lt;/p>
&lt;ul>
&lt;li>
&lt;p>段的基础知识&lt;/p>
&lt;ul>
&lt;li>
&lt;p>一个集群包含一个或多个节点&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一个节点包含一个或多个索引&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一个索引由一个或多个分片组成&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一个分片对应一个Lucene索引&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一个分片包含多个段，每个段是一个倒排索引，查询时会把所有段的查询结果汇总，并将其作为最终分片的查询结果，每个段时磁盘中的单个文件&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>段合并&lt;/p>
&lt;ul>
&lt;li>
&lt;p>将一些大小相似的段合并成更大的段，段合并的时候会将那些旧的已删除文档从文件系统中清除&lt;/p>
&lt;/li>
&lt;li>
&lt;p>作用&lt;/p>
&lt;ul>
&lt;li>
&lt;p>提高搜索效率：合并后的大段可以减少查询时需要扫描的段的数量，从而提高搜索效率&lt;/p>
&lt;/li>
&lt;li>
&lt;p>释放空间：合并后的段可以减少占用的磁盘空间，从而释放空间，减少硬盘的IO开销&lt;/p>
&lt;/li>
&lt;li>
&lt;p>优化索引结构：段合并后可以优化索引结构，减少冗余数据，从而进一步提高搜索效率&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>潜在问题&lt;/p>
&lt;ul>
&lt;li>
&lt;p>资源消耗率高：段合并操作需要占用系统资源，例如CPU、内存、磁盘资源等&lt;/p>
&lt;/li>
&lt;li>
&lt;p>磁盘碎片增多：段合并操作可能导致磁盘碎片，因为合并后的段可能不是连续的，而是由多个不连续的片段组成的&lt;/p>
&lt;/li>
&lt;li>
&lt;p>写入或检索延迟大：如果进行段合并操作时需要合并的段数量过多，可能会导致合并操作的时间较长，从而延迟写入操作和搜索操作&lt;/p>
&lt;/li>
&lt;li>
&lt;p>极端情况下索引不可用：如果段合并操作失败或被中断，则可能会导致索引不可用，需要进行恢复操作&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>段合并问题的优化建议&lt;/p>
&lt;ul>
&lt;li>
&lt;p>在非业务密集时间段实施段合并操作&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果对数据的实时性要求并不严格，建议将refresh_interval参数设置为30s或更长&lt;/p>
&lt;/li>
&lt;li>
&lt;p>根据CPU核心数量调整index.merge.scheduler.max_thread_count参数&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch检索的原理&lt;/p>
&lt;ul>
&lt;li>
&lt;p>核心步骤&lt;/p>
&lt;ul>
&lt;li>
&lt;p>客户端发起请求&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在主节点或协调节点中，需要验证查询主体&lt;/p>
&lt;/li>
&lt;li>
&lt;p>选择要在查询中使用的索引，根据路由机制选择待检索的分片（主分片或者副本分片）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在数据节点中执行查询操作，以收集精准匹配结果或者满足条件的结果&lt;/p>
&lt;/li>
&lt;li>
&lt;p>接收第四步的结果，在协调节点做结果整合，并计算相关性评分&lt;/p>
&lt;/li>
&lt;li>
&lt;p>将结果返回给用户&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="elasticsearch性能优化">Elasticsearch性能优化&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Elasticsearch性能指标&lt;/p>
&lt;ul>
&lt;li>
&lt;p>硬件性能指标：包括CPU使用率、内存使用率、磁盘IO读写速度、网络带宽等&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch内部指标：包括响应时间、吞吐量、并发数、负载等&lt;/p>
&lt;ul>
&lt;li>
&lt;p>响应时间：指从客户端发出请求到Elasticsearch返回结果所需的时间&lt;/p>
&lt;/li>
&lt;li>
&lt;p>吞吐量：指在一段时间内Elasticsearch处理的请求数量&lt;/p>
&lt;/li>
&lt;li>
&lt;p>并发数：指同时连接到Elasticsearch的客户端数量&lt;/p>
&lt;/li>
&lt;li>
&lt;p>负载：指Elasticsearch系统中正在处理的请求数量，包括正在进行的搜索、索引、聚合和删除数据等操作&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>网络指标：包括网络延迟、带宽、吞吐量等&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch通用的性能优化建议&lt;/p>
&lt;ul>
&lt;li>
&lt;p>版本选型：考虑当下，兼顾未来&lt;/p>
&lt;ul>
&lt;li>
&lt;p>功能要求&lt;/p>
&lt;/li>
&lt;li>
&lt;p>稳定性和性能&lt;/p>
&lt;/li>
&lt;li>
&lt;p>兼容性&lt;/p>
&lt;/li>
&lt;li>
&lt;p>安全性&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>确保集群健康状态&lt;/p>
&lt;/li>
&lt;li>
&lt;p>硬件资源匹配到位&lt;/p>
&lt;ul>
&lt;li>
&lt;p>足够内存&lt;/p>
&lt;/li>
&lt;li>
&lt;p>SSD&lt;/p>
&lt;/li>
&lt;li>
&lt;p>多核CPU&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>合理进行集群配置&lt;/p>
&lt;ul>
&lt;li>
&lt;p>各节点尽量不要和其他业务功能共用一台机器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>若集群节点数小于或者等于3个，则建议采用默认节点角色；若集群节点数多于3个，则建议根据业务场景需要逐步独立出主节点角色、数据节点角色和协调节点角色&lt;/p>
&lt;/li>
&lt;li>
&lt;p>调整分片和副本数&lt;/p>
&lt;/li>
&lt;li>
&lt;p>调整索引刷新频率&lt;/p>
&lt;/li>
&lt;li>
&lt;p>合理使用缓存&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>集群安全为第一要务&lt;/p>
&lt;ul>
&lt;li>
&lt;p>防火墙&lt;/p>
&lt;/li>
&lt;li>
&lt;p>认证授权&lt;/p>
&lt;/li>
&lt;li>
&lt;p>TLS/SSL加密&lt;/p>
&lt;/li>
&lt;li>
&lt;p>安全补丁更新&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>务必提前做好集群监控&lt;/p>
&lt;ul>
&lt;li>
&lt;p>监控硬件资源&lt;/p>
&lt;/li>
&lt;li>
&lt;p>监控Elasticsearch集群状态&lt;/p>
&lt;/li>
&lt;li>
&lt;p>监控日志&lt;/p>
&lt;/li>
&lt;li>
&lt;p>监控性能指标&lt;/p>
&lt;/li>
&lt;li>
&lt;p>监控异常情况&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>用Elasticsearch处理匹配场景下的合理需求&lt;/p>
&lt;ul>
&lt;li>
&lt;p>文本搜索和聚合&lt;/p>
&lt;/li>
&lt;li>
&lt;p>倒排索引&lt;/p>
&lt;/li>
&lt;li>
&lt;p>分布式架构&lt;/p>
&lt;/li>
&lt;li>
&lt;p>写入前预处理&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch写入优化&lt;/p>
&lt;ul>
&lt;li>
&lt;p>写入优化建议&lt;/p>
&lt;ul>
&lt;li>
&lt;p>写入时先将副本分片数置为0，完成写入后再将其复原&lt;/p>
&lt;/li>
&lt;li>
&lt;p>优先使用系统自动生成ID的方式（手动指定ID的方式会多一次查询）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>合理调整刷新频率&lt;/p>
&lt;/li>
&lt;li>
&lt;p>合理调整堆内存中的索引缓冲区大小（index.index_buffer_size，默认值为堆内存的10%）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>给堆外的内存留够空间&lt;/p>
&lt;/li>
&lt;li>
&lt;p>批量写入而非单个文档写入&lt;/p>
&lt;/li>
&lt;li>
&lt;p>多线程并发写入&lt;/p>
&lt;/li>
&lt;li>
&lt;p>合理设置线程池和队列大小&lt;/p>
&lt;/li>
&lt;li>
&lt;p>设置合理的映射&lt;/p>
&lt;/li>
&lt;li>
&lt;p>合理使用分词器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>必要时使用SSD&lt;/p>
&lt;/li>
&lt;li>
&lt;p>合理设置集群节点角色&lt;/p>
&lt;/li>
&lt;li>
&lt;p>推荐使用官方客户端的API&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>写入过程监控&lt;/p>
&lt;ul>
&lt;li>
&lt;p>索引率：索引率是指每秒写入Elasticsearch的文档数，是衡量集群写入性能的关键指标&lt;/p>
&lt;/li>
&lt;li>
&lt;p>查询速率：查询速率表示每秒的查询次数，反映了Elasticsearch集群的读取性能&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch检索优化&lt;/p>
&lt;ul>
&lt;li>
&lt;p>全量数据和大文档处理的优化建议&lt;/p>
&lt;ul>
&lt;li>
&lt;p>不要返回全量或近全量数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>避免使用大文档&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>数据建模层面的优化建议&lt;/p>
&lt;ul>
&lt;li>
&lt;p>文档结构务必规范、一致&lt;/p>
&lt;/li>
&lt;li>
&lt;p>设置合理的分片数和副本数&lt;/p>
&lt;ul>
&lt;li>
&lt;p>主分片一般建议设置为数据节点的1～3倍&lt;/p>
&lt;/li>
&lt;li>
&lt;p>对于一般的非高可用场景，一个副本基本足够&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>多使用写入前预处理操作&lt;/p>
&lt;/li>
&lt;li>
&lt;p>合理使用边写入边排序机制&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建索引时指定排序顺序&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PUT my_index
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;settings&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;sort.field&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;date&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;sort.order&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;desc&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;mappings&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;properties&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;date&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;type&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;date&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>多表关联按需选型&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>检索方法层面的优化建议&lt;/p>
&lt;ul>
&lt;li>
&lt;p>尽可能减少检索字段数目&lt;/p>
&lt;/li>
&lt;li>
&lt;p>合理设置size值&lt;/p>
&lt;/li>
&lt;li>
&lt;p>尽量使用keyword字段类型&lt;/p>
&lt;/li>
&lt;li>
&lt;p>尽量避免使用脚本&lt;/p>
&lt;/li>
&lt;li>
&lt;p>有效使用filter缓存&lt;/p>
&lt;/li>
&lt;li>
&lt;p>对历史索引数据不定期进行段合并（不要对正在写入数据的索引进行段合并）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>预热文件系统缓存&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">PUT my_index
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;settings&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index.store.preload&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;nvd&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;dvd&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>通过perference优化缓存利用率&lt;/p>
&lt;/li>
&lt;li>
&lt;p>避免使用wildcard检索（推荐在前期使用预处理Ngram分词，以空间换时间来解决问题）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>尽量避免使用正则匹配检索&lt;/p>
&lt;/li>
&lt;li>
&lt;p>谨慎使用全量聚合和多重嵌套聚合&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>性能优化的DSL命令行&lt;/p>
&lt;ul>
&lt;li>
&lt;p>未分配分片查看&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">GET _cat/shards?v&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="nv">h&lt;/span>&lt;span class="o">=&lt;/span>index,shard,prirep,state,unassigned.reason&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="nv">s&lt;/span>&lt;span class="o">=&lt;/span>state:asc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>动态调整副本数&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">PUT my_index/_settings
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;number_of_replicas&amp;#34;&lt;/span>: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>重新打开分片分配策略&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 开启Elasticsearch集群的分片分配策略，允许分片在节点间重新分配&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PUT _cluster/settings
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;cluster.routing.allocation.enable&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;all&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>手动移动未分配的分片&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST _cluster/reroute
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;commands&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;move&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;my_index&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;shard&amp;#34;&lt;/span>: 0,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;from_node&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;node1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;to_node&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;node2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;allocate_replica&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;my_index&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;shard&amp;#34;&lt;/span>: 1,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;node&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;node3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>查看磁盘使用率&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">GET _cat/allocation?v
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>查看各个节点的版本号&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">GET _cat/nodes?v&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="nv">h&lt;/span>&lt;span class="o">=&lt;/span>host,name,version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>检索优化实战&lt;/p>
&lt;ul>
&lt;li>
&lt;p>慢日志设置&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">PUT my_index/_settings
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index.search.slowlog.threshold.query.warn&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;10s&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index.search.slowlog.threshold.query.info&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;5s&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index.search.slowlog.threshold.query.debug&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;2s&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index.search.slowlog.threshold.query.trace&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;500ms&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index.search.slowlog.threshold.fetch.warn&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;1s&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index.search.slowlog.threshold.fetch.info&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;800ms&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index.search.slowlog.threshold.fetch.debug&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;500ms&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index.search.slowlog.threshold.fetch.trace&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;200ms&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index.search.slowlog.level&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;info&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>段合并&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_forcemerge
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>写入优化实战&lt;/p>
&lt;ul>
&lt;li>
&lt;p>批量写入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">PUT _bulk
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;_index&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;my_index&amp;#34;&lt;/span>&lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;field&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>提高刷新频率&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">PUT my_index/_settings
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;refresh_interval&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;30s&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>将副本数设置为0&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">PUT my_index/_settings
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;number_of_replicas&amp;#34;&lt;/span>: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>通过translog命令进行异步刷盘&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">PUT my_index/_settings
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;translog&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;durability&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;async&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="elasticsearch实战避坑指南">Elasticsearch实战“避坑”指南&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>分片及副本设置建议&lt;/p>
&lt;ul>
&lt;li>
&lt;p>分片数和节点数应该相对平衡&lt;/p>
&lt;/li>
&lt;li>
&lt;p>设置total_shards_per_node，将索引压力分摊至多个节点&lt;/p>
&lt;/li>
&lt;li>
&lt;p>尽量保证每个分片大小一致&lt;/p>
&lt;/li>
&lt;li>
&lt;p>主分片设置参考准则&lt;/p>
&lt;ul>
&lt;li>
&lt;p>设置合理的主分片数目。建议设置为节点数目的1倍到3倍（结合业务场景和集群规模），以确保每个节点都有分片&lt;/p>
&lt;/li>
&lt;li>
&lt;p>避免将主分片数目设置得太高或太低&lt;/p>
&lt;/li>
&lt;li>
&lt;p>监控主分片的状态和性能，使用Elasticsearch监控工具来及时发现和解决问题&lt;/p>
&lt;/li>
&lt;li>
&lt;p>考虑主分片的恢复时间，避免主分片过大导致恢复时间过长，从而影响索引的可靠性&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>副本分片设置参考准则&lt;/p>
&lt;ul>
&lt;li>
&lt;p>设置合理的副本分片数目。建议至少设置1个副本&lt;/p>
&lt;/li>
&lt;li>
&lt;p>避免在节点数目较少的情况下设置过多的副本分片&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>25个核心Elasticsearch默认值&lt;/p>
&lt;ul>
&lt;li>
&lt;p>参数类型&lt;/p>
&lt;ul>
&lt;li>
&lt;p>集群级别参数&lt;/p>
&lt;ul>
&lt;li>
&lt;p>举例1：&lt;code>cluster.max_shards_per_node&lt;/code>，前缀是cluster.*，修改针对集群生效&lt;/p>
&lt;/li>
&lt;li>
&lt;p>举例2：&lt;code>indices.query.bool.max_clause_count&lt;/code>，需要在elasticsearch.yml配置文件中设置，重启Elasticsearch后生效&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>索引级别参数&lt;/p>
&lt;ul>
&lt;li>举例：&lt;code>index.number_of_shards&lt;/code>，前缀是index.*，修改针对索引生效&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>区分静态参数和动态参数&lt;/p>
&lt;ul>
&lt;li>
&lt;p>静态参数，如主分片数&lt;code>index.number_of_shards&lt;/code>，在索引创建之后就不能更改，除非重建索引&lt;/p>
&lt;/li>
&lt;li>
&lt;p>动态参数，如副本分片数&lt;code>index.number_of_replicas&lt;/code>，允许在任何时候进行动态调整，可以通过update API进行操作&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>6个Elasticsearch集群级别参数的关键默认值&lt;/p>
&lt;ul>
&lt;li>
&lt;p>boolean类型默认支持的最大子句个数&lt;/p>
&lt;ul>
&lt;li>对应参数为&lt;code>indices.query.bool.max_clause_count&lt;/code>，为静态参数（需要在elasticsearch. yml中设置），默认最大为1024&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>数据节点支持的默认分片个数&lt;/p>
&lt;ul>
&lt;li>对应参数为&lt;code>cluster.max_shards_per_node&lt;/code>，默认最大为1000（7.X版本后）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>堆内存中索引缓冲区的默认比例&lt;/p>
&lt;ul>
&lt;li>对应参数为&lt;code>indices.memory.index_buffer_size&lt;/code>、&lt;code>indices.memory.min_index_buffer_size&lt;/code>、&lt;code>indices.memory.max_index_buffer_size&lt;/code>，均为静态参数（需要在elasticsearch.yml中设置）。&lt;code>indices.memory.index_buffer_size&lt;/code>的默认值为10%，&lt;code>indices.memory.min_index_buffer_size&lt;/code>的默认值为48 MB&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>默认磁盘使用率&lt;/p>
&lt;ul>
&lt;li>对应参数为&lt;code>cluster.routing.allocation.disk.watermark.low/high/flood_stage&lt;/code>，为集群动态参数。&lt;code>cluster.routing.allocation.disk.watermark.low&lt;/code>默认为85%，&lt;code>cluster.routing.allocation.disk.watermark.high&lt;/code>默认为90%，&lt;code>cluster.routing.allocation.disk.watermark.flood_stage&lt;/code>默认为95%&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>默认GC方式&lt;/p>
&lt;ul>
&lt;li>对应参数为&lt;code>-XX:+UseConcMarkSweepGC&lt;/code>、&lt;code>-XX:CMSInitiatingOccupancyFraction=75&lt;/code>、&lt;code>-XX:+UseCMSInitiatingOccupancyOnly&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>7个Elasticsearch索引级别参数的关键默认值&lt;/p>
&lt;ul>
&lt;li>
&lt;p>默认主分片的大小&lt;/p>
&lt;ul>
&lt;li>对应参数为&lt;code>index.number_of_shards&lt;/code>，为静态参数，默认值为1；单索引支持最大分片数为1024&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>默认的压缩算法&lt;/p>
&lt;ul>
&lt;li>对应参数为&lt;code>index.codec&lt;/code>，为静态参数，默认值为LZ4&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>默认副本分片个数&lt;/p>
&lt;ul>
&lt;li>对应参数为&lt;code>index.number_of_replicas&lt;/code>，为动态参数，默认值为1&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>默认刷新频率&lt;/p>
&lt;ul>
&lt;li>对应参数为&lt;code>index.refresh_interval&lt;/code>，为动态参数，默认最小值为1s&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>terms默认支持最大长度&lt;/p>
&lt;ul>
&lt;li>对应参数为&lt;code>index.max_terms_count&lt;/code>，为动态参数，默认最大值为65536&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>默认返回的最大搜索结果数&lt;/p>
&lt;ul>
&lt;li>对应参数为&lt;code>index.max_result_window&lt;/code>，为动态参数，默认最大值为10000&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>默认预处理管道&lt;/p>
&lt;ul>
&lt;li>对应参数为&lt;code>index.default_pipeline&lt;/code>，为动态参数，默认自定义管道&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>4个Elasticsearch映射级别参数的关键默认值&lt;/p>
&lt;ul>
&lt;li>
&lt;p>默认支持的最大字段数&lt;/p>
&lt;ul>
&lt;li>对应参数为&lt;code>index.mapping.total_fields.limit&lt;/code>，为动态参数，默认最大值为1000&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Mapping字段默认的最大深度&lt;/p>
&lt;ul>
&lt;li>对应参数为&lt;code>index.mapping.depth.limit&lt;/code>，为动态参数，默认最大值为20&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>默认支持的Nested类型个数&lt;/p>
&lt;ul>
&lt;li>
&lt;p>对应参数为&lt;code>index.mapping.nested_fields.limit&lt;/code>，表示一个索引所支持的最大Nested类型个数，默认值为50；以及&lt;code>index.mapping.nested_objects.limit&lt;/code>，表示一个Nested类型所支持的最大对象数，默认值为10000&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果子文档频繁更新，则建议使用父子文档。如果子文档不频繁更新但查询频繁，则建议采用Nested类型&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>动态映射条件下默认匹配的字符串类型&lt;/p>
&lt;ul>
&lt;li>字符串类型默认为“text+keyword”类型&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>8个其他关键默认值&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Elasticsearch默认的评分机制&lt;/p>
&lt;ul>
&lt;li>默认为BM25&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch keyword类型默认支持的字符数&lt;/p>
&lt;ul>
&lt;li>keyword类型支持的最大长度为32766个UTF-8字符，而text类型对字符长度没有限制。设置ignore_above后，超过给定长度的数据将不被索引，无法通过term检索返回结果&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch集群节点默认属性值&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch客户端默认请求节点&lt;/p>
&lt;ul>
&lt;li>如果不明确指定协调节点，则由默认请求的节点充当协调节点的角色。每个节点都是一个隐式的协调节点&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch默认分词器&lt;/p>
&lt;ul>
&lt;li>在不明确指定分词器的场景，默认采用标准分词器（standard）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch聚合默认UTC时间&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch默认堆内存大小&lt;/p>
&lt;ul>
&lt;li>Elasticsearch 8.X版本的默认堆内存大小是4GB&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch默认集成JDK&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch线程池和队列&lt;/p>
&lt;ul>
&lt;li>
&lt;p>查看线程池全貌&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">GET _cat/thread_pool?v&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="nv">h&lt;/span>&lt;span class="o">=&lt;/span>id,name,active,rejected,completed,size,type&lt;span class="p">&amp;amp;&lt;/span>pretty&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="nv">s&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">type&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>Elasticsearch根据在每个节点中检测到的线程数（即number of processors）自动配置线程池参。如果检测失败，则应在elasticsearch.yml中显式设置硬件中可用的线程数&lt;/p>
&lt;/li>
&lt;li>
&lt;p>线程池实战问题及注意事项&lt;/p>
&lt;ul>
&lt;li>
&lt;p>修改线程池和队列需要更改配置文件elasticsearch.yml&lt;/p>
&lt;/li>
&lt;li>
&lt;p>集群拒绝请求的原因可能有多种&lt;/p>
&lt;/li>
&lt;li>
&lt;p>写入批量值的递进步长调优&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch热点线程&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">GET _nodes/hot_threads
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">GET _nodes/&amp;lt;node_id&amp;gt;/hot_threads
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>规划Elasticsearch集群规模和容量（略）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch Java客户端选型（略）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch缓存&lt;/p>
&lt;ul>
&lt;li>
&lt;p>节点查询缓存(node query cache)&lt;/p>
&lt;ul>
&lt;li>
&lt;p>应用场景和缓存条件&lt;/p>
&lt;ul>
&lt;li>
&lt;p>适用于term检索和filter检索&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在Elasticsearch中，对于一个分片内的特定段，只有当该段至少含有10000个文档且段中的文档数量超过了该分片总文档数的3%时，它才会被纳入缓存中&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>缓存配置&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>indices.queries.cache.size&lt;/code>：该配置用于控制filter缓存的堆内存大小，可以是百分比值（例如5%）或精确值（例如512MB），默认为10%，该配置为静态配置，需要在集群的每个数据节点进行配置&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>ndex.queries.cache.enabled&lt;/code>：该配置用于控制是否启用节点查询缓存，只能在创建索引或者关闭索引时进行设置，默认为true，该配置为静态配置&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>分片请求缓存(shard request cache)&lt;/p>
&lt;ul>
&lt;li>
&lt;p>应用场景和缓存条件&lt;/p>
&lt;ul>
&lt;li>
&lt;p>适用于日志用例场景，在这种情况下，数据不会在旧索引上更新&lt;/p>
&lt;/li>
&lt;li>
&lt;p>默认情况下，分片请求缓存仅缓存size=0的搜索请求的结果&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>缓存配置&lt;/p>
&lt;ul>
&lt;li>&lt;code>index.requests.cache.size&lt;/code>：该配置用于控制分片缓存的堆内存大小，默认为1%，该配置为静态配置，需要在集群的每个数据节点进行配置&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>字段缓存&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch数据建模&lt;/p>
&lt;ul>
&lt;li>
&lt;p>基于业务建模&lt;/p>
&lt;/li>
&lt;li>
&lt;p>基于数据量建模&lt;/p>
&lt;/li>
&lt;li>
&lt;p>基于设置层面建模&lt;/p>
&lt;/li>
&lt;li>
&lt;p>基于映射层面建模&lt;/p>
&lt;ul>
&lt;li>
&lt;p>字段命名要规范&lt;/p>
&lt;/li>
&lt;li>
&lt;p>字段类型要合理&lt;/p>
&lt;/li>
&lt;li>
&lt;p>分词器要灵活&lt;/p>
&lt;/li>
&lt;li>
&lt;p>多字段类型灵活使用&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>基于复杂索引关联建模&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>利用JMeter进行Elasticsearch性能测试（略）&lt;/p>
&lt;/li>
&lt;/ul></description><category domain="https://ithorizon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/">学习笔记</category><category domain="https://ithorizon.top/tags/elasticsearch/">ElasticSearch</category><category domain="https://ithorizon.top/tags/es/">ES</category></item><item><title>书籍学习-一本书讲透Elasticsearch：原理、进阶和工程实践（二）</title><link>https://ithorizon.top/posts/2024-08-19-learning_es_1_2/</link><guid isPermaLink="true">https://ithorizon.top/posts/2024-08-19-learning_es_1_2/</guid><pubDate>Mon, 19 Aug 2024 09:32:00 +0000</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;blockquote>
&lt;p>本文是个人学习书籍《一本书讲透Elasticsearch：原理、进阶和工程实践》过程中所记录的一些笔记，内容来源于书籍&lt;/p>
&lt;/blockquote>
&lt;h2 id="elasticsearch文档">Elasticsearch文档&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>新增文档&lt;/p>
&lt;ul>
&lt;li>
&lt;p>单条写入（PUT &lt;index>/_doc/[id]）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>批量写入（POST [index]/_bulk）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>删除文档&lt;/p>
&lt;ul>
&lt;li>
&lt;p>单个删除（DELETE &lt;index>/_doc/&lt;id>）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>批量删除（POST &lt;index>/_delete_by_query）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>修改/更新文档&lt;/p>
&lt;ul>
&lt;li>
&lt;p>前置条件：mapping内的_source字段必须设置为true，这也是默认设置。如果将其手动设置为false，执行update会报错&lt;/p>
&lt;/li>
&lt;li>
&lt;p>单个文档部分更新&lt;/p>
&lt;ul>
&lt;li>
&lt;p>在原有基础上新增字段（POST &lt;index>/_update/&lt;id>，“doc”）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在原有字段基础上部分修改字段值（POST &lt;index>/_update/&lt;id>，“script”）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>存在则更新，不存在则插入给定值（POST &lt;index>/_update/&lt;id>，“upsert”）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>全部文档更新（PUT &lt;index>/_doc/&lt;id>）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>PS：Mapping不会因为文档的写入或更新操作而导致收缩，除非通过reindex操作将数据迁移到新的索引上&lt;/p>
&lt;/li>
&lt;li>
&lt;p>批量文档更新&lt;/p>
&lt;ul>
&lt;li>
&lt;p>基于Painless脚本的批量更新（POST &lt;index>/_update_by_query，”script”）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>基于ingest预处理管道的批量更新（POST &lt;index>/_update_by_query?pipeline=&lt;pipeline>）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>取消更新&lt;/p>
&lt;ul>
&lt;li>
&lt;p>获取更新任务的任务ID（GET tasks?detailed=true&amp;amp;actions=*by_query）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>查看任务ID，了解任务详情（GET /_tasks/&lt;taskId>）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>取消更新任务（POST tasks/&lt;taskId>/cancel）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>迁移文档（reindex）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>同集群索引之间的全量数据迁移&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST _reindex
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;conflicts&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;proceed&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;source&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;source_index&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;dest&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;dest_index&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>同集群索引之间基于特定条件的数据迁移&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST _reindex
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;source&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;source_index&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;term&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;user&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;horin&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;dest&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;dest_index&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>基于script脚本的索引迁移&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST _reindex
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;source&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;source_index&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;dest&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;dest_index&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;version_type&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;external&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;script&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;lang&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;painless&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;source&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;if (ctx._source.user == &amp;#39;horin&amp;#39;) { ctx._source.remove(&amp;#39;user&amp;#39;) }&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>基于预处理管道的数据迁移&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST _reindex
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;source&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;source_index&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;dest&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;dest_index&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;pipeline&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;my_pipeline&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>不同集群索引之间的数据迁移&lt;/p>
&lt;ul>
&lt;li>
&lt;p>elasticsearch.yml配置文件配置白名单&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">reindex.remote.whitelist: &lt;span class="s2">&amp;#34;xxx&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>同普通的跨索引数据迁移的实现方式一致&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST _reindex
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;source&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;remote&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;host&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;http://otherhost:9200&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;source_index&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;dest&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;dest_index&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>查看及取消reindex任务&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 获取reindex相关任务&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">GET _tasks?detailed&lt;span class="o">=&lt;/span>true&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="nv">actions&lt;/span>&lt;span class="o">=&lt;/span>*reindex
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 获取任务ID及相关信息&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">GET /_tasks/&amp;lt;taskId&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 取消任务&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">POST /_tasks/&amp;lt;taskId&amp;gt;/_cancel
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>业务零掉线情况下的数据迁移：reindex + 别名&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="elasticsearch脚本">Elasticsearch脚本&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>应用场景&lt;/p>
&lt;ul>
&lt;li>
&lt;p>自定义字段&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 截取返回日期格式中的年份&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;script_fields&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;insert_year&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;script&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;source&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;doc[&amp;#39;insert_year&amp;#39;].value.getYear()&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>自定义评分&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 自定义评分检索&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;function_score&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;script_score&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;script&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;lang&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;expression&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;source&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;_score * doc[&amp;#39;popularity&amp;#39;]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>自定义更新&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 已有字段更新为其他字段&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">POST my_index/_update/1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;script&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;lang&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;painless&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;source&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> ctx._source.theatre = params.theatre
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;params&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;theatre&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;jingju&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>自定义reindex&lt;/p>
&lt;/li>
&lt;li>
&lt;p>自定义聚合&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;aggs&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;terms_aggs&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;terms&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;script&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;lang&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;painless&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;source&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;doc[&amp;#39;popularity&amp;#39;].value&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>其他自定义操作&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="elasticsearch检索">Elasticsearch检索&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>常用检索&lt;/p>
&lt;ul>
&lt;li>
&lt;p>全文检索&lt;/p>
&lt;ul>
&lt;li>
&lt;p>match&lt;/p>
&lt;ul>
&lt;li>
&lt;p>应用于高召回率和结果精准度要求较低的场景&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;match&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;乌兰新闻&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>match_phrase（短语检索）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>适用于注重精准度的召回场景，match_phrase检索要求查询的词条顺序和文档中的词条顺序保持一致，强调短语的完整性和顺序&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;match_phrase&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;乌兰新闻&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>match_phrase_prefix（短语前缀检索）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>查询词语需要按顺序匹配文档中的内容，同时允许最后一个词语只匹配其前缀&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;match_phrase_prefix&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;乌兰新&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>multi_match（多字段检索）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>适用于在多个字段上执行match检索的场景&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;multi_match&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;乌兰&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;fields&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;title^3&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;message&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>query_string（支持与或非表达式的检索）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>允许用户使用Lucene查询语法直接编写复杂的查询表达式&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query_string&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;default_field&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;乌兰 AND 新闻&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>simple_query_string&lt;/p>
&lt;ul>
&lt;li>
&lt;p>simple_query_string和query_string的区别&lt;/p>
&lt;ul>
&lt;li>
&lt;p>simple_query_string对语法的核查并不严格&lt;/p>
&lt;/li>
&lt;li>
&lt;p>simple_query_string是一种简单的查询语法，只支持单词查询、短语查询或者包含查询，不支持使用通配符和正则表达式&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>match boolean prefix&lt;/p>
&lt;/li>
&lt;li>
&lt;p>intervals&lt;/p>
&lt;/li>
&lt;li>
&lt;p>combined fields&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>精确匹配&lt;/p>
&lt;ul>
&lt;li>
&lt;p>term（单字段精确匹配）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>应用于单字段精准匹配的场景&lt;/p>
&lt;/li>
&lt;li>
&lt;p>term检索针对的是非text类型，用于text类型时并不会报错，但检索结果一般会达不到预期&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;term&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;horin&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>terms（多字段精确匹配）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>应用于多值精准匹配场景，例如筛选出具有多个特定标签或状态的项目&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;terms&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;tags&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;weibo&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;wechat&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>range（范围检索）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>适合对数字、日期或其他可排序数据类型的字段进行范围筛选&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;range&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;popular_degree&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;gte&amp;#34;&lt;/span>: 10,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;lte&amp;#34;&lt;/span>: &lt;span class="m">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>exists（是否存在检索）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>适用于检查文档中是否存在某个字段，或者该字段是否包含非空值&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;exists&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;field&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;title.keyword&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>wildcard（通配符检索）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>适用于对部分已知内容的文本字段进行模糊检索&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;wildcard&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;title.keyword&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;*乌兰*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>prefix（前缀匹配检索）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>用于检索以特定字符或字符串作为名称开头的文档&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;prefix&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;title.keyword&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;乌兰&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>terms set&lt;/p>
&lt;ul>
&lt;li>
&lt;p>可以检索匹配一定数量给定词项的文档，其中匹配的数量可以是固定值，也可以是基于另一个字段的动态值&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;terms_set&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;tags&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;terms&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;喜剧&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;动作&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;科幻&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;minimum_should_match_field&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;tags_count&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>fuzzy（支持编辑距离的模糊查询）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;fuzzy&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;language&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>IDs&lt;/p>
&lt;ul>
&lt;li>
&lt;p>基于给定的ID组快速召回相关数据&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;ids&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;values&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;2&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;3&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>regexp（正则匹配检索）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;regexp&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;product_name.keyword&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Lap..&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>多表关联检索&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Nested（Nested嵌套类型检索）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Has child（子文档查询父文档）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Has parent（父文档查询子文档）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Parent ID&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>组合检索&lt;/p>
&lt;ul>
&lt;li>
&lt;p>bool（组合检索）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>must：查询结果必须满足指定条件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>must_not：查询结果必须不满足指定条件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>filter：过滤条件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>should：查询结果可以满足的部分条件，具体满足条件的最小数量由minimum_should_match参数控制&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>boosting（提升评分）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>constant score&lt;/p>
&lt;/li>
&lt;li>
&lt;p>disjunction max&lt;/p>
&lt;/li>
&lt;li>
&lt;p>function_score（自定义评分）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>相对不常用检索&lt;/p>
&lt;ul>
&lt;li>
&lt;p>经纬度检索&lt;/p>
&lt;/li>
&lt;li>
&lt;p>形状类型检索&lt;/p>
&lt;/li>
&lt;li>
&lt;p>跨度检索&lt;/p>
&lt;/li>
&lt;li>
&lt;p>特定检索&lt;/p>
&lt;ul>
&lt;li>
&lt;p>script（脚本检索）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>script_score（脚本评分检索）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>more like this（相似度检索）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>percolate&lt;/p>
&lt;/li>
&lt;li>
&lt;p>rank feature&lt;/p>
&lt;/li>
&lt;li>
&lt;p>wrapper&lt;/p>
&lt;/li>
&lt;li>
&lt;p>pinned query&lt;/p>
&lt;/li>
&lt;li>
&lt;p>distance feature&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>query和filter的区别&lt;/p>
&lt;ul>
&lt;li>
&lt;p>query用于评估文档相关性，并对结果进行评分，通常用于搜索场景&lt;/p>
&lt;/li>
&lt;li>
&lt;p>filter用于筛选文档，不会对文档评分，通常用于过滤场景&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>高亮、排序和分页&lt;/p>
&lt;ul>
&lt;li>
&lt;p>高亮语法&lt;/p>
&lt;ul>
&lt;li>
&lt;p>fragment_size：每个高亮片段的字符数&lt;/p>
&lt;/li>
&lt;li>
&lt;p>number_of_fragments：高亮最大片段数，如果片段数设置为0，则不返回任何高亮片段，而是将整个字段内容突出显示并返回，同时fragment_size将被忽略。默认值为5&lt;/p>
&lt;/li>
&lt;li>
&lt;p>fields：待高亮字段&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST kibana_sample_data_ecommerce/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;_source&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;products.product_name&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;match&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;products.product_name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;dress&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;highlight&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;number_of_fragments&amp;#34;&lt;/span>: 0,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;fragment_size&amp;#34;&lt;/span>: 150,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;fields&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;products.product_name&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;pre_tags&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;em&amp;gt;&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;post_tags&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;/em&amp;gt;&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>排序语法&lt;/p>
&lt;ul>
&lt;li>
&lt;p>_score：按分数排序&lt;/p>
&lt;/li>
&lt;li>
&lt;p>_doc：按索引顺序排序（通常用在scroll遍历上）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;match&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;乌兰&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;sort&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;popular_degree&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;order&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;desc&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;_score&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;order&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;asc&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>分页语法&lt;/p>
&lt;ul>
&lt;li>
&lt;p>from：表示结果集的起始位置，从0开始，默认值为0&lt;/p>
&lt;/li>
&lt;li>
&lt;p>size：表示每页返回的文档数量，默认值为10&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;from&amp;#34;&lt;/span>: 0,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;size&amp;#34;&lt;/span>: 10,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;match_all&amp;#34;&lt;/span>: &lt;span class="o">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>自定义评分&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Index Boost：在索引层面修改相关度&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index_*/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;indices_boost&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> my_index_1: 1.5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> my_index_2: 1.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;term&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;subject.keyword&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;subject&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>boosting：修改文档相关度&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;bool&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;must&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;match&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;新闻&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;boost&amp;#34;&lt;/span>: &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>negative_boost：降低相关度&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;boosting&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;positive&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;match&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;乌兰&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;negative&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;match&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;新闻&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;negative_boost&amp;#34;&lt;/span>: 0.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>function_score：自定义评分&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;function_score&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;match_all&amp;#34;&lt;/span>: &lt;span class="o">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;script_score&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;script&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;source&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;_score * (doc[&amp;#39;sales&amp;#39;].value + doc[&amp;#39;vistors&amp;#39;].value)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>rescore_query：查询后二次打分&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;match&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;乌兰&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;rescore&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;window_size&amp;#34;&lt;/span>: 50,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;rescore_query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;function_socre&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;script_score&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;script&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;source&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;doc[&amp;#39;popular_degree&amp;#39;].value&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>检索模板&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 定义检索模板&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">POST _scripts/cur_search_template
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;script&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;lang&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;mustache&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;source&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;match&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;{{cur_field}}&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;{{cur_value}}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;size&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;{{cur_size}}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 基于检索模板进行检索&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">POST my_index/_search/template
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;cur_search_template&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;params&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;cur_field&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;item_id&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;cur_value&amp;#34;&lt;/span>: 1,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;cur_size&amp;#34;&lt;/span>: &lt;span class="m">50&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>分页查询&lt;/p>
&lt;ul>
&lt;li>
&lt;p>from+size查询&lt;/p>
&lt;ul>
&lt;li>
&lt;p>优缺点&lt;/p>
&lt;ul>
&lt;li>
&lt;p>优点&lt;/p>
&lt;ul>
&lt;li>支持随机翻页&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>缺点&lt;/p>
&lt;ul>
&lt;li>
&lt;p>限于max_result_window设置，不能无限制翻页&lt;/p>
&lt;/li>
&lt;li>
&lt;p>存在深度翻页问题，越往后翻页越慢&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>适用场景&lt;/p>
&lt;ul>
&lt;li>
&lt;p>小型数据集或者从大数据集中返回Top N(N≤10000)结果集的业务场景&lt;/p>
&lt;/li>
&lt;li>
&lt;p>主流PC搜索引擎中支持随机跳转分页的业务场景&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>不适用场景&lt;/p>
&lt;ul>
&lt;li>
&lt;p>过度分页或一次请求太多结果&lt;/p>
&lt;ul>
&lt;li>原因：搜索请求通常会跨多个分片，每个分片必须将其请求的命中内容以及先前页面的命中内容加载到内存中，会显著增加内存和CPU使用率，导致性能下降&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>search_after查询&lt;/p>
&lt;ul>
&lt;li>
&lt;p>执行步骤&lt;/p>
&lt;ul>
&lt;li>
&lt;p>创建PIT视图&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST kibana_sample_data_logs/_pit?keep_alive&lt;span class="o">=&lt;/span>5m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>创建基础查询语句&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">GET /_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;size&amp;#34;&lt;/span>: 10,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;match&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;host&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;elastic&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;pit&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 上一步请求返回的id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;xxx&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;sort&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;response.keyword&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;asc&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>实现后续翻页&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">GET /_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;size&amp;#34;&lt;/span>: 10,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;match&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;host&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;elastic&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;pit&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;xxx&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;sort&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;response.keyword&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;asc&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 上一步返回的sort结果&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;search_after&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;200&amp;#34;&lt;/span>, &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>优缺点&lt;/p>
&lt;ul>
&lt;li>
&lt;p>优点&lt;/p>
&lt;ul>
&lt;li>不严格受制于max_result_window（单次请求值不能超过max_result_window），可以无限地往后翻页&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>缺点&lt;/p>
&lt;ul>
&lt;li>只支持向后翻页，不支持随机翻页&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>适用场景&lt;/p>
&lt;ul>
&lt;li>适合在手机端应用的场景中使用&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>scroll查询&lt;/p>
&lt;ul>
&lt;li>
&lt;p>执行步骤&lt;/p>
&lt;ul>
&lt;li>
&lt;p>指定检索语句的同时设置scroll上下文保留时间&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST kibana_sample_data_logs/_search?scroll&lt;span class="o">=&lt;/span>3m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;size&amp;#34;&lt;/span>: 100,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;query&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;match&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;host&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;elastic&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>向后翻页，继续获取数据，直到没有要返回的结果为止&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST _search/scroll
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;sroll&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;3m&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 上一步请求返回的id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;scroll_id&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;xxx&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>优缺点&lt;/p>
&lt;ul>
&lt;li>
&lt;p>优点&lt;/p>
&lt;ul>
&lt;li>支持全量遍历，是检索大量文档的重要方法，但单次遍历的size值不能超过max_result_window的大小&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>缺点&lt;/p>
&lt;ul>
&lt;li>响应是非实时的；保留上下文需要具有足够的堆内存空间；需要通过更多的网络请求才能获取所有结果&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>适用场景&lt;/p>
&lt;ul>
&lt;li>
&lt;p>大量文档检索：当要检索的文档数量很大，甚至需要全量召回数据时，scroll查询是一个很好的选择&lt;/p>
&lt;/li>
&lt;li>
&lt;p>大量文档的数据处理：滚动API适合对大量文档进行数据处理，例如索引迁移或将数据导入其他技术栈&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="elasticsearch聚合">Elasticsearch聚合&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>聚合分类&lt;/p>
&lt;ul>
&lt;li>
&lt;p>分桶聚合：用于将数据分组&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Terms分桶聚合（分组聚合结果）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Range范围聚合（分区间聚合）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Histogram直方图聚合（间隔聚合）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Date histogram日期聚合（时间间隔聚合）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Date range日期范围聚合（自定义日期范围聚合）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Composite组合聚合（支持聚合后分页）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Filters过滤聚合（满足给定过滤条件的聚合）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;size&amp;#34;&lt;/span>: 0,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;aggs&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;color_terms_agg&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;terms&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;field&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;color&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>指标聚合：用于计算数据的指标&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Avg平均值聚合（求平均值）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Sum汇总聚合（求汇总之和）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Max最大值聚合（求最大值）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Min最小值聚合（求最小值）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Stats统计聚合（求统计结果值）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Top hits详情聚合（求各外层桶的详情）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Cardinality去重聚合（去重）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Value count计数聚合（计数）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;size&amp;#34;&lt;/span>: 0,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;aggs&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;max_agg&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;max&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;field&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;size&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>管道子聚合：对其他聚合的结果进行再次计算和分析，用于对数据进行复杂的分析&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Bucket selector选择子聚合&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Bucket sort排序子聚合&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Max bucket最大值子聚合&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Min bucket最小值子聚合&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Stats bucket统计子聚合&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Sum bucket求和子聚合&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">POST my_index/_search
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;size&amp;#34;&lt;/span>: 0,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;aggs&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;hole_terms_agg&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;terms&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;field&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;has_hole&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;aggs&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;max_value_agg&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;max&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;field&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;size&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;max_hole_color_agg&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;max_bucket&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;buckets_path&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;hole_terms_agg&amp;gt;max_value_agg&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;br/></description><category domain="https://ithorizon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/">学习笔记</category><category domain="https://ithorizon.top/tags/elasticsearch/">ElasticSearch</category><category domain="https://ithorizon.top/tags/es/">ES</category></item><item><title>书籍学习-一本书讲透Elasticsearch：原理、进阶和工程实践（一）</title><link>https://ithorizon.top/posts/2024-08-19-learning_es_1_1/</link><guid isPermaLink="true">https://ithorizon.top/posts/2024-08-19-learning_es_1_1/</guid><pubDate>Mon, 19 Aug 2024 09:28:00 +0000</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;blockquote>
&lt;p>本文是个人学习书籍《一本书讲透Elasticsearch：原理、进阶和工程实践》过程中所记录的一些笔记，内容来源于书籍&lt;/p>
&lt;/blockquote>
&lt;h2 id="elastic-stack全景">Elastic Stack全景&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>ELK Stack：Elasticsearch、Logstash、Kibana&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Elastic Stack：Elasticsearch（存储、查询）、Logstash + Beats（采集、清洗）、Kibana（可视化）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch特点&lt;/p>
&lt;ul>
&lt;li>
&lt;p>RESTful API&lt;/p>
&lt;/li>
&lt;li>
&lt;p>横向扩展节点&lt;/p>
&lt;/li>
&lt;li>
&lt;p>面向文档&lt;/p>
&lt;/li>
&lt;li>
&lt;p>无模式，无须定义好字段类型、长度等&lt;/p>
&lt;/li>
&lt;li>
&lt;p>近实时搜索&lt;/p>
&lt;/li>
&lt;li>
&lt;p>响应快&lt;/p>
&lt;/li>
&lt;li>
&lt;p>易扩展&lt;/p>
&lt;/li>
&lt;li>
&lt;p>多租户&lt;/p>
&lt;/li>
&lt;li>
&lt;p>多语言&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Logstash：提供免费且开放的服务器端数据处理管道(pipeline)，能够从多个不同的数据源采集数据、转换数据，然后将数据发送到诸如Elasticsearch等“存储库”中&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Kibana：集成了丰富的可视化工具、界面交互开发工具和管理工具，可以辅助技术人员进行开发、调试和运维工作，并可以自定义各种维度的数据报表&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Beats：集合了多种单一用途的数据采集器，这些数据采集器包含轻量型日志采集器Filebeat、轻量型指标采集器Metricbeat、轻量型网络数据采集器Packetbeat等&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Elastic Stack应用场景&lt;/p>
&lt;ul>
&lt;li>
&lt;p>全文检索&lt;/p>
&lt;/li>
&lt;li>
&lt;p>日志分析&lt;/p>
&lt;/li>
&lt;li>
&lt;p>商业智能&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="elasticsearch基础知识">Elasticsearch基础知识&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>搜索引擎的目标&lt;/p>
&lt;ul>
&lt;li>
&lt;p>全面性&lt;/p>
&lt;/li>
&lt;li>
&lt;p>速度&lt;/p>
&lt;/li>
&lt;li>
&lt;p>准确性&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>搜索引擎的核心要求&lt;/p>
&lt;ul>
&lt;li>
&lt;p>识别用户真正的需求&lt;/p>
&lt;/li>
&lt;li>
&lt;p>匹配用户需求&lt;/p>
&lt;/li>
&lt;li>
&lt;p>找到可信数据&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>检索质量的评价指标&lt;/p>
&lt;ul>
&lt;li>
&lt;p>召回率：在一次返回的搜索结果中与搜索关键词相关的文档占所有相关文档的比例&lt;/p>
&lt;/li>
&lt;li>
&lt;p>精准率：本次搜索结果中相关文档所占的比例&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>倒排索引：在一个文档集合中，每个文档都可视为一个词语的集合，倒排索引则是将词语映射到包含这个词语的文档的数据结构&lt;/p>
&lt;/li>
&lt;li>
&lt;p>全文检索：全文检索的前提是待检索的数据已经索引化，当用户查询时能根据建立的倒排索引进行查找&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch的核心概念&lt;/p>
&lt;ul>
&lt;li>
&lt;p>集群：一组Elasticsearch节点的集合&lt;/p>
&lt;/li>
&lt;li>
&lt;p>节点：一个Elasticsearch实例，更确切地说，它是一个Elasticsearch进程&lt;/p>
&lt;/li>
&lt;li>
&lt;p>索引：用于存储和管理相关数据的逻辑容器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>分片：包含索引数据的一个子集，并且其本身具有完整的功能和独立性，可以将分片近似看作“独立索引“&lt;/p>
&lt;/li>
&lt;li>
&lt;p>副本：为了保证集群的容错性和高可用性、提高查询的吞吐率，Elasticsearch提供了复制数据的特性。分片可以被复制，被复制的分片称为“主分片“，主分片的复制版本称为“副本“&lt;/p>
&lt;/li>
&lt;li>
&lt;p>文档：存储在Elasticsearch索引中的JSON对象&lt;/p>
&lt;/li>
&lt;li>
&lt;p>字段：Elasticsearch中最小的单个数据单元，类似于关系型数据库表中的字段&lt;/p>
&lt;/li>
&lt;li>
&lt;p>映射：映射类似于关系型数据库中的Schema，可以近似地理解为“表结构”&lt;/p>
&lt;/li>
&lt;li>
&lt;p>分词：构建倒排索引的重要一环&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="elasticsearch集群部署">Elasticsearch集群部署&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Elasticsearch集群堆内存设置建议：将堆大小配置为服务器可用内存的50%，上限为32GB，且预留足够的内存给操作系统以提升缓存效率&lt;/p>
&lt;/li>
&lt;li>
&lt;p>节点角色（node.roles配置项）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>主节点：关键作用主要在全局管理上，如管理索引的创建和删除、监控集群节点、确认分片分配、存储重要的元数据（索引的元数据、集群的元数据）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>专用候选主节点（master）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>仅投票主节点：仅用于投票，不会被选为主节点（master, voting_only）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>数据节点：保存数据、执行数据处理操作（data）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>内容数据节点：存储、搜索、索引数据（data_content）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>热数据节点：保存最近、最常访问的热数据（data_hot）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>温数据节点：保存访问频次低且很少更新的时序数据（data_warm）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>冷数据节点：保存不经常访问且通常不更新的时序数据（data_cold）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>冷冻数据节点：保存很少访问且从不更新的时序数据（data_frozen）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>注意：data_hot、data_warm和data_cold需要和data_content一起配置，数据的实际存储需要靠data_content角色&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>ingest节点：通常执行由预处理管道组成的预处理任务（ingest）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>仅协调节点：负责路由分发请求、聚合结果（配置项为空）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>远程节点：用于跨集群检索或跨集群复制（remote_cluster_client）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>机器学习节点（ml, remote_cluster_client）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>转换节点（transform）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Elasticsearch集群核心配置&lt;/p>
&lt;ul>
&lt;li>
&lt;p>network.host，不修改时默认为开发模式，节点配置错误时只会在日志中写入警告信息，节点依然能启动；修改后会升级为生产模式，一旦配置错误，则节点无法正常启动&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Linux前置配置&lt;/p>
&lt;ul>
&lt;li>
&lt;p>修改文件描述符数量限制（调高）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改最大映射数量（调高）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>elasticsearch.yml配置文件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>jvm.option配置文件&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="elasticsearch索引">Elasticsearch索引&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>定义&lt;/p>
&lt;ul>
&lt;li>
&lt;p>名称&lt;/p>
&lt;/li>
&lt;li>
&lt;p>settings&lt;/p>
&lt;ul>
&lt;li>
&lt;p>静态设置&lt;/p>
&lt;/li>
&lt;li>
&lt;p>动态设置&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>mappings&lt;/p>
&lt;ul>
&lt;li>可以将索引映射理解成MySQL中的表结构Schema&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>aliases&lt;/p>
&lt;ul>
&lt;li>
&lt;p>一个索引可以创建多个别名&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一个别名也可以指向多个索引&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>操作&lt;/p>
&lt;ul>
&lt;li>
&lt;p>新增/创建索引&lt;/p>
&lt;ul>
&lt;li>
&lt;p>方式一：详细定义索引设置、映射、别名&lt;/p>
&lt;/li>
&lt;li>
&lt;p>方式二：只定义索引名，而settings、mappings取默认值&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>删除索引&lt;/p>
&lt;ul>
&lt;li>
&lt;p>方式一：删除索引（推荐）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>方式二：结合delete_by_query和match_all实现清空，还能保留索引&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>修改索引&lt;/p>
&lt;/li>
&lt;li>
&lt;p>查询索引&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>索引别名&lt;/p>
&lt;/li>
&lt;li>
&lt;p>索引模板&lt;/p>
&lt;ul>
&lt;li>
&lt;p>定义&lt;/p>
&lt;ul>
&lt;li>
&lt;p>普通模板（_index_template）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>组件模板（_component_template）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>映射下的动态模板（dynamic_templates）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="elasticsearch映射">Elasticsearch映射&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>映射的定义&lt;/p>
&lt;ul>
&lt;li>
&lt;p>元字段&lt;/p>
&lt;ul>
&lt;li>
&lt;p>标识元字段&lt;/p>
&lt;ul>
&lt;li>
&lt;p>_index：表示文档所属的索引&lt;/p>
&lt;/li>
&lt;li>
&lt;p>_id：表示文档的id&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>文档源字段&lt;/p>
&lt;ul>
&lt;li>
&lt;p>_source：表示代表文档正文的原始JSON对象&lt;/p>
&lt;/li>
&lt;li>
&lt;p>_size：表示source字段的大小（以字节为单位）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>索引元字段&lt;/p>
&lt;ul>
&lt;li>
&lt;p>_field_names：表示给定文档中包含非空值的所有字段&lt;/p>
&lt;/li>
&lt;li>
&lt;p>_ignored：表示由于设置ignore_malformed而在索引时被忽略的字段&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>路由元字段&lt;/p>
&lt;ul>
&lt;li>_routing：用于将给定文档路由到指定的分片&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>其他元字段&lt;/p>
&lt;ul>
&lt;li>
&lt;p>_meta：表示应用程序特定的元数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>_tier：指定文档所属索引的数据层级别&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>数据类型&lt;/p>
&lt;ul>
&lt;li>
&lt;p>基本类型&lt;/p>
&lt;ul>
&lt;li>
&lt;p>binary：编码为Base64字符串的二进制类型&lt;/p>
&lt;/li>
&lt;li>
&lt;p>boolean：仅支持true和false的布尔类型&lt;/p>
&lt;/li>
&lt;li>
&lt;p>keyword：支持精准匹配的keyword类型、const_keyword类型和wildcard类型&lt;/p>
&lt;/li>
&lt;li>
&lt;p>number：数值类型，如integer、long、float、double等&lt;/p>
&lt;/li>
&lt;li>
&lt;p>date：日期类型，包括date和date_nanos&lt;/p>
&lt;/li>
&lt;li>
&lt;p>alias：别名类型，字段级别的别名&lt;/p>
&lt;/li>
&lt;li>
&lt;p>text：字段级别的别名&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>复杂数据类型&lt;/p>
&lt;ul>
&lt;li>
&lt;p>数组类型：Array&lt;/p>
&lt;/li>
&lt;li>
&lt;p>JSON对象类型：Object&lt;/p>
&lt;/li>
&lt;li>
&lt;p>嵌套数据类型：Nested&lt;/p>
&lt;/li>
&lt;li>
&lt;p>父子关联类型：Join&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Flattened类型：将原来一个复杂的Object或者Nested嵌套多字段类型统一映射为扁平的单字段类型&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>专用数据类型&lt;/p>
&lt;ul>
&lt;li>
&lt;p>坐标数据类型：用于保存地理位置详细信息&lt;/p>
&lt;/li>
&lt;li>
&lt;p>IP类型：表示IPV4或IPV6地址&lt;/p>
&lt;/li>
&lt;li>
&lt;p>completion类型：是Elasticsearch中的一种专用字段类型，旨在实现高效的自动补全功能&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>多字段类型：为相同字段生成多种数据类型&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>映射类型&lt;/p>
&lt;ul>
&lt;li>
&lt;p>动态映射：自动检测字段类型后添加新字段（boolean类型、float类型、long类型、Object类型、Array类型、date类型、字符串类型支持动态检测，除此之外的类型是不支持动态检测匹配的，会适配为text类型）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>弊端&lt;/p>
&lt;ul>
&lt;li>
&lt;p>字段匹配不准确&lt;/p>
&lt;/li>
&lt;li>
&lt;p>占据多余的存储空间&lt;/p>
&lt;/li>
&lt;li>
&lt;p>映射可能错误泛滥&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>静态映射：在数据建模前，需要明确文档中各个字段的类型&lt;/p>
&lt;ul>
&lt;li>
&lt;p>忽略动态添加字段（mappings内指定dynamic为false）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>严格禁止动态添加字段（mappings内指定dynamic为“strict”）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>映射创建后还可以更新吗&lt;/p>
&lt;ul>
&lt;li>
&lt;p>已经定义的字段在大多数情况下不能更新，除非通过reindex操作来更新映射，但有3种情况例外：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Object对象可以添加新的属性&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在已经存在的字段里面可以添加fields，以构成一个字段多种类型&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ignore_above是可以更新的&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Nested类型及应用&lt;/p>
&lt;ul>
&lt;li>
&lt;p>没有特殊的字段类型说明，那么默认写入的嵌套数据映射为Object类型，其嵌套的字段部分被扁平化为一个简单的字段名称和值列表&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Nested类型是Object数据类型的升级版本，它允许对象以彼此独立的方式进行索引&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Join类型及应用&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Join类型的重要特点&lt;/p>
&lt;ul>
&lt;li>
&lt;p>对于每个索引，仅允许定义一个与Join类型关联的映射&lt;/p>
&lt;/li>
&lt;li>
&lt;p>父文档和子文档必须在同一个分片上写入索引&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一个文档可以有多个子文档，但一个子文档只能有一个父文档&lt;/p>
&lt;/li>
&lt;li>
&lt;p>可以为已经存在的Join类型添加新的关系&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当一个文档已经成为父文档后，就可以为该文档添加子文档&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Flattened类型及应用&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Flattened字段就是用来解决字段膨胀问题的&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用Flattened类型，Elasticsearch未对字段进行分词等处理，因此它只会返回匹配字母大小写且完全一致的结果&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Flattened类型的不足&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Flattened不支持的查询类型&lt;/p>
&lt;ul>
&lt;li>
&lt;p>无法执行涉及数字计算的查询&lt;/p>
&lt;/li>
&lt;li>
&lt;p>无法支持高亮查询&lt;/p>
&lt;/li>
&lt;li>
&lt;p>尽管支持诸如term聚合之类的聚合，但不支持处理诸如histograms或date_histograms之类的数值数据的聚合&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>多表关联设计&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Elasticsearch多表关联方案&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Nested嵌套类型&lt;/p>
&lt;ul>
&lt;li>
&lt;p>适用于一对少量、子文档偶尔更新、查询频繁的场景&lt;/p>
&lt;/li>
&lt;li>
&lt;p>优点&lt;/p>
&lt;ul>
&lt;li>
&lt;p>可以将父子关系的两部分数据关联起来&lt;/p>
&lt;/li>
&lt;li>
&lt;p>可以基于Nested类型做任何查询&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>缺点&lt;/p>
&lt;ul>
&lt;li>
&lt;p>查询相对较慢&lt;/p>
&lt;/li>
&lt;li>
&lt;p>更新子文档时需要更新整篇文档&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Join父子文档类型&lt;/p>
&lt;ul>
&lt;li>
&lt;p>适用于子文档数据量明显多于父文档的数据量的场景&lt;/p>
&lt;/li>
&lt;li>
&lt;p>优点&lt;/p>
&lt;ul>
&lt;li>父子文档可独立更新&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>缺点&lt;/p>
&lt;ul>
&lt;li>维护Join关系需要占据部分内存，查询较Nested类型更耗资源&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>宽表冗余存储&lt;/p>
&lt;ul>
&lt;li>
&lt;p>对每个文档保持一定数量的冗余数据以避免访问时进行多表关联&lt;/p>
&lt;/li>
&lt;li>
&lt;p>优点&lt;/p>
&lt;ul>
&lt;li>速度快，本质是以空间换时间&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>缺点&lt;/p>
&lt;ul>
&lt;li>
&lt;p>索引更新或删除数据时，应用程序不得不处理宽表的冗余数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>某些搜索和聚合操作的结果可能不准确&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>业务端关联&lt;/p>
&lt;ul>
&lt;li>在应用接口层面处理关联关系，适用于数据量少的多表关联业务场景&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>内部数据结构&lt;/p>
&lt;ul>
&lt;li>
&lt;p>倒排索引&lt;/p>
&lt;ul>
&lt;li>
&lt;p>从单词到文档的映射关系的最佳实现形式&lt;/p>
&lt;/li>
&lt;li>
&lt;p>特点&lt;/p>
&lt;ul>
&lt;li>
&lt;p>在索引时创建&lt;/p>
&lt;/li>
&lt;li>
&lt;p>序列化到磁盘&lt;/p>
&lt;/li>
&lt;li>
&lt;p>全文搜索速度非常快&lt;/p>
&lt;/li>
&lt;li>
&lt;p>不适合做排序&lt;/p>
&lt;/li>
&lt;li>
&lt;p>默认开启&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>适用场景&lt;/p>
&lt;ul>
&lt;li>
&lt;p>文本搜索引擎&lt;/p>
&lt;/li>
&lt;li>
&lt;p>文档检索系统&lt;/p>
&lt;/li>
&lt;li>
&lt;p>企业内部搜索&lt;/p>
&lt;/li>
&lt;li>
&lt;p>社交媒体分析&lt;/p>
&lt;/li>
&lt;li>
&lt;p>新闻和论文检索&lt;/p>
&lt;/li>
&lt;li>
&lt;p>数据挖掘&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>正排索引&lt;/p>
&lt;ul>
&lt;li>
&lt;p>在Elasticsearch中，正排索引(doc_values)就是一种列式存储结构，默认情况下每个字段的doc_values都是激活的（除了text类型）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>特点&lt;/p>
&lt;ul>
&lt;li>
&lt;p>在索引时创建&lt;/p>
&lt;/li>
&lt;li>
&lt;p>序列化到磁盘&lt;/p>
&lt;/li>
&lt;li>
&lt;p>适合排序、聚合操作&lt;/p>
&lt;/li>
&lt;li>
&lt;p>将单个字段的所有值一起存储在单个数据列中&lt;/p>
&lt;/li>
&lt;li>
&lt;p>默认情况下，除text之外的所有字段类型均启用正排索引&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>适用场景&lt;/p>
&lt;ul>
&lt;li>
&lt;p>对一个字段进行排序、聚合&lt;/p>
&lt;/li>
&lt;li>
&lt;p>某些过滤场景，比如地理位置过滤&lt;/p>
&lt;/li>
&lt;li>
&lt;p>某些与字段相关的脚本计算&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>fielddata&lt;/p>
&lt;ul>
&lt;li>
&lt;p>当text字段被用于聚合、排序或脚本操作时，fielddata会按需构建相应的数据结构。通过从磁盘读取每个字段的完整倒排索引，反转词项与文档之间的关系，并将结果存储在JVM堆的内存中构建的&lt;/p>
&lt;/li>
&lt;li>
&lt;p>特点&lt;/p>
&lt;ul>
&lt;li>
&lt;p>仅适用于text字段类型&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在查询时创建&lt;/p>
&lt;/li>
&lt;li>
&lt;p>是基于内存的数据结构&lt;/p>
&lt;/li>
&lt;li>
&lt;p>没有序列化到磁盘&lt;/p>
&lt;/li>
&lt;li>
&lt;p>默认情况下被禁用&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>适用场景&lt;/p>
&lt;ul>
&lt;li>
&lt;p>全文统计词频&lt;/p>
&lt;/li>
&lt;li>
&lt;p>全文生成词云&lt;/p>
&lt;/li>
&lt;li>
&lt;p>聚合、排序、脚本计算&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>_source字段&lt;/p>
&lt;ul>
&lt;li>_source字段包含索引时传递的原始JSON文档主体&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>store字段&lt;/p>
&lt;ul>
&lt;li>默认情况下，对字段值进行索引以使其可搜索（如倒排索引），但不存储它们。字段值是_source字段的一部分，默认情况下已存储。但对于某些特殊场景，比如你只想检索单个字段或几个字段的值，而不是整个_source的值，这时store字段就派上用场了&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>null_value&lt;/p>
&lt;ul>
&lt;li>
&lt;p>使用null_value参数可以用指定的值替换显式的空值，以便对其进行索引和搜索&lt;/p>
&lt;/li>
&lt;li>
&lt;p>text类型不支持null_value，如果需要，可以使用multi_fields，借助keyword和text组合类型达到业务需求&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="elasticsearch分词">Elasticsearch分词&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>分词发生的阶段&lt;/p>
&lt;ul>
&lt;li>
&lt;p>写入阶段&lt;/p>
&lt;/li>
&lt;li>
&lt;p>执行检索阶段&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>分词器的组成&lt;/p>
&lt;ul>
&lt;li>
&lt;p>字符过滤（character filter，0个或多个）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>文本切分为分词（tokenizer，1个）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>分词后再过滤（token filter，0个或多个）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>分词器的分类&lt;/p>
&lt;ul>
&lt;li>
&lt;p>支持不同语言的分词器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>默认分词器（standard分词器）：将词汇单元转换成小写，并去除停用词和标点符号&lt;/p>
&lt;/li>
&lt;li>
&lt;p>其他典型的分词器（如IK分词等）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>分词选型注意事项&lt;/p>
&lt;ul>
&lt;li>
&lt;p>若数据量非常少且不要求子串高亮，则可以考虑keyword&lt;/p>
&lt;/li>
&lt;li>
&lt;p>若数据量大且要求子串高亮，则推荐使用Ngram分词，结合match或者match_phrase检索实现&lt;/p>
&lt;/li>
&lt;li>
&lt;p>若数据量大，则不建议使用wildcard前缀匹配&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="elasticsearch预处理">Elasticsearch预处理&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Elasticsearch数据预处理是指在从数据源写入Elasticsearch的中间环节对数据进行的处理操作&lt;/p>
&lt;/li>
&lt;li>
&lt;p>预处理步骤&lt;/p>
&lt;ul>
&lt;li>
&lt;p>定义预处理管道，通过管道实现数据预处理（_ingest/pipeline/xxx）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>写入数据关联预处理管道&lt;/p>
&lt;/li>
&lt;li>
&lt;p>写入数据&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>enrich预处理&lt;/p>
&lt;ul>
&lt;li>
&lt;p>能在不同索引间通过相同的关联字段，从一个索引向另一个索引扩充字段信息&lt;/p>
&lt;/li>
&lt;li>
&lt;p>组成部分&lt;/p>
&lt;ul>
&lt;li>
&lt;p>enrich policy（_enrich/policy/xxx）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>source index（源索引）：用于丰富新写入文档的索引&lt;/p>
&lt;/li>
&lt;li>
&lt;p>enrich index（丰富索引）：执行enrich policy生成的索引&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Elasticsearch内部管理的系统级索引&lt;/p>
&lt;/li>
&lt;li>
&lt;p>用途很单一，仅用于enrich processor&lt;/p>
&lt;/li>
&lt;li>
&lt;p>以.enrich-*开头&lt;/p>
&lt;/li>
&lt;li>
&lt;p>只读，不支持人为修改&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description><category domain="https://ithorizon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/">学习笔记</category><category domain="https://ithorizon.top/tags/elasticsearch/">ElasticSearch</category><category domain="https://ithorizon.top/tags/es/">ES</category></item><item><title>推荐工程-模型管理平台</title><link>https://ithorizon.top/posts/model_platform/</link><guid isPermaLink="true">https://ithorizon.top/posts/model_platform/</guid><pubDate>Mon, 19 Aug 2024 09:06:00 +0000</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;h2 id="背景">背景&lt;/h2>
&lt;p>随着业务的发展，需要使用到模型的场景越来越多，实现一个统一的模型管理平台来规范模型处理流程，提供模型从训练、发布到预测的生命周期管理，可以极大地方便算法同学的快速迭代模型。因此，从功能角度看，要求模型管理平台至少需要具备以下能力：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>提供模型生命周期管理，包含模型注册、发布、加载、预测、卸载&lt;/p>
&lt;/li>
&lt;li>
&lt;p>保障离线训练与在线预测的一致性&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="平台架构">平台架构&lt;/h2>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/5f/17/5f175178dc2a40e28cabf5d6ebd0110b.png" alt="Untitled.png">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Model Admin：模型管理后台&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Model Management：提供模型的注册、发布、模拟预测等功能&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Transformer Management：提供预处理实现在离线机器学习平台（LAI）热加载的功能&lt;/p>
&lt;/li>
&lt;li>
&lt;p>File Management：提供预处理文件配置管理功能&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Model Service：模型服务&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Model API：提供模型预测接口&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Feature：获取特征流程&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Preprocessing：预处理流程&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Prediction：预测流程&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Model Loading：提供模型加载/卸载&lt;/p>
&lt;ul>
&lt;li>
&lt;p>XGBoost：XGBoost模型加载&lt;/p>
&lt;/li>
&lt;li>
&lt;p>TensorFlow：TensorFlow模型加载&lt;/p>
&lt;/li>
&lt;li>
&lt;p>PMML：PMML模型格式加载&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>HDFS：存放由机器学习平台（LAI）训练生成的模型相关文件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>MySQL：存放模型管理后台写入模型配置等数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Redis：存放用户、用户-物品交叉特征&lt;/p>
&lt;/li>
&lt;li>
&lt;p>RocksDB：存放物品特征&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="核心功能">核心功能&lt;/h2>
&lt;h3 id="模型注册">模型注册&lt;/h3>
&lt;p>为了方便感知线上都有哪些模型，在模型发布前，需要先在平台预先注册模型名，后续机器学习平台（LAI）的模型发布组件需要填写相关的模型名和模型配置key&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/70/83/70839df556eefc8b0d0670337a4d63d4.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="模型发布">模型发布&lt;/h3>
&lt;ul>
&lt;li>模型发布分成两步，首先得先通过机器学习平台（LAI）的模型发布组件进行模型发布（此时的发布只是将模型相关文件发往HDFS）&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/94/8d/948d6e796e25ac20c7421da6236c53c9.png" alt="Untitled.png">&lt;/p>
&lt;ul>
&lt;li>然后再通过模型管理界面，手动点击发布按钮，往指定的环境发布模型（操作成功后模型服务会感知到并进行模型加载）&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/fa/eb/faeb1ea9eba17b73c369f5cfb88a337e.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="模型预测">模型预测&lt;/h3>
&lt;p>模型被模型服务加载后，可以通过模型管理界面的模拟请求按钮进入模拟请求界面（判断模型是否加载完毕可以通过界面上显示的日期版本（代表的是最新版本），如下图红框，未有版本加载时显示为0），填写请求相关参数即可请求模型预测出结果&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/09/17/0917ec7b4d0074ce072f9963aa26f601.png" alt="Untitled.png">&lt;/p>
&lt;h2 id="未来规划">未来规划&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>下沉模型预处理到C++层，优化模型预测性能&lt;/p>
&lt;/li>
&lt;li>
&lt;p>模型请求监控&lt;/p>
&lt;/li>
&lt;li>
&lt;p>模型部署容器化隔离&lt;/p>
&lt;/li>
&lt;/ul></description><category domain="https://ithorizon.top/categories/%E6%8E%A8%E8%8D%90%E5%B7%A5%E7%A8%8B%E7%B3%BB%E5%88%97/">推荐工程系列</category><category domain="https://ithorizon.top/tags/%E6%8E%A8%E8%8D%90%E5%B7%A5%E7%A8%8B/">推荐工程</category><category domain="https://ithorizon.top/tags/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/">工作总结</category><category domain="https://ithorizon.top/tags/%E6%A8%A1%E5%9E%8B%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0/">模型管理平台</category></item><item><title>数据对接平台</title><link>https://ithorizon.top/posts/2024_05_29-data_dock_platform/</link><guid isPermaLink="true">https://ithorizon.top/posts/2024_05_29-data_dock_platform/</guid><pubDate>Wed, 29 May 2024 08:07:00 +0000</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;blockquote>
&lt;p>对跨系统业务数据对接流程进行标准化处理，采用配置化的方式进行数据对接需求的开发，从而提高数据对接的开发效率以及问题排查效率，减少在数据对接需求上所投入的人力成本&lt;/p>
&lt;/blockquote>
&lt;h2 id="背景">背景&lt;/h2>
&lt;p>随着公司业务的发展，所服务的客户越来越多时，经常会遇到需要将客户业务系统中（比如ERP等系统）的数据对接到公司所提供的系统内、或者将公司内部系统的数据推送给客户的业务系统这样的需求，这部分需求往往是提供一些基础的数据，是在系统交付上线前所必须要完成的。所以每服务一个新的客户时，一般都避免不了在这一部分投入一些开发资源。因此如果能够提高这部分需求的开发效率的话，对于系统能否尽早交付有很大的帮助。&lt;/p>
&lt;p>早期公司内对于数据对接的需求处理方式最初是来一个对接需求时就定制化开发一个，后面发现对于同样的基础数据对接，其基本的对接流程都是差不多的，比如将客户业务系统的数据对接到公司内部系统的流程一般是这样的：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>从客户业务系统中读取数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>将读取到的数据写入到数据库中间表中&lt;/p>
&lt;/li>
&lt;li>
&lt;p>从中间表获取数据，并做一些转换或者其他的业务处理&lt;/p>
&lt;/li>
&lt;li>
&lt;p>将处理完的数据写入到公司内部系统中&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>基于上面的流程，数据对接的处理做了一些优化，引入了流程处理引擎&lt;code>liteflow&lt;/code>，将流程里的第2步和第4步做通用化处理，每次新需求开发时仅需要处理第1步和第3步的业务，减少了部分的工作量。但是这个过程中还是需要做比较多代码开发，代码质量依赖于开发个人能力，并且这个对接过程相对黑箱，一旦流程出现问题时，排查时如果缺乏了一些日志记录，很难定位到问题。&lt;/p>
&lt;p>为解决以上问题，推动了数据对接平台的建设，期望平台能够满足以下核心诉求：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>标准化数据对接场景，沉淀公司内部平台对外的OpenApi接口&lt;/p>
&lt;/li>
&lt;li>
&lt;p>针对大部分基础数据对接的需求，实现零代码开发（除标准OpenApi接口开发外），通过配置完成对接&lt;/p>
&lt;/li>
&lt;li>
&lt;p>将对接流程透明化，即能够看到流程每一步的执行过程，出现问题时能够快速定位到问题&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="平台架构">平台架构&lt;/h2>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/52/7c/527cebc3c973f506da0fd0e91142f900.png" alt="Untitled.png">&lt;/p>
&lt;h2 id="核心功能">核心功能&lt;/h2>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/81/22/8122061cde4b601717c7fe2172b9df67.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="站点">站点&lt;/h3>
&lt;p>站点类似于租户的概念，在实际应用中一般会为一个企业建立一个站点，站点间的数据是可以相互隔离的，具体是可以通过数据库配置为每个站点配置独立的存储数据的数据库。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/09/3c/093cd4d553ae270bb87c08a3c988090a.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="客户端">客户端&lt;/h3>
&lt;p>客户端是指部署在客户环境上的程序（具体是一个可执行jar包），由它建立与客户环境上相关数据源的联系，通过采集（读数据）或出仓（写数据）任务进行相关数据的同步。客户端在部署时需要在管理平台上进行登记，获取一个身份标识（AK访问秘钥），以此来与云端服务进行交互。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/47/09/47093d14ea7a9e42c1d485587d02855a.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="数据源">数据源&lt;/h3>
&lt;p>数据源是对数据的输入和输出方式的抽象，具体可以是通过Web API、数据库、消息队列等方式，每种数据源都有其独特的配置，比如Web API需要指定具体的访问域名、认证方式等，数据库需要指定数据库类型（目前支持MySQL、Oracle）、连接地址、账号密码等，消息队列需要指定消息队列类型（目前支持Kafka、Solace）、连接地址、账号密码等。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/60/13/60132fbcb28dd48739bfdd438ea03d36.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="接口">接口&lt;/h3>
&lt;p>接口隶属于具体的数据源，是定义数据具体是从哪里输入或输出的，以及输入或输出的细节。以Web API数据源为例，一个真实的HTTP获取数据接口可以定义为一个读接口，需要指定具体的请求方式、请求头、请求体、返回结果字段映射等，接口定义完后是在后续的任务中使用。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/b9/ed/b9ed28b60a986a3580ad659d9e70b10c.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="数据字典">数据字典&lt;/h3>
&lt;p>数据字典用来管理流到云端的数据，可以是一个数据库物理表或一个常量表。通常客户端采集程序所读取并上报的数据会写到对应的数据字典表中，以供后续进行计算或出仓使用。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/cb/fe/cbfeaa5bebc6e9d6e89a8bb1bb64cc11.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="采集任务">采集任务&lt;/h3>
&lt;p>采集任务负责定义如何从外部系统采集数据到云端，这里会使用到前面所定义好的接口（具体是读接口）来采集数据，以及定义好的数据字典来存储数据，并且可以选择一个合适的采集频率执行，以此可以不断地采集新产生的数据。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/1c/94/1c94d024221be4361e9b8047a986df47.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="计算任务">计算任务&lt;/h3>
&lt;p>计算任务用于数据的转换计算，如果从客户端所采集上来的数据不满足最终需要落地的数据，可以定义计算任务来处理成最终想要的数据，目前计算任务支持定义SQL来做转换，并且是可以独立执行的，不依赖于其他任务。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/50/4b/504b81ba381d09f10456a34066e397d9.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="出仓任务">出仓任务&lt;/h3>
&lt;p>出仓负责定义如何将云端的数据输出给外部系统，这里会从定义好的数据字典中读取数据，并使用定义好的接口（具体是写接口）来输出数据。出仓任务是以监控数据字典中数据状态的形式来执行的，当有未出仓的数据时会触发任务执行。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/a6/27/a6272ce57f74366cbdbcc2a6507d0dfd.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="任务调度记录">任务调度记录&lt;/h3>
&lt;p>任务调度记录用于记录任务（采集任务、计算任务、出仓任务）每次调度的情况，包含请求内容，响应内容等关键执行日志，便于查看或排查问题。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/22/ef/22effcf7db9d9fda6508cd426374122c.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="开放接口">开放接口&lt;/h3>
&lt;p>开放接口是⽀持外部系统主动往平台推送数据的形式，与采集任务主动采集外部系统数据的形式相反，但最终的数据都是需要落到数据字典中存储。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/a0/8d/a08d40b74c5fc6db3c8af22a323c6436.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="开放接口调度记录">开放接口调度记录&lt;/h3>
&lt;p>同任务调度记录作用，记录开放接⼝每次被调度的情况，包含请求内容，响应内容等关键执行日志，便于查看或排查问题。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/a7/d3/a7d3375e6d0fc641d26a2a90213aa553.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="用户">用户&lt;/h3>
&lt;p>作为一个独立的平台，有自身的用户体系，方便后续针对用户做权限控制。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/f3/84/f384e9652ac004d613d80320dae1491d.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="告警">告警&lt;/h3>
&lt;p>告警主要是用于当任务执⾏失败时，推送相关的告警信息到⻜书、钉钉、企微等协作平台上，以便相关责任人能够及时介入处理。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/5d/6b/5d6b2c51aaa89207415b65532bad0476.png" alt="Untitled.png">&lt;/p></description><category domain="https://ithorizon.top/categories/%E6%95%B0%E6%8D%AE%E5%AF%B9%E6%8E%A5%E7%B3%BB%E5%88%97/">数据对接系列</category><category domain="https://ithorizon.top/tags/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/">工作总结</category><category domain="https://ithorizon.top/tags/%E6%95%B0%E6%8D%AE%E5%AF%B9%E6%8E%A5/">数据对接</category></item><item><title>采坑系列-Mybatis-plus 3.0-RELEASE逻辑删除Bug</title><link>https://ithorizon.top/posts/2023_08_30-mybatisplus_logic_delete_bug/</link><guid isPermaLink="true">https://ithorizon.top/posts/2023_08_30-mybatisplus_logic_delete_bug/</guid><pubDate>Tue, 29 Aug 2023 16:31:00 +0000</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;blockquote>
&lt;p>采坑系列是记录日常学习/工作中所遇到的问题，可能是一个Bug、一次性能优化、一次思考等，目的是记录自己所处理过的问题，以及解决问题这一过程中所做的思考或总结，避免后续再犯相似的错误。&lt;/p>
&lt;/blockquote>
&lt;h1 id="问题描述">问题描述&lt;/h1>
&lt;p>公司后端开发规范中需要有逻辑删除字段来实现软删除（即针对删除操作不会删除实际的记录，只会更新对应逻辑删除字段的值，并且在查询时自动加上过滤条件过滤掉被标识为删除的记录），项目中所使用的ORM框架为&lt;code>Mybatis-plus&lt;/code>，其支持实现逻辑删除的功能，详情见&lt;a href="https://baomidou.gitee.io/mybatis-plus-doc/#/logic-delete">官方文档&lt;/a>。但在实际使用过程中发现一个奇怪的现象：前辈们告知&lt;strong>逻辑删除字段需要作为实体类的最后一个属性（即放在最后），否则其功能会失效&lt;/strong>，具体原因不是很清晰。&lt;/p>
&lt;p>因个人在开发中将逻辑删除字段放在了基类中，不确定会不会影响逻辑删除功能的正常使用，本着严谨以及好奇的态度，决定实际探究一下：为什么逻辑删除字段需要作为实体类的最后一个属性？（保持质疑-。-）&lt;/p>
&lt;h1 id="探究原因">探究原因&lt;/h1>
&lt;h2 id="复现">复现&lt;/h2>
&lt;p>首先清楚项目中所使用的&lt;code>Mybatis-plus&lt;/code>版本是&lt;code>3.0-RELEASE&lt;/code>（这个很关键，因为就是它的问题！）&lt;/p>
&lt;p>然后就是通过Demo（详细见&lt;a href="https://github.com/linyanbin666/samples/tree/main/mybatis-plus-logic-delete-bug">示例代码&lt;/a>中的&lt;code>DemoEntityMapperTest#testSelect&lt;/code>）复现出查询时逻辑删除功能生效与失效的现象（尝试将&lt;code>BaseEntity&lt;/code>中的逻辑删除字段&lt;code>deleted&lt;/code>放在最后和非最后，查看效果）&lt;/p>
&lt;ul>
&lt;li>当&lt;code>deleted&lt;/code>放在最后时，从生成的SQL语句看是有自动添加逻辑删除条件的，如下图：&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/6c/7f/6c7f6d1063db191527e20d33aabb0b6c.png" alt="Untitled.png">&lt;/p>
&lt;ul>
&lt;li>当&lt;code>deleted&lt;/code>放在非最后时（例如移到&lt;code>modifyTime&lt;/code>上面），可以看到并没有自动加上逻辑删除条件，如下图：&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/cd/57/cd57d964653dc5bb53bbd35103f6004c.png" alt="Untitled.png">&lt;/p>
&lt;h2 id="调试">调试&lt;/h2>
&lt;h3 id="确定入口">确定入口&lt;/h3>
&lt;p>以上用于复现问题使用的方法为&lt;code>BaseMapper#selectList&lt;/code>，根据&lt;u>&lt;em>&lt;a href="https://juejin.cn/post/7002423698565103653">Mybatis-plus的BaseMapper实现原理&lt;/a>&lt;/em>&lt;/u>，自定义逻辑的实现会对应一个&lt;code>AbstractMethod&lt;/code>实现类，又因为我们Demo中使用了&lt;code>LogicSqlInjector&lt;/code>，其提供了一系列的实现类，而&lt;code>selectList&lt;/code>方法对应的实现类为&lt;code>LogicSelectList&lt;/code>，所以从该类进入调试&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/75/e4/75e461ea6562ac4d87c30b3590bacb00.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="跟踪执行">跟踪执行&lt;/h3>
&lt;p>跟踪&lt;code>LogicSelectList&lt;/code>类的执行可看到逻辑删除过滤条件的处理是放在父类&lt;code>AbstractLogicMethod&lt;/code>的&lt;code>sqlWhereEntityWrapper&lt;/code>方法中，其直接获取&lt;code>TableInfo&lt;/code>类的&lt;code>logicDelete&lt;/code>属性，问题中所返回的结果为&lt;code>false&lt;/code>，跳过了逻辑删除过滤条件的处理。到这里可以知道为什么逻辑删除功能没有生效了，但是具体原因还得看看为什么&lt;code>logicDelete&lt;/code>属性是设置为&lt;code>false&lt;/code>的&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/1d/70/1d7012963e595f92900448d276f3358c.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="寻找根因">寻找根因&lt;/h3>
&lt;p>通过寻找对&lt;code>TableInfo&lt;/code>类的&lt;code>logicDelete&lt;/code>属性进行设置的地方（通过IDEA Find Usages），最终可以找到是在&lt;code>TableFieldInfo&lt;/code>类中的构造函数中进行设置的，其中&lt;code>initLogicDelete&lt;/code>方法就是判断字段是否有标识&lt;code>@TableLogic&lt;/code>注解&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/ec/14/ec147cf12c1052a2e72d5d48cf447fba.png" alt="Untitled.png">&lt;/p>
&lt;p>而&lt;code>TableFieldInfo&lt;/code>实例创建的地方是在&lt;code>TableInfoHelper&lt;/code>类的&lt;code>initTableFields&lt;/code>方法中。该方法会通过反射获取实体类中的所有字段（包含父类的），然后遍历这些字段创建成对应的&lt;code>TableFieldInfo&lt;/code>元数据对象，即每个字段会调用一次&lt;code>TableFieldInfo&lt;/code>的构造函数，而在构造函数中会对&lt;code>TableInfo&lt;/code>类的&lt;code>logicDelete&lt;/code>属性直接进行&lt;strong>覆盖赋值&lt;/strong>（参考上图）。从这里就可以看到，如果最后一个字段不是逻辑删除字段的话，&lt;code>TableInfo&lt;/code>类的&lt;code>logicDelete&lt;/code>属性就为&lt;code>false&lt;/code>了&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/2a/bc/2abcd7cb535c95d618a40911d316e905.png" alt="Untitled.png">&lt;/p>
&lt;p>到这里就知道为什么逻辑删除字段需要作为实体类的最后一个属性了，根本原因就是&lt;code>Mybatis-plus&lt;/code> &lt;code>3.0-RELEASE&lt;/code>内部代码的问题，正常的话应该只需要判断有一个字段标识了逻辑删除后，后面就不应该再对&lt;code>logicDelete&lt;/code>属性进行赋值了。另外从获取实体类字段列表的方法中可以看到，返回的列表会先添加实体类自身的字段，再添加父类中非重名的字段（以此类推）。因此&lt;strong>如果实体类有父类的话，逻辑删除字段必须放在最顶级的父类中（Object之下），并且作为最后一个属性&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/13/70/1370bda216573a50878409ff3bf812e6.png" alt="Untitled.png">&lt;/p>
&lt;h1 id="结论">结论&lt;/h1>
&lt;p>通过以上的分析，可以回答最初提到的问题：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Q：为什么逻辑删除字段需要作为实体类的最后一个属性？&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A：是因为项目所使用的&lt;code>Mybatis-plus 3.0-RELEASE&lt;/code>版本中有Bug所导致，其需要保证通过反射所获取的实体类字段列表中，逻辑删除字段（标识了&lt;code>@TableLogic&lt;/code>注解的）是最后一个元素。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Q：将逻辑删除字段放在了基类中，会不会影响逻辑删除功能的正常使用？&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A：如果实体类定义了基类，逻辑删除字段必须放在基类中，同样需作为最后一个属性，逻辑删除功能才能正常使用&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>回答了最初的问题后，需要另外注意的是&lt;code>Mybatis-plus&lt;/code>中是通过&lt;strong>反射&lt;/strong>来获取实体类字段列表的（即&lt;code>Class#getDeclaredFields&lt;/code>方法），我们实际上依赖的是这个方法返回的字段顺序，需要看该方法能否保证字段返回的顺序和我们在类中所定义的顺序一致。从该方法的注释上我们可以看到以下注释：&lt;/p>
&lt;blockquote>
&lt;p>The elements in the returned array are not sorted and are not in any particular order.&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>返回数组中的元素没有排序，也没有任何特定的顺序。
&lt;/code>&lt;/pre>
&lt;p>也就是说该方法并不会保证字段返回的顺序和我们在类中所定义的顺序一致，原因可见*&lt;a href="https://www.zhihu.com/question/52856385">Java反射中的getDeclaredFields()方法的疑问？&lt;/a>*（不保证并不代表就会不一致，至少目前项目在用的环境能够一致-。-），因此在&lt;code>Mybatis-plus 3.0-RELEASE&lt;/code>版本中即使我们保证将逻辑删除字段作为实体类的最后一个属性定义，还是存在逻辑删除功能失效的风险。如果要彻底避免这个风险，那只能升级&lt;code>Mybatis-plus&lt;/code>的版本（&lt;code>Mybatis-plus 3.0.1&lt;/code>版本开始已修复上述提到的Bug），但这个要结合实际情况评估升级的成本与必要性，不过对于新的项目来说，建议还是使用新版本。&lt;/p>
&lt;h1 id="参考">参考&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>&lt;a href="https://juejin.cn/post/7002423698565103653">MyBatis-Plus的BaseMapper实现原理&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.zhihu.com/question/52856385">Java反射中的getDeclaredFields()方法的疑问？&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol></description><category domain="https://ithorizon.top/categories/%E9%87%87%E5%9D%91%E7%B3%BB%E5%88%97/">采坑系列</category><category domain="https://ithorizon.top/tags/mybatis-plus/">Mybatis-Plus</category><category domain="https://ithorizon.top/tags/%E9%80%BB%E8%BE%91%E5%88%A0%E9%99%A4/">逻辑删除</category></item><item><title>专栏学习-MySQL实战45讲（三）</title><link>https://ithorizon.top/posts/2022-11-01-learning_mysql_45_3/</link><guid isPermaLink="true">https://ithorizon.top/posts/2022-11-01-learning_mysql_45_3/</guid><pubDate>Wed, 02 Nov 2022 07:03:00 +0000</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;blockquote>
&lt;p>本文是个人学习极客时间专栏《MySQL实战45讲》过程中所记录的一些笔记，内容来源于专栏&lt;/p>
&lt;/blockquote>
&lt;h2 id="mysql高可用">MySQL高可用&lt;/h2>
&lt;h3 id="主备延迟">主备延迟&lt;/h3>
&lt;p>在备库上执行 show slave status 命令，它的返回结果里面会显示 seconds_behind_master，用于表示当前备库延迟了多少秒。主备延迟的来源可能&lt;/p>
&lt;ul>
&lt;li>
&lt;p>备库所在机器的性能要比主库所在的机器性能差&lt;/p>
&lt;/li>
&lt;li>
&lt;p>备库的压力大&lt;/p>
&lt;/li>
&lt;li>
&lt;p>大事务，如一次性地用 delete 删除太多数据，大表 DDL 等&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="主备切换策略">主备切换策略&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>可靠性优先策略（有不可用时间）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>判断备库 B 现在的 seconds_behind_master，如果小于某个值（比如 5 秒）继续下一步，否则持续重试这一步；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>把主库 A 改成只读状态，即把 readonly 设置为 true；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>判断备库 B 的 seconds_behind_master 的值，直到这个值变成 0 为止；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>把备库 B 改成可读写状态，也就是把 readonly 设置为 false；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>把业务请求切到备库 B。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>可用性优先策略（有可能出现数据不一致）&lt;/p>
&lt;ul>
&lt;li>不等主备数据同步，直接把连接切到备库 B，并且让备库 B 可以读写&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="mysql-join">MySQL Join&lt;/h2>
&lt;h3 id="index-nested-loop-join">Index Nested-Loop Join&lt;/h3>
&lt;ul>
&lt;li>**可以用上被驱动表的索引。**先遍历驱动表（全表扫描），然后从驱动表中取出每行数据中的关联值，去被驱动表中查找满足条件的记录（树搜索）&lt;/li>
&lt;/ul>
&lt;h3 id="block-nested-loop-join">Block Nested-Loop Join&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>被驱动表上无索引可用&lt;/strong>。把驱动表的数据读入线程内存 join_buffer 中（全表扫描，存不下则分段取），把被驱动表的每一行取出来（全表扫描），跟 join_buffer 中的数据做对比，满足 join 条件的，作为结果集的一部分返回&lt;/li>
&lt;/ul>
&lt;h3 id="join-该怎么用">Join 该怎么用&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>能不能使用 join 语句？&lt;/p>
&lt;ul>
&lt;li>
&lt;p>如果可以使用 Index Nested-Loop Join 算法，也就是说可以用上被驱动表上的索引，其实是没问题的&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果使用 Block Nested-Loop Join 算法，扫描行数就会过多。尤其是在大表上的 join 操作，这样可能要扫描被驱动表很多次，会占用大量的系统资源。所以这种 join 尽量不要用&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>如果要使用 join，应该选择大表做驱动表还是选择小表做驱动表？&lt;/p>
&lt;ul>
&lt;li>总是应该使用小表做驱动表（&lt;strong>在决定哪个表做驱动表的时候，应该是两个表按照各自的条件过滤，过滤完成之后，计算参与 join 的各个字段的总数据量，数据量小的那个表，就是“小表”，应该作为驱动表&lt;/strong>）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="常见配置参数">常见配置参数&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>join_buffer_size&lt;/strong>：控制Join Buffer的大小，调大后可以避免多次的被驱动表扫描，从而提高性能。默认值为&lt;code>257KB&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="自增主键为什么不是连续的">自增主键为什么不是连续的&lt;/h2>
&lt;h3 id="自增值保存在哪">自增值保存在哪&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>MyISAM 引擎的自增值保存在数据文件中&lt;/p>
&lt;/li>
&lt;li>
&lt;p>InnoDB 引擎的自增值，其实是保存在了内存里，并且到了 MySQL 8.0 版本后，才有了“自增值持久化”的能力&lt;/p>
&lt;ul>
&lt;li>
&lt;p>在 MySQL 5.7 及之前的版本，自增值保存在内存里，并没有持久化。每次重启后，第一次打开表的时候，都会去找自增值的最大值 max(id)，然后将 max(id)+1 作为这个表当前的自增值&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在 MySQL 8.0 版本，将自增值的变更记录在了 redo log 中，重启的时候依靠 redo log 恢复重启之前的值&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="自增值修改机制">自增值修改机制&lt;/h3>
&lt;p>假设，某次要插入的值是 X，当前的自增值是 Y&lt;/p>
&lt;ul>
&lt;li>
&lt;p>如果 X &amp;lt; Y，那么这个表的自增值不变；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果 X ≥ Y，那么需要把当前自增值修改为新的自增值&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>新的自增值生成算法是：从 &lt;strong>auto_increment_offset&lt;/strong> 开始，以 &lt;strong>auto_increment_increment&lt;/strong> 为步长，持续叠加，直到找到第一个大于 X 的值，作为新的自增值。其中，auto_increment_offset 和 auto_increment_increment 是两个系统参数，分别用来表示&lt;strong>自增的初始值&lt;/strong>和&lt;strong>步长&lt;/strong>，默认值都是 1&lt;/p>
&lt;h3 id="自增值修改时机">自增值修改时机&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>表的自增值修改是在真正执行插入数据的操作之前&lt;/strong>，且自增值不会回退（MySQL 这么设计是为了提升性能，回退需要多一次判断id存不存在或需要扩大自增id锁的范围），所以如果插入数据操作失败（如唯一键冲突）或事务回滚，那么自增主键将出现不连续的情况（但是递增的）&lt;/li>
&lt;/ul>
&lt;h3 id="自增主键不连续的原因">自增主键不连续的原因&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>数据插入时发生唯一索引冲突&lt;/p>
&lt;/li>
&lt;li>
&lt;p>数据插入事务回滚&lt;/p>
&lt;/li>
&lt;li>
&lt;p>自增主键的批量申请。对于批量插入语句（如 insert … select、replace … select、load data 语句），MySQL 有一个批量申请自增 id 的策略，第一次申请分配1个自增id，后续每次申请的 id 都是上一次的两倍，当 id 用不到时会浪费掉&lt;/p>
&lt;/li>
&lt;/ul></description><category domain="https://ithorizon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/">学习笔记</category><category domain="https://ithorizon.top/tags/mysql/">MySQL</category><category domain="https://ithorizon.top/tags/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/">极客时间</category></item><item><title>专栏学习-MySQL实战45讲（二）</title><link>https://ithorizon.top/posts/2022-11-01-learning_mysql_45/</link><guid isPermaLink="true">https://ithorizon.top/posts/2022-11-01-learning_mysql_45/</guid><pubDate>Wed, 02 Nov 2022 06:56:00 +0000</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;blockquote>
&lt;p>本文是个人学习极客时间专栏《MySQL实战45讲》过程中所记录的一些笔记，内容来源于专栏&lt;/p>
&lt;/blockquote>
&lt;h2 id="mysql锁">MySQL锁&lt;/h2>
&lt;h3 id="全局锁">全局锁&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>全局锁就是对整个数据库实例加锁。MySQL提供了一个加全局读锁的方法，命令是 &lt;strong>Flush tables with read lock&lt;/strong> (FTWRL)。该命令的典型使用场景是做&lt;strong>全库逻辑备份&lt;/strong>。也就是把整库每个表都 select 出来存成文本。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>官方自带的逻辑备份工具是 &lt;strong>mysqldump&lt;/strong>。当 mysqldump 使用参数 —**single-transaction **的时候，导数据之前就会启动一个事务，来确保拿到一致性视图（可重复读隔离级别下）。而由于 MVCC 的支持，这个过程中数据是可以正常更新的。但该方法只适用于所有的表使用事务引擎的库&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="表级锁">表级锁&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>MySQL表级锁有两种，一种是&lt;strong>表锁&lt;/strong>，一种是&lt;strong>元数据锁&lt;/strong>（Meta data lock，MDL）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>表锁的语法是 lock tables … read/write，可以用 unlock tables 主动释放锁或等待客户端断开时自动释放&lt;/p>
&lt;/li>
&lt;li>
&lt;p>元数据锁（MDL）在 MySQL 5.5 版本引入，不需要显示使用，在访问一个表时会被自动加上。当对一个表做增删改查操作（DML）的时候，加 MDL 读锁；当要对表做结构变更操作（DDL）的时候，加 MDL 写锁。事务中的 MDL 锁，在语句执行开始时申请，但是语句结束后并不会马上释放，而会等到整个事务提交后再释放&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="行锁">行锁&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>在 InnoDB 事务中，行锁是在需要的时候才加上的，但并不是不需要了就立刻释放，而是要等到事务结束时才释放。这个就是两阶段锁协议。如果事务中需要锁多个行，要把最可能造成锁冲突、最可能影响并发度的锁尽量往后放&lt;/p>
&lt;/li>
&lt;li>
&lt;p>死锁应对策略&lt;/p>
&lt;ul>
&lt;li>
&lt;p>直接进入等待，直到超时。这个超时时间可以通过参数 innodb_lock_wait_timeout 来设置&lt;/p>
&lt;/li>
&lt;li>
&lt;p>发起死锁检测，发现死锁后，主动回滚死锁链条中的某一个事务，让其他事务得以继续执行。将参数 innodb_deadlock_detect 设置为 on，表示开启这个逻辑。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="加锁规则">加锁规则&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>加锁的基本单位是 next-key lock，next-key lock 是前开后闭区间&lt;/p>
&lt;/li>
&lt;li>
&lt;p>查找过程中访问到的对象才会加锁&lt;/p>
&lt;/li>
&lt;li>
&lt;p>索引上的等值查询，给唯一索引加锁的时候，next-key lock 退化为行锁&lt;/p>
&lt;/li>
&lt;li>
&lt;p>索引上的等值查询，向右遍历时且最后一个值不满足等值条件的时候，next-key lock 退化为间隙锁&lt;/p>
&lt;/li>
&lt;li>
&lt;p>唯一索引上的范围查询会访问到不满足条件的第一个值为止&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="常见配置参数">常见配置参数&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>innodb_lock_wait_timeout&lt;/strong>：设置锁申请的最长等待时间，默认值为50s&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>innodb_deadlock_detect&lt;/strong>：设置是否开启死锁检测机制，默认值为on&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="mysql视图">MySQL视图&lt;/h2>
&lt;h3 id="view">View&lt;/h3>
&lt;p>它是一个用查询语句定义的虚拟表，在调用的时候执行查询语句并生成结果。创建视图的语法是 create view … ，而它的查询方法与表一样&lt;/p>
&lt;h3 id="一致性读视图">一致性读视图&lt;/h3>
&lt;p>用于支持 RC（Read Committed，读提交）和 RR（Repeatable Read，可重复读）隔离级别的实现。它没有物理结构，作用是事务执行期间用来定义“我能看到什么数据”&lt;/p>
&lt;ul>
&lt;li>
&lt;p>使用 begin/start transaction 启动事务时，一致性视图是在执行第一个快照读语句时创建的&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用 start transaction with consistent snapshot 启动事务时（在可重复读隔离级别下才有意义），一致性视图是在执行该命令时创建的&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="快照在-mvcc-里是怎么工作的">“快照”在 MVCC 里是怎么工作的？&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>InnoDB 里面&lt;strong>每个事务有一个唯一的事务 ID&lt;/strong>，叫作 transaction id。它是在事务开始的时候向 InnoDB 的事务系统申请的，是按申请顺序严格递增的。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>每行数据也都是有多个版本的&lt;/strong>。每次事务更新数据的时候，都会生成一个新的数据版本，并且把 transaction id 赋值给这个数据版本的事务 ID，记为 row trx_id。通过当前版本和 undo log可以计算出历史版本&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在实现上， InnoDB 为每个事务构造了一个数组，用来保存这个事务启动瞬间，当前正在“活跃”的所有事务 ID。“活跃”指的就是，启动了但还没提交。数组里面事务 ID 的最小值记为低水位，当前系统里面已经创建过的事务 ID 的最大值加 1 记为高水位。这个视图数组和高水位，就组成了当前事务的&lt;strong>一致性视图&lt;/strong>（read-view）。而数据版本的可见性规则，就是基于数据的 row trx_id 和这个一致性视图的对比结果得到的。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/76/ea/76ea26fb081ee044c28b3a03957a7b53.png" alt="%E6%97%A0%E6%A0%87%E9%A2%98-2022-09-08-1154.png">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>对于当前事务的启动瞬间来说，一个数据版本的 row trx_id，有以下几种可能&lt;/p>
&lt;ul>
&lt;li>
&lt;p>如果落在已提交事务区域，表示这个版本是已提交的事务或者是当前事务自己生成的，这个数据是可见的；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果落在未开始事务区域，表示这个版本是由将来启动的事务生成的，是肯定不可见的；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果落在未提交事务区域，那就包括两种情况&lt;/p>
&lt;ul>
&lt;li>
&lt;p>若 row trx_id 在数组中，表示这个版本是由还没提交的事务生成的，不可见；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>若 row trx_id 不在数组中，表示这个版本是已经提交了的事务生成的，可见。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>通俗点的判断规则：一个数据版本，对于一个事务视图来说，除了自己的更新总是可见以外，有三种情况：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>版本未提交，不可见；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>版本已提交，但是是在视图创建后提交的，不可见；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>版本已提交，而且是在视图创建前提交的，可见。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>事务启动时根据某个条件读取到的数据，直到事务结束时，再次执行相同条件，还是读到同一份数据，不会发生变化，称为“&lt;/strong>&lt;span style='color:red'>&lt;strong>一致性读&lt;/strong>&lt;/span>&lt;strong>”&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>如果事务隔离级别为 REPEATABLE READ，则同一事务中的所有一致读将取该事务中第一个读请求所建立的快照&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果事务隔离级别为 READ COMMITTED 隔离级别，则在每次读请求时都会重新创建一份快照&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>更新数据都是先读后写的，而这个读，只能读当前的值，称为“&lt;/strong>&lt;span style='color:red'>&lt;strong>当前读&lt;/strong>&lt;/span>&lt;strong>”，除了 update 语句外，select 语句如果加锁，也是当前读&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="为什么我的mysql会抖一下">为什么我的MySQL会“抖”一下&lt;/h2>
&lt;h3 id="innodb脏页">Innodb脏页&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>可能引发脏页Flush的情况&lt;/p>
&lt;ul>
&lt;li>
&lt;p>redo log 写满了。这时候系统会停止所有更新操作，把 checkpoint 往前推进，对应的所有脏页都 flush 到磁盘上，redo log 留出空间可以继续写&lt;/p>
&lt;/li>
&lt;li>
&lt;p>系统内存不足。当需要新的内存页，而内存不够用的时候，就要淘汰一些数据页，空出内存给别的数据页使用。如果淘汰的是“脏页”，就要先将脏页写到磁盘&lt;/p>
&lt;/li>
&lt;li>
&lt;p>MySQL 认为系统“空闲”的时候，会进行刷脏页的操作&lt;/p>
&lt;/li>
&lt;li>
&lt;p>MySQL 正常关闭时，会把内存的脏页都 flush 到磁盘上&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>刷脏页的控制策略&lt;/p>
&lt;ul>
&lt;li>InnoDB 的刷盘速度要参考这两个因素：一个是&lt;strong>脏页比例&lt;/strong>，一个是 &lt;strong>redo log 写盘速度&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="常见配置参数-1">常见配置参数&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>innodb_io_capacity&lt;/strong>：定义了 InnoDB 后台任务每秒可用的I/O操作数(IOPS)，比如刷新 buffer pool 的页面和合并 change buffer 中的数据。默认值为&lt;code>200&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>innodb_max_dirty_pages_pct&lt;/strong>：用来控制 buffer pool 中脏页的百分比，当脏页数量占比超过这个参数设置的值时，InnoDB 会启动刷脏页的操作，默认值为&lt;code>90&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>innodb_flush_neighbors&lt;/strong>：用来控制 buffer pool 刷脏页时是否把脏页邻近的其他脏页一起刷到磁盘，5.7版本默认值为1， 8.0版本默认值为&lt;code>0&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>0&lt;/strong>：表示刷脏页时不刷其附近的脏页&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>1&lt;/strong>：表示刷脏页时连带其附近毗连的脏页一起刷掉&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>2&lt;/strong>：表示刷脏页时连带其附近区域的脏页一起刷掉，1与2的区别是2刷的区域更大一些&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="为什么表数据删掉一半表文件大小不变">为什么表数据删掉一半，表文件大小不变&lt;/h2>
&lt;h3 id="删除表数据">删除表数据&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>delete 命令只是把记录的位置，或者数据页标记为了“可复用”，但磁盘文件的大小是不会变的（标记删除）。这些可以复用，而没有被使用的空间，看起来就像是“空洞”&lt;/p>
&lt;/li>
&lt;li>
&lt;p>不止是删除数据会造成“空洞”，插入或更新数据因&lt;strong>页分裂&lt;/strong>操作也会产生“空洞”&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="重建表">重建表&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>可以使用 alter table t engine=InnoDB 命令来重建表&lt;/p>
&lt;/li>
&lt;li>
&lt;p>重建表的流程（Online DDL）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>建立一个临时文件，扫描表 A 主键的所有数据页&lt;/p>
&lt;/li>
&lt;li>
&lt;p>用数据页中表 A 的记录生成 B+ 树，存储到临时文件中&lt;/p>
&lt;/li>
&lt;li>
&lt;p>生成临时文件的过程中，将所有对 A 的操作记录在一个日志文件（row log）中&lt;/p>
&lt;/li>
&lt;li>
&lt;p>临时文件生成后，将日志文件中的操作应用到临时文件，得到一个逻辑数据上与表 A 相同的数据文件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>用临时文件替换表 A 的数据文件&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="常见配置参数-2">常见配置参数&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>innodb_file_per_table&lt;/strong>：用来控制表数据是存在共享表空间里，还是单独的文件，默认值为&lt;code>ON&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>ON&lt;/strong>：每个 InnoDB 表数据存储在一个以 .ibd 为后缀的文件中&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>OFF&lt;/strong>：表的数据放在系统共享表空间，也就是跟数据字典放在一起&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="count计数">count计数&lt;/h2>
&lt;h3 id="count的实现方式">count(*)的实现方式&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>MyISAM 引擎把一个表的总行数存在了磁盘上，因此执行 count(*) 的时候会直接返回这个数，效率很高（没有where条件的情况）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>InnoDB 引擎执行 count(*) 的时，需要把数据一行一行地从引擎里面读出来，然后累积计数（因为MVCC，无法像 MyISAM 那样）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="不同的-count-用法">不同的 count 用法&lt;/h3>
&lt;p>count() 的语义：count() 是一个聚合函数，对于返回的结果集，一行行地判断，如果 count 函数的参数不是 NULL，累计值就加 1，否则不加。最后返回累计值&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>count(主键 id)&lt;/strong>：InnoDB 引擎会遍历整张表，把每一行的 id 值都取出来，返回给 server 层。server 层拿到 id 后，判断是不可能为空的，就按行累加&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>count(1)&lt;/strong>：InnoDB 引擎遍历整张表，但不取值。server 层对于返回的每一行，放一个数字“1”进去，判断是不可能为空的，按行累加&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>count(字段)&lt;/strong>：InnoDB 引擎会遍历整张表，把每一行的字段值都取出来，返回给 server 层。server 层拿到字段值后，判断是不可能为空的，就按行累加。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>count(*)&lt;/strong>：并不会把全部字段取出来，而是专门做了优化，不取值。count(*) 肯定不是 null，按行累加&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;span style='color:red'>&lt;strong>按照效率排序的话，count(字段) &amp;lt; count(主键id) &amp;lt; count(1) ~= count(*)&lt;/strong>&lt;/span>&lt;/p>
&lt;h2 id="order-by是怎么工作的">“order by”是怎么工作的&lt;/h2>
&lt;h3 id="全字段排序-vs-rowid-排序">全字段排序 VS rowid 排序&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>全字段排序：server 从引擎获取查询的所有字段（含排序字段）放入 sort_buffer 中，再根据排序字段进行排序，按照排序结果返回给客户端&lt;/p>
&lt;/li>
&lt;li>
&lt;p>rowid 排序：server 从引擎获取排序字段和主键id放入 sort_buffer 中，再根据排序字段进行排序，按照排序结果拿 id 的值回到原表中取出待查询的字段返回给客户端（对于InnoDB 表来说，rowid 排序会要求回表多造成磁盘读，因此不会被优先选择）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="常见参数配置">常见参数配置&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>sort_buffer_size&lt;/strong>：MySQL 为排序开辟的内存（sort_buffer）的大小。如果要排序的数据量小于 sort_buffer_size，排序就在内存中完成。但如果排序数据量太大，内存放不下，则不得不利用磁盘临时文件辅助排序。默认值为&lt;code>256KB&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="为什么只查一行的语句也执行这么慢">为什么只查一行的语句，也执行这么慢&lt;/h2>
&lt;h3 id="查询长时间不返回">查询长时间不返回&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>等MDL锁&lt;/strong>（show processlist 命令查看 Waiting for table metadata lock 的状态，处理方式就是找到谁持有 MDL 写锁，然后把它 kill 掉）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>**等 flush **（show processlist 命令查看 Waiting for table flush 的状态（出现 Waiting for table flush 状态的可能情况是：有一个 flush tables 命令被别的语句堵住了，然后它又堵住了我们的 select 语句，处理方式就是干掉阻塞源头）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>等行锁&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="查询慢">查询慢&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>无索引，走全表扫描&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当一致性读需要回溯的版本很多时，会比较慢&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="短期提高性能的做法">短期提高性能的做法&lt;/h2>
&lt;h3 id="短连接风暴">短连接风暴&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>处理掉那些占着连接但是不工作的线程&lt;/p>
&lt;/li>
&lt;li>
&lt;p>减少连接过程的消耗，如让数据库跳过权限验证阶段&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="慢查询性能问题">慢查询性能问题&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>索引没有设计好。通过紧急创建索引来解决&lt;/p>
&lt;/li>
&lt;li>
&lt;p>SQL 语句没写好。通过改写 SQL 语句来处理，MySQL 5.7 提供了 query_rewrite 功能，可以把输入的一种语句改写成另外一种模式&lt;/p>
&lt;/li>
&lt;li>
&lt;p>MySQL 选错了索引。使用查询重写功能，给原来的语句加上 force index&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="qps-突增问题">QPS 突增问题&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>数据库端下掉业务的处理方法&lt;/p>
&lt;ul>
&lt;li>
&lt;p>白名单机制。如果能够确定业务方会下掉这个功能，只是时间上没那么快，那么就可以从数据库端直接把白名单去掉&lt;/p>
&lt;/li>
&lt;li>
&lt;p>账号机制。如果这个新功能使用的是单独的数据库用户，可以用管理员账号把这个用户删掉，然后断开现有连接&lt;/p>
&lt;/li>
&lt;li>
&lt;p>把压力大的SQL使用查询重写做降级&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="io性能问题">I/O性能问题&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>设置 binlog_group_commit_sync_delay 和 binlog_group_commit_sync_no_delay_count 参数，减少 binlog 的写盘次数。可能会增加语句的响应时间，但没有丢失数据的风险。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>将 sync_binlog 设置为大于 1 的值（比较常见是 100~1000）。这样做的风险是，主机掉电时会丢 binlog 日志&lt;/p>
&lt;/li>
&lt;li>
&lt;p>将 innodb_flush_log_at_trx_commit 设置为 2。这样做的风险是，主机掉电的时候会丢数据&lt;/p>
&lt;/li>
&lt;/ul></description><category domain="https://ithorizon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/">学习笔记</category><category domain="https://ithorizon.top/tags/mysql/">MySQL</category><category domain="https://ithorizon.top/tags/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/">极客时间</category></item><item><title>书籍学习-深入理解Java虚拟机（二）</title><link>https://ithorizon.top/posts/2022-10-19-learning_jvm_2/</link><guid isPermaLink="true">https://ithorizon.top/posts/2022-10-19-learning_jvm_2/</guid><pubDate>Wed, 19 Oct 2022 07:41:00 +0000</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;blockquote>
&lt;p>本文是个人学习书籍《深入理解Java虚拟机》过程中所记录的一些笔记，内容来源于书籍&lt;/p>
&lt;/blockquote>
&lt;h2 id="虚拟机字节码执行引擎">虚拟机字节码执行引擎&lt;/h2>
&lt;h3 id="运行时栈帧结构">运行时栈帧结构&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>局部变量表：用于存放方法参数和方法内部定义的局部变量，以Slot为最小单位&lt;/p>
&lt;/li>
&lt;li>
&lt;p>操作数栈：用于存放方法执行过程中所做的各种运算的操作数以及结果&lt;/p>
&lt;/li>
&lt;li>
&lt;p>动态连接：每个栈帧都包含一个指向运行时常量池中该栈帧所属方法的引用，持有这个引用是为了支持方法调用过程中的动态连接&lt;/p>
&lt;/li>
&lt;li>
&lt;p>方法返回地址&lt;/p>
&lt;/li>
&lt;li>
&lt;p>附加信息&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="方法调用">方法调用&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>解析（静态）：调用目标在程序代码写好、编译器进行编译时就确定下来的&lt;/p>
&lt;ul>
&lt;li>
&lt;p>静态方法（invokestatic）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>私有方法、实例构造器、父类方法（invokespecial）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>final修饰的方法（invokevirtual）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>分派（静态+动态）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>静态分派：依赖&lt;strong>静态类型&lt;/strong>来定位方法执行版本的分派，典型应用是方法重载&lt;/p>
&lt;/li>
&lt;li>
&lt;p>动态分派：运行期根据&lt;strong>实际类型&lt;/strong>确定方法执行版本的分派，典型应用是方法重写&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="程序编译与代码优化">程序编译与代码优化&lt;/h1>
&lt;h2 id="早期编译器优化">早期（编译器）优化&lt;/h2>
&lt;h3 id="javac编译器">Javac编译器&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>编译过程&lt;/p>
&lt;ul>
&lt;li>
&lt;p>解析与填充符号表过程&lt;/p>
&lt;/li>
&lt;li>
&lt;p>插入式注解处理器的注解处理过程&lt;/p>
&lt;/li>
&lt;li>
&lt;p>分析与字节码生成过程&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="晚期运行期优化">晚期（运行期）优化&lt;/h2>
&lt;h3 id="即时编译器">即时编译器&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>解释器与编译器&lt;/p>
&lt;ul>
&lt;li>
&lt;p>分层编译&lt;/p>
&lt;ul>
&lt;li>
&lt;p>第0层，程序解释执行&lt;/p>
&lt;/li>
&lt;li>
&lt;p>第1层，也称C1编译，将字节码编译为本地代码，进行简单、可靠的优化&lt;/p>
&lt;/li>
&lt;li>
&lt;p>第2层（或2层以上），也称C2编译，也是将字节码编译为本地代码，但会启用一些编译耗时较长的优化，甚至会根据性能监控信息进行一些不可靠的激进优化&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>热点探测&lt;/p>
&lt;ul>
&lt;li>
&lt;p>基于采样的热点探测&lt;/p>
&lt;/li>
&lt;li>
&lt;p>基于计数器的热点探测（HotSpot采用）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>方法计数器：用于统计方法被调用的次数（默认会有热度衰减，即超过一定时间限度不满足阈值条件时次数将会被减半，可见统计的不是方法的绝对调用次数）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>回边计数器：用于统计一个方法中循环体代码执行的次数（默认没有热度衰减，因此统计的是该方法循环执行的绝对次数）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>编译优化技术&lt;/p>
&lt;ul>
&lt;li>
&lt;p>公用子表达式消除&lt;/p>
&lt;ul>
&lt;li>如果表达式E已经计算过了，且到现在E中所有变量的值没有发生变化，那么E的这次出现就成为了公共子表达式&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>数组范围检查消除&lt;/p>
&lt;/li>
&lt;li>
&lt;p>方法内联&lt;/p>
&lt;/li>
&lt;li>
&lt;p>逃逸分析&lt;/p>
&lt;ul>
&lt;li>
&lt;p>为优化代码手段提供依据的分析技术，基本行为就是分析对象动态作用域&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果能证明一个对象不会逃逸到方法或线程之外，可为这个变量进行一些高效的优化&lt;/p>
&lt;ul>
&lt;li>
&lt;p>栈上分配&lt;/p>
&lt;/li>
&lt;li>
&lt;p>同步消除&lt;/p>
&lt;/li>
&lt;li>
&lt;p>标量替换&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="高效并发">高效并发&lt;/h1>
&lt;h2 id="java内存模型与线程">Java内存模型与线程&lt;/h2>
&lt;h3 id="java内存模型">Java内存模型&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>目的&lt;/p>
&lt;ul>
&lt;li>屏蔽掉各种硬件和操作系统的内存访问差异，以实现让Java程序在各种平台下都能达到一致的内存访问效果&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>主内存和工作内存&lt;/p>
&lt;ul>
&lt;li>
&lt;p>所有共享变量都存储在主内存，每条线程都有自己的工作内存&lt;/p>
&lt;/li>
&lt;li>
&lt;p>工作内存中保存了该线程使用到的变量的主内存副本拷贝&lt;/p>
&lt;/li>
&lt;li>
&lt;p>线程对变量的所有操作都必须在工作内存中进行，而不能直接读写主内存中的变量&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>内存间交互操作&lt;/p>
&lt;ul>
&lt;li>
&lt;p>lock：作用于主内存的变量，把一个变量标识为线程独占状态&lt;/p>
&lt;/li>
&lt;li>
&lt;p>unlock：作用于主内存的变量，把一个处于锁定状态的变量释放出来&lt;/p>
&lt;/li>
&lt;li>
&lt;p>read：作用于主内存的变量，把一个变量的值从主内存传输到线程的工作内存中，以便随后的load操作使用&lt;/p>
&lt;/li>
&lt;li>
&lt;p>load：作用于工作内存的变量，把read操作从主内存中得到的变量值放入工作内存的变量副本中&lt;/p>
&lt;/li>
&lt;li>
&lt;p>use：作用于工作内存的变量，把工作内存中一个变量的值传递给执行引擎&lt;/p>
&lt;/li>
&lt;li>
&lt;p>assign：作用于工作内存的变量，把一个从执行引擎接收到的值赋给工作内存的变量&lt;/p>
&lt;/li>
&lt;li>
&lt;p>store：作用于工作内存的变量，把工作内存中一个变量的值传输到主内存中，以便随后的write操作使用&lt;/p>
&lt;/li>
&lt;li>
&lt;p>write：作用于主内存的变量，把store操作从工作内存中得到的变量的值放入主内存的变量中&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>volatile特性/语义&lt;/p>
&lt;ul>
&lt;li>
&lt;p>保证变量对所有线程的可见性，即当线程修改了变量的值后，新值对于其他线程来说是立即得知的&lt;/p>
&lt;/li>
&lt;li>
&lt;p>禁止指令重排序优化&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>先行发生原则（用来确定一个访问在并发环境下是否安全）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>程序次序规则&lt;/p>
&lt;ul>
&lt;li>&lt;strong>在一个线程内&lt;/strong>，按照程序代码顺序，书写在前面的操作先行发生于书写在后面的操作&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>管程锁定的规则&lt;/p>
&lt;ul>
&lt;li>一个unlock操作先行发生于后面对同一个锁的lock操作&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>volatile变量规则&lt;/p>
&lt;ul>
&lt;li>对一个volatile变量的写操作先行发生于后面对这个变量的读操作&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>线程启动规则&lt;/p>
&lt;ul>
&lt;li>Thread对象的start方法先行发生于此线程的每个动作&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>线程终止规则&lt;/p>
&lt;ul>
&lt;li>线程中的所有操作都先行发生于对此线程的终止检测，我们可以通过Thread.join()方法结束、Thread.isAlive()的返回值等手段检测到线程已经终止执行&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>线程中断规则&lt;/p>
&lt;ul>
&lt;li>对线程interrupt()方法的调用先行发生于被中断线程的代码检测到中断事件的发生，可以通过Thread.interrupted()方法检测到是否有中断发生&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>对象终结规则&lt;/p>
&lt;ul>
&lt;li>一个对象的初始化完成先行发生于它的finalize()方法的开始&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>传递性&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="java与线程">Java与线程&lt;/h2>
&lt;h3 id="java线程调度">Java线程调度&lt;/h3>
&lt;ul>
&lt;li>抢占式线程调度&lt;/li>
&lt;/ul>
&lt;h3 id="线程的实现">线程的实现&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>使用内核线程的实现&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用用户线程的实现&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用用户线程加轻量级进程混合实现&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Java线程的实现：基于操作系统原生线程模型来实现&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="状态转换">状态转换&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>线程状态&lt;/p>
&lt;ul>
&lt;li>
&lt;p>新建（New）：创建后未启动的线程处于这种状态&lt;/p>
&lt;/li>
&lt;li>
&lt;p>运行（Runable）：Runable包括了操作系统线程状态中的Running和Ready&lt;/p>
&lt;/li>
&lt;li>
&lt;p>无限等待（Waiting）：处于这种状态的线程不会被分配CPU执行时间，它们要等待被其他线程显示地唤醒&lt;/p>
&lt;ul>
&lt;li>
&lt;p>没有设置Timeout参数的Object.wait()方法&lt;/p>
&lt;/li>
&lt;li>
&lt;p>没有设置Timeout参数的Thread.join()方法&lt;/p>
&lt;/li>
&lt;li>
&lt;p>LockSupport.park()方法&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>限期等待（Timed Waiting）：处于这种状态的线程不会被分配CPU执行时间，不过无须等待被其他线程显示地唤醒，在一定时间之后它们会由系统自动唤醒&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Thread.sleep()方法&lt;/p>
&lt;/li>
&lt;li>
&lt;p>设置了Timeout参数的Object.wait()方法&lt;/p>
&lt;/li>
&lt;li>
&lt;p>设置了Timeout参数的Thread.join()方法&lt;/p>
&lt;/li>
&lt;li>
&lt;p>LockSupport.parkNanos()方法&lt;/p>
&lt;/li>
&lt;li>
&lt;p>LockSupport.parkUntil()方法&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>阻塞（Blocked）：线程被阻塞了&lt;/p>
&lt;/li>
&lt;li>
&lt;p>终止（Terminated）：已终止线程的状态&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="线程安全与锁优化">线程安全与锁优化&lt;/h2>
&lt;h3 id="java中的线程安全">Java中的线程安全&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>不可变&lt;/p>
&lt;/li>
&lt;li>
&lt;p>绝对线程安全&lt;/p>
&lt;/li>
&lt;li>
&lt;p>相对线程安全&lt;/p>
&lt;ul>
&lt;li>保证对这个对象单独的操作式线程安全的，不需要做额外的保障措施，但对于一些特定顺序的连续调用，可能需要在调用端使用额外的同步手段来保证&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>线程兼容&lt;/p>
&lt;ul>
&lt;li>对象本身并不是线程安全的，但可以通过在调用端正确地使用同步手段来保证对象在并发环境中可以安全地使用&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>线程对立&lt;/p>
&lt;ul>
&lt;li>无论调用端是否采取了同步措施，都无法在多线程环境中并发使用的代码&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="线程安全的实现方法">线程安全的实现方法&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>互斥同步&lt;/p>
&lt;ul>
&lt;li>
&lt;p>synchronized&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ReentrantLock&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>非阻塞同步&lt;/p>
&lt;ul>
&lt;li>CAS&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>无同步&lt;/p>
&lt;ul>
&lt;li>
&lt;p>可重入代码：如果一个方法，它的返回结果是可以预测的，只要输入了相同的数据，就都能返回相同的结果&lt;/p>
&lt;/li>
&lt;li>
&lt;p>线程本地存储&lt;/p>
&lt;ul>
&lt;li>ThreadLocal&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="锁优化">锁优化&lt;/h2>
&lt;h3 id="自旋锁与自适应自旋">自旋锁与自适应自旋&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>自旋锁：线程在获取不到锁时不进行阻塞，而是执行一个忙循环（自旋），等待锁的释放&lt;/p>
&lt;/li>
&lt;li>
&lt;p>自适应自旋：自旋时间不固定，而是由前一次在同一个锁上的自旋时间及锁的拥有者状态来决定&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="锁消除">锁消除&lt;/h3>
&lt;ul>
&lt;li>锁消除：虚拟机即时编译器在运行时，对一些代码上要求同步，但是被检测到不可能存在共享数据竞争的锁进行消除，主要判断依据来源于逃逸分析的数据支持&lt;/li>
&lt;/ul>
&lt;h3 id="锁粗化">锁粗化&lt;/h3>
&lt;ul>
&lt;li>锁粗化：如果一系列的连续操作都对同一对象反复加锁和解锁，虚拟机会扩展锁的范围，以减少频繁地进行互斥同步操作导致不必要的性能损耗&lt;/li>
&lt;/ul>
&lt;h3 id="轻量级锁">轻量级锁&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>目的：在没有多线程竞争的前提下，减少传统的重量级锁使用操作系统互斥量产生的性能消耗&lt;/p>
&lt;/li>
&lt;li>
&lt;p>加解锁过程&lt;/p>
&lt;ul>
&lt;li>
&lt;p>加锁&lt;/p>
&lt;ul>
&lt;li>
&lt;p>在当前线程栈帧中创建锁记录（Lock Record）的空间，用于存储锁对象目前Mark Word的拷贝&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用CAS尝试将对象的Mark Word更新为指向Lock Record的指针，操作成功即线程获得该对象的锁，操作失败再检测Mark Word是否已指向当前线程的栈帧，如果是则说明当前线程已经拥有了这个对象的锁，否则说明锁被其他线程抢占了，要膨胀为重量级锁&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>解锁&lt;/p>
&lt;ul>
&lt;li>使用CAS操作把对象当前的Mark Word和线程中复制的Displaced Mark Word替换回来，如果替换成功，整个同步过程就完成了。如果替换失败，说明有其他线程尝试过获取该锁，那就要在释放锁的同时，唤醒被挂起的线程&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="偏向锁">偏向锁&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>目的：消除数据在无竞争情况下的同步原语，进一步提高程序的运行性能&lt;/p>
&lt;/li>
&lt;li>
&lt;p>偏向过程&lt;/p>
&lt;ul>
&lt;li>
&lt;p>当锁对象第一次被线程获取时，虚拟机会把对象头标志设为偏向模式，同时使用CAS操作把线程ID记录到对象的Mark Word中，如果操作成功，则持有偏向锁的线程以后进入这个锁相关的同步块时，可以不进行任何同步操作&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当有另外一个线程尝试获取这个锁时，偏向模式就宣告结束&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description><category domain="https://ithorizon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/">学习笔记</category><category domain="https://ithorizon.top/tags/jvm/">JVM</category><category domain="https://ithorizon.top/tags/java%E8%99%9A%E6%8B%9F%E6%9C%BA/">Java虚拟机</category></item><item><title>书籍学习-深入理解Java虚拟机（一）</title><link>https://ithorizon.top/posts/2022-10-19-learning_jvm_1/</link><guid isPermaLink="true">https://ithorizon.top/posts/2022-10-19-learning_jvm_1/</guid><pubDate>Wed, 19 Oct 2022 04:57:00 +0000</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;blockquote>
&lt;p>本文是个人学习书籍《深入理解Java虚拟机》过程中所记录的一些笔记，内容来源于书籍&lt;/p>
&lt;/blockquote>
&lt;h1 id="自动内存管理机制">自动内存管理机制&lt;/h1>
&lt;h2 id="java内存区域与内存溢出异常">Java内存区域与内存溢出异常&lt;/h2>
&lt;h3 id="运行时数据区域">运行时数据区域&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>线程共享&lt;/p>
&lt;ul>
&lt;li>
&lt;p>方法区&lt;/p>
&lt;ul>
&lt;li>
&lt;p>类信息、常量、静态变量、即时编译后的代码&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Java7前实现是永久代（PermGen），Java8后实现是元空间（Metaspace）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>OutOfMemoryError&lt;/p>
&lt;ul>
&lt;li>无法满足内存分配需求&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>堆&lt;/p>
&lt;ul>
&lt;li>
&lt;p>对象实例&lt;/p>
&lt;/li>
&lt;li>
&lt;p>OutOfMemoryError&lt;/p>
&lt;ul>
&lt;li>没有内存完成实力分配且无法再扩展&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>直接内存（不是虚拟机规范中定义的内存区域）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>线程私有&lt;/p>
&lt;ul>
&lt;li>
&lt;p>虚拟机栈&lt;/p>
&lt;ul>
&lt;li>
&lt;p>栈帧&lt;/p>
&lt;ul>
&lt;li>
&lt;p>局部变量表&lt;/p>
&lt;ul>
&lt;li>64位long和double类型的数据会占用2个局部变量空间（Slot）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>操作数栈&lt;/p>
&lt;/li>
&lt;li>
&lt;p>动态链接&lt;/p>
&lt;/li>
&lt;li>
&lt;p>方法出口&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>StackOverflowError&lt;/p>
&lt;ul>
&lt;li>线程请求的栈深度大于虚拟机所允许的深度&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>OutOfMemoryError&lt;/p>
&lt;ul>
&lt;li>扩展时无法申请到足够的内存&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>本地方法栈&lt;/p>
&lt;ul>
&lt;li>HotSpot将其与虚拟机栈合在一起&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>程序计数器&lt;/p>
&lt;ul>
&lt;li>
&lt;p>如果线程正在执行的是Java方法，记录的是正在执行的虚拟机字节码指令的地址&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果线程正在执行的是Native方法，记录值为未定义（Undefined）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="hotspot虚拟机对象探秘">HotSpot虚拟机对象探秘&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>对象的创建&lt;/p>
&lt;ul>
&lt;li>
&lt;p>检查常量池是否有类的符号引用、检查引用代表的类是否已被加载、解析和初始化过&lt;/p>
&lt;/li>
&lt;li>
&lt;p>以上检查不通过时，执行类加载过程&lt;/p>
&lt;/li>
&lt;li>
&lt;p>为新生对象分配内存&lt;/p>
&lt;ul>
&lt;li>
&lt;p>指针碰撞：用过的内存放在一边，空闲的内存放在另一边&lt;/p>
&lt;/li>
&lt;li>
&lt;p>空闲列表：维护一个列表，记录哪些内存块是可用的&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>初始化零值&lt;/p>
&lt;/li>
&lt;li>
&lt;p>设置对象头&lt;/p>
&lt;/li>
&lt;li>
&lt;p>执行&lt;init>方法&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>对象的内存布局&lt;/p>
&lt;ul>
&lt;li>
&lt;p>对象头&lt;/p>
&lt;ul>
&lt;li>
&lt;p>对象运行时数据（Mark Word）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>哈希码&lt;/p>
&lt;/li>
&lt;li>
&lt;p>GC分代年龄&lt;/p>
&lt;/li>
&lt;li>
&lt;p>锁状态标志&lt;/p>
&lt;/li>
&lt;li>
&lt;p>线程持有的锁&lt;/p>
&lt;/li>
&lt;li>
&lt;p>偏向线程ID&lt;/p>
&lt;/li>
&lt;li>
&lt;p>偏向时间戳&lt;/p>
&lt;/li>
&lt;li>
&lt;p>…&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>类型（类元数据）指针&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>实例数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>对齐填充&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>对象的访问定位&lt;/p>
&lt;ul>
&lt;li>
&lt;p>句柄：reference存储的是到对象的句柄地址&lt;/p>
&lt;ul>
&lt;li>
&lt;p>到对象实例数据的指针&lt;/p>
&lt;/li>
&lt;li>
&lt;p>到对象类型数据的指针&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>直接指针：reference存储的是到对象的直接地址（HotSpot使用这种）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>实战OutOfMemoryError异常&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Java堆溢出（-Xms、-Xmx）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>-XX:+HeapDumpOnOutOfMemoryError：出现内存溢出异常时Dump出当前的内存堆转储快照&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通过内存映像分析工具对快照进行分析，确认是出现&lt;strong>内存泄漏&lt;/strong>还是&lt;strong>内存溢出&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果是内存泄漏，可进一步查看泄漏对象到GC Roots的引用链&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果是内存溢出，检查堆参数是否可以调大或尝试减少程序运行时的内存消耗&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>虚拟机栈和本地方法栈溢出（-Xss）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>栈深度超过虚拟机所允许的最大深度，抛出StackOverflowError&lt;/p>
&lt;/li>
&lt;li>
&lt;p>建立过多线程导致OutOfMemoryError，在不能减少线程数的情况下，可通过减少最大堆和减少栈容量来换取更多的线程&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>方法区和运行时常量池溢出（-XX:PermSize、-XX:MaxPermSize、-XX:MetaspaceSize、-XX:MaxMetaspaceSize）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>大量字符串添加到常量池（Java7前）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>动态生成大量的Class&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>本地直接内存溢出（-XX:MaxDirectMemorySize）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>DirectByteBuffer&lt;/p>
&lt;/li>
&lt;li>
&lt;p>unsafe.allocateMemory&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Heap Dump文件中不会看见明显的异常，且Dump文件较小&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="垃圾收集器与内存分配策略">垃圾收集器与内存分配策略&lt;/h2>
&lt;h3 id="对象存活">对象存活&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>引用计数算法&lt;/p>
&lt;ul>
&lt;li>
&lt;p>给对象添加一个引用计数器，当有地方引用它时，计数器值加1，当引用失效时，计数器值减1&lt;/p>
&lt;/li>
&lt;li>
&lt;p>很难解决对象间循环引用问题&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>可达性分析算法&lt;/p>
&lt;ul>
&lt;li>
&lt;p>通过一系列“GC Roots”对象为起始点向下搜索，所走过的路径称为引用链，当一个对象到”GC Roots”没有任何引用链相连时，则此对象是不可用的&lt;/p>
&lt;/li>
&lt;li>
&lt;p>可作为GC Roots的对象&lt;/p>
&lt;ul>
&lt;li>
&lt;p>虚拟机栈（栈帧中的本地变量表）中引用的对象&lt;/p>
&lt;/li>
&lt;li>
&lt;p>方法区中类静态属性引用的对象&lt;/p>
&lt;/li>
&lt;li>
&lt;p>方法区中常量引用的对象&lt;/p>
&lt;/li>
&lt;li>
&lt;p>本地方法栈中JNI引用的对象&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>引用&lt;/p>
&lt;ul>
&lt;li>
&lt;p>强引用：不会被垃圾收集器回收&lt;/p>
&lt;/li>
&lt;li>
&lt;p>软引用：当将要发生内存溢出时，垃圾收集器会二次回收这些对象&lt;/p>
&lt;/li>
&lt;li>
&lt;p>弱引用：当垃圾收集器工作时，都会回收这些对象&lt;/p>
&lt;/li>
&lt;li>
&lt;p>虚引用：无法通过引用获取对象实例，唯一的目的是能在这个对象被垃圾收集器回收时收到一个系统通知&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>生存还是死亡&lt;/p>
&lt;ul>
&lt;li>宣告一个对象死亡至少需要经过两次标记过程，当没有GC Roots引用链时会进行第一次标记，执行finalize方法（对象覆盖finalize方法且虚拟机未调用过）后会进行第二次标记，如果对象被重新关联到GC Roots上，则不用回收&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>回收方法区&lt;/p>
&lt;ul>
&lt;li>
&lt;p>回收废弃常量和无用的类&lt;/p>
&lt;/li>
&lt;li>
&lt;p>无用的类&lt;/p>
&lt;ul>
&lt;li>
&lt;p>类所有实例都已被回收&lt;/p>
&lt;/li>
&lt;li>
&lt;p>加载该类的ClassLoader已被回收&lt;/p>
&lt;/li>
&lt;li>
&lt;p>类对应的Class对象没有在任何地方被引用&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="垃圾收集算法">垃圾收集算法&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>标记-清除算法&lt;/p>
&lt;ul>
&lt;li>
&lt;p>首先标记出所有需要回收的对象，标记完成后进行统一回收&lt;/p>
&lt;/li>
&lt;li>
&lt;p>不足点&lt;/p>
&lt;ul>
&lt;li>
&lt;p>效率问题&lt;/p>
&lt;/li>
&lt;li>
&lt;p>空间问题：内存碎片&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>复制算法（为解决标记-清除的效率问题）&lt;/p>
&lt;ul>
&lt;li>将可用内存分成大小相等的两块，每次只使用其中的一块，当这一块内存用完后就将还存活的对象复制到另一块上，然后再把已使用过的内存空间一次清理掉&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>标记-整理算法&lt;/p>
&lt;ul>
&lt;li>与标记-清除类似，不过不是直接对可回收对象进行清理，而是让所有存活对象都向一端移动，然后直接清理掉端边界外的内存&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>分代收集算法&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="垃圾收集器">垃圾收集器&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Serial + Serial Old&lt;/p>
&lt;ul>
&lt;li>单线程，新生代采用复制算法，老年代采用标记-整理算法，用于Client模式（桌面应用）较多&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>ParNew&lt;/p>
&lt;ul>
&lt;li>简单理解为多线程版本的Serial收集器，用于新生代，常与CMS搭配使用&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Parallel Scavenge + Parallel Old&lt;/p>
&lt;ul>
&lt;li>关注点为达到一个可控的吞吐量，而不是停顿时间&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>CMS(Concurrent Mark Sweep)&lt;/p>
&lt;ul>
&lt;li>
&lt;p>基于标记-清除算法实现，可分为4个步骤&lt;/p>
&lt;ul>
&lt;li>
&lt;p>初始标记（STW）&lt;/p>
&lt;ul>
&lt;li>标记GC Roots能直接关联到的对象&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>并发标记&lt;/p>
&lt;ul>
&lt;li>进行GC Roots Tracing的过程&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>重新标记（STW）&lt;/p>
&lt;ul>
&lt;li>修正并发标记期间因用户线程导致标记变动的那一部分对象的标记记录&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>并发清除&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>缺点&lt;/p>
&lt;ul>
&lt;li>
&lt;p>对CPU资源敏感&lt;/p>
&lt;/li>
&lt;li>
&lt;p>无法处理浮动垃圾（垃圾出现在标记过程之后，无法在当次收集中处理），可能出现”Concurrent Mode Failure”失败而导致另一次Full GC的产生（当CMS运行期间预留的内存无法满足程序需要时，就会出现一次”Concurrent Mode Failure”失败，这时虚拟机将临时启用Serial Old来重新进行老年代的垃圾收集）&lt;/p>
&lt;ul>
&lt;li>-XX:CMSInitiatingOccupancyFraction设置老年代使用了多少（百分比）空间后触发CMS收集&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>空间碎片&lt;/p>
&lt;ul>
&lt;li>
&lt;p>-XX:+UseCMSCompactAtFullCollection设置CMS在进行Full GC时开启内存碎片的合并整理，默认是开启的&lt;/p>
&lt;/li>
&lt;li>
&lt;p>-XX:CMSFullGCsBeforeCompaction设置执行多少次不压缩的Full GC后，跟着来一次带压缩的，默认值是0，表示每次都进行&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>G1&lt;/p>
&lt;ul>
&lt;li>
&lt;p>特点&lt;/p>
&lt;ul>
&lt;li>
&lt;p>并行与并发&lt;/p>
&lt;/li>
&lt;li>
&lt;p>分代收集&lt;/p>
&lt;/li>
&lt;li>
&lt;p>空间整合&lt;/p>
&lt;ul>
&lt;li>整体看是基于标记-整理算法，局部（两个Region之间）看是基于复制算法&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>可预测的停顿&lt;/p>
&lt;ul>
&lt;li>在后台建立一个Region优先列表，每次根据允许的收集时间，优先回收价值最大的Region&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>步骤&lt;/p>
&lt;ul>
&lt;li>
&lt;p>初始标记（STW）&lt;/p>
&lt;ul>
&lt;li>标记GC Roots能直接关联到的对象，并且修改TAMS（Next Top to Mark Start）的值，让下一阶段用户程序并发运行时，能在正确可用的Region中创建对象&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>并发标记&lt;/p>
&lt;ul>
&lt;li>从GC Roots开始对堆中对象进行可达性分析，找出存活的对象&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>最终标记（STW）&lt;/p>
&lt;ul>
&lt;li>修正在并发标记中因用户程序继续运行而导致标记产生变动的那一部分标记记录&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>筛选回收（STW）&lt;/p>
&lt;ul>
&lt;li>对各个Region的回收价值和成本进行排序，根据用户期望的停顿时间制定回收计划&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="内存分配与回收策略">内存分配与回收策略&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>对象优先在Eden分配&lt;/p>
&lt;ul>
&lt;li>大多数情况下，对象在新生代Eden区中分配，当Eden区没有足够空间进行分配时，虚拟机将发起一次Minor GC&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>大对象直接进入老年代&lt;/p>
&lt;ul>
&lt;li>**-XX:PretenureSizeThreshold **设置内存大于这个值的对象直接在老年代分配，只对Serial和ParNew两款收集器有效&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>长期存活的对象进入老年代&lt;/p>
&lt;ul>
&lt;li>**-XX:MaxTenuringThreshold **设置对象年龄大于这个值的对象晋升到老年代&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>动态对象年龄判定&lt;/p>
&lt;ul>
&lt;li>如果在Survivor空间中&lt;strong>相同年龄所有对象&lt;/strong>大小综合大于Survivor空间的一半，则年龄大于或等于该年龄的对象就可以直接进入老年代&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>空间分配担保&lt;/p>
&lt;ul>
&lt;li>
&lt;p>老年代最大可用的连续空间 &amp;gt; 新生代所有对象总空间&lt;/p>
&lt;/li>
&lt;li>
&lt;p>老年代最大可用的连续空间 &amp;gt; 历次晋升到老年代对象的平均大小&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="虚拟机性能监控与故障处理工具">虚拟机性能监控与故障处理工具&lt;/h2>
&lt;h3 id="jdk的命令行工具">JDK的命令行工具&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>jps：虚拟机进程状况工具&lt;/p>
&lt;ul>
&lt;li>可以列出正在允许的虚拟机进程，并显示虚拟机执行主类名以及传递给主类的参数或启动时的JVM参数&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>jstat：虚拟机统计信息监视工具&lt;/p>
&lt;ul>
&lt;li>用于监视虚拟机各种运行状态信息，如类加载、内存、垃圾收集、JIT编译等&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>jinfo：Java配置信息工具&lt;/p>
&lt;ul>
&lt;li>实时地查看和调整虚拟机各项参数&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>jmap：Java内存映像工具&lt;/p>
&lt;ul>
&lt;li>用于生成堆转储快照，或查询finalize执行队列、Java堆和永久代的详细信息，如空间使用率、当前用的哪种收集器等&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>jhat：虚拟机堆转储快照分析工具&lt;/p>
&lt;/li>
&lt;li>
&lt;p>jstack：Java堆栈跟踪工具&lt;/p>
&lt;ul>
&lt;li>用于生成虚拟机当前时刻的线程快照&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="jdk的可视化工具">JDK的可视化工具&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>JConsole：Java监视与管理控制台&lt;/p>
&lt;ul>
&lt;li>基于JMX的可视化监控、管理工具&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>VisualVM：多合-故障处理工具&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="虚拟机执行子系统">虚拟机执行子系统&lt;/h1>
&lt;h2 id="类文件结构">类文件结构&lt;/h2>
&lt;h3 id="无关性的基石">无关性的基石&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>虚拟机和字节码存储格式&lt;/p>
&lt;ul>
&lt;li>
&lt;p>平台无关性&lt;/p>
&lt;/li>
&lt;li>
&lt;p>语言无关性&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="class类文件的结构">Class类文件的结构&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>采用类C语言结构体的伪结构来存储数据，只有两种数据类型&lt;/p>
&lt;ul>
&lt;li>
&lt;p>无符号数：属于基本的数据类型，以u1/u2/u4/u8表示n字节的无符号数，用来描述数字、索引引用、数量值或者按照UTF-8编码的字符串值&lt;/p>
&lt;/li>
&lt;li>
&lt;p>表：由多个无符号数或其他表作为数据项构成的复合数据类型，以”_info”结尾，用来描述有层次关系的复合结构的数据&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>魔数与Class文件的版本&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Class文件头4个字节为魔数，用来确定这个文件是否为一个能被虚拟机接受的Class文件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>魔数后4个字节为Class文件的版本号（次版本号+主版本号）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>常量池&lt;/p>
&lt;ul>
&lt;li>主要存放两大类常量：字面量和符号引用&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>访问标志&lt;/p>
&lt;ul>
&lt;li>常量池后2个字节为访问标志，用于识别一些类或接口层次的访问信息，如Class是类还是接口，是否public、abstract、final等&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>类索引、父类索引与接口索引集合&lt;/p>
&lt;ul>
&lt;li>类索引用于确定这个类的全限定名，父类索引用于确定这个类的父类的全限定名，接口索引集合用来描述这个类实现/继承了哪些接口&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>字段表集合&lt;/p>
&lt;ul>
&lt;li>字段表用于描述接口或类中声明的变量（类变量+实例变量，不会列出从父类继承来的变量），每一项由字段修饰符+字段的简单名称+字段/方法的描述符（+属性表集合）组成&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>方法表集合&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="虚拟机类加载机制">虚拟机类加载机制&lt;/h2>
&lt;h3 id="类加载的时机">类加载的时机&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>类加载生命周期&lt;/p>
&lt;ul>
&lt;li>加载 → 验证 → 准备 → 解析 → 初始化 → 使用 → 卸载&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>必须立即对类进行”初始化”的情况&lt;/p>
&lt;ul>
&lt;li>
&lt;p>遇到new、getstatic、putstatic或invokestatic这4条字节码指令时&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用java.lang.reflect包的方法对类进行反射调用时&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当初始化一个类时发现父类还没有初始化，则需先初始化父类&lt;/p>
&lt;/li>
&lt;li>
&lt;p>用户指定的执行主类（main方法的那个类）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果一个java.lang.invoke.MethodHandle实例最后的解析结果REF_getStatic、REF_putStatic、REF_invokeStatic的方法句柄对应的类没有进行初始化，则需先触发&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>类加载的过程&lt;/p>
&lt;ul>
&lt;li>
&lt;p>加载&lt;/p>
&lt;ul>
&lt;li>
&lt;p>通过类全限定名获取二进制字节流&lt;/p>
&lt;/li>
&lt;li>
&lt;p>将字节流所代表的静态存储结构转换为方法区的运行时数据结构&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在内存（HotSpot存放在方法区）生成一个Class对象，作为方法区这个类的各种数据的访问入口&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>验证（-Xverify:none可以关闭大部分的类验证）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>确保Class文件的字节流中包含的信息符合当前虚拟机的要求&lt;/p>
&lt;/li>
&lt;li>
&lt;p>验证动作&lt;/p>
&lt;ul>
&lt;li>
&lt;p>文件格式验证（基于二进制字节流进行）&lt;/p>
&lt;ul>
&lt;li>验证字节流是否符合Class文件格式的规范，并且能被当前版本的虚拟机处理&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>元数据验证（基于方法区的存储结构进行）&lt;/p>
&lt;ul>
&lt;li>对字节码描述的信息进行语义分析，以保证符合Java语言规范的要求&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>字节码验证（基于方法区的存储结构进行）&lt;/p>
&lt;ul>
&lt;li>通过数据流和控制流分析，确定程序语义是合法的、符合逻辑的&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>符号引用验证（基于方法区的存储结构进行）&lt;/p>
&lt;ul>
&lt;li>对类自身以外（常量池中的各种符号引用）的信息进行匹配性校验&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>准备&lt;/p>
&lt;ul>
&lt;li>正式为类变量分配内存并设置类变量初始值（零值）的阶段，这些类变量所使用的内存都将在方法区中进行分配&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>解析&lt;/p>
&lt;ul>
&lt;li>将常量池内的符号引用替换为直接引用的过程&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>初始化&lt;/p>
&lt;ul>
&lt;li>
&lt;p>执行类构造器&lt;clinit>方法的过程&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;clinit>方法的细节&lt;/p>
&lt;ul>
&lt;li>
&lt;p>由编译器自动收集所有类变量的赋值动作和静态语句块中的语句合并产生，静态语句块中只能访问定义在它之前的变量，不能访问但可赋值定义在它之后的变量&lt;/p>
&lt;/li>
&lt;li>
&lt;p>虚拟机会保证在执行子类的&lt;clinit>方法前，父类的&lt;clinit>方法已经执行完毕&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果一个类没有静态语句块也没有对类变量的赋值操作，编译器可以不为这个类生成&lt;clinit>方法&lt;/p>
&lt;/li>
&lt;li>
&lt;p>执行接口（接口的实现类）的&lt;clinit>方法不需要先执行父接口的&lt;clinit>方法，只有当父接口中定义的变量使用时，父接口才会初始化。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>虚拟机会保证一个类的&lt;clinit>方法在同一类加载器下只会执行一次&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="类加载器">类加载器&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>类和类加载器&lt;/p>
&lt;ul>
&lt;li>对于任意一个类，都需要由&lt;strong>加载它的类加载器和这个类本身&lt;/strong>一同确立其在Java虚拟机中的唯一性，每一类加载器，都拥有一个独立的类名称空间&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>双亲委派模型&lt;/p>
&lt;ul>
&lt;li>
&lt;p>系统提供的类加载器&lt;/p>
&lt;ul>
&lt;li>
&lt;p>启动类加载器&lt;/p>
&lt;ul>
&lt;li>加载&amp;lt;JAVA_HOME&amp;gt;/lib目录（或-Xbootclasspath参数指定的路径）下虚拟机所识别（通过文件名识别）的类库&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>扩展类加载器&lt;/p>
&lt;ul>
&lt;li>加载&amp;lt;JAVA_HOME&amp;gt;/lib/ext目录（或java.ext.dirs系统变量指定的路径）下的所有类库&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>应用程序（系统）类加载器&lt;/p>
&lt;ul>
&lt;li>加载用户类路径（Classpath）下的所有类库&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>双亲委派模型（非强制性的约束模型）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>除顶层的启动类加载器外，其余的类加载器都应当有自己的父类加载器，这里的父子关系一般是以组合的关系来复用父加载器的代码&lt;/p>
&lt;/li>
&lt;li>
&lt;p>双亲委派工作流程：一个类加载器收到类加载的请求时，会把这个请求委派给父类加载器去完成，只有当父类加载器反馈无法完成加载请求时，子加载器才会尝试自己去加载&lt;/p>
&lt;/li>
&lt;li>
&lt;p>自定义类加载器（遵循双亲委派模型）：继承ClassLoader类，重写findClass方法&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>破坏双亲委派模型&lt;/p>
&lt;ul>
&lt;li>
&lt;p>自定义类加载器（破坏双亲委派模型）：继承ClassLoader类，重写loadClass方法&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ServiceLoader使用线程上下文加载器去加载SPI代码（即父类加载器请求子类加载器完成类加载）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description><category domain="https://ithorizon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/">学习笔记</category><category domain="https://ithorizon.top/tags/jvm/">JVM</category><category domain="https://ithorizon.top/tags/java%E8%99%9A%E6%8B%9F%E6%9C%BA/">Java虚拟机</category></item><item><title>专栏学习-MySQL实战45讲（一）</title><link>https://ithorizon.top/posts/2022-10-19-learning_mysql_45/</link><guid isPermaLink="true">https://ithorizon.top/posts/2022-10-19-learning_mysql_45/</guid><pubDate>Wed, 19 Oct 2022 04:28:00 +0000</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;blockquote>
&lt;p>本文是个人学习极客时间专栏《MySQL实战45讲》过程中所记录的一些笔记，内容来源于专栏&lt;/p>
&lt;/blockquote>
&lt;h2 id="mysql基础架构">MySQL基础架构&lt;/h2>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/19/c2/19c2f44463879bd63e84181f16ad9b45.png" alt="MySQL%E5%9F%BA%E7%A1%80%E6%9E%B6%E6%9E%84.png">&lt;/p>
&lt;h3 id="server层">Server层&lt;/h3>
&lt;p>涵盖MySQL大多数功能，所有跨存储引擎的功能都在这一层实现，比如存储引擎、触发器、视图等&lt;/p>
&lt;ul>
&lt;li>
&lt;p>连接器：管理连接，权限校验&lt;/p>
&lt;/li>
&lt;li>
&lt;p>查询缓存：命中则直接返回结果（MySQL 8.0已删除这一块）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>分析器：词法分析，语法分析&lt;/p>
&lt;/li>
&lt;li>
&lt;p>优化器：执行计划生成，索引选择&lt;/p>
&lt;/li>
&lt;li>
&lt;p>执行器：操作引擎，返回结果&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&amp;hellip;&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="存储引擎层">存储引擎层&lt;/h3>
&lt;p>负责数据的存储和提取，提供读写接口，插件式架构&lt;/p>
&lt;h2 id="mysql日志">MySQL日志&lt;/h2>
&lt;h3 id="redo-log">redo log&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>InnoDB引擎特有的日志；记录的是“在某个数据页上做了什么修改”；空间固定且是循环写；用于保证即使数据库发生异常重启，之前提交的记录都不会丢失（&lt;strong>crash-safe&lt;/strong>）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当有一条记录需要更新时，InnoDB会把记录写到redo log（先写到&lt;strong>log buffer，&lt;strong>即写入到log buffer划分的众多的&lt;/strong>redo log block&lt;/strong>，解决直接写磁盘带来的性能损耗**）**里面，并更新内存，这个时候更新就算完成了。同时，InnoDB 引擎会在适当的时候，将这个操作记录更新到磁盘里面。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>redo log 的写入机制&lt;/p>
&lt;ul>
&lt;li>
&lt;p>事务在执行过程中，生成的 redo log 是要先写到 redo log buffer （线程共享）的，之后再经过 write 操作写入到文件系统的 page cache，fsync 操作持久化到磁盘，write 和 fsync 的时机，可由参数 &lt;strong>innodb_flush_log_at_trx_commit&lt;/strong> 控制&lt;/p>
&lt;/li>
&lt;li>
&lt;p>让一个没有提交的事务的 redo log 写入到磁盘中的场景&lt;/p>
&lt;ul>
&lt;li>
&lt;p>InnoDB 有一个后台线程，每隔 1 秒，就会把 redo log buffer 中的日志，调用 write 写到文件系统的 page cache，然后调用 fsync 持久化到磁盘&lt;/p>
&lt;/li>
&lt;li>
&lt;p>redo log buffer 占用的空间即将达到 &lt;strong>innodb_log_buffer_size&lt;/strong> 一半的时候，后台线程会主动写盘，因事务还未提交，这个写盘动作只是 write&lt;/p>
&lt;/li>
&lt;li>
&lt;p>并行的事务提交的时候，顺带将这个事务的 redo log buffer 持久化到磁盘&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>组提交机制&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="binlog">binlog&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>MySQL Server层的实现，所有引擎都可以使用；记录的是语句的原始逻辑，比如“给 ID=x 这一行的 c 字段加 1 ”；追加写不会覆盖以前的日志；用于归档，主从数据同步。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>binlog 的写入机制&lt;/p>
&lt;ul>
&lt;li>
&lt;p>事务执行过程中，先把日志写到 &lt;strong>binlog cache&lt;/strong>（线程独占），事务提交的时候，再把 binlog cache 写到 binlog 文件中，写到 binlog 文件分 write 和 fsync，其中 &lt;strong>write 是写到文件系统的 page cache，fsync 才是把数据持久化到磁盘&lt;/strong>，write 和 fsync 的时机，是由参数 **sync_binlog **控制&lt;/p>
&lt;/li>
&lt;li>
&lt;p>组提交机制，可调整 binlog_group_commit_sync_delay 和 binlog_group_commit_sync_no_delay_count 参数，减少 binlog 的写盘次数&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>binlog 的存储格式&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>statement&lt;/strong>：binlog 里面记录的就是 SQL 语句的原文，语句在不同实例执行的结果可能会不一致，从而可能导致数据不一致&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>row&lt;/strong>：binlog 里面记录了真实行的信息，可避免数据不一致，也可用来恢复数据，但比较占空间和IO资源（MySQL 5.7 开始默认使用的格式）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>mixed&lt;/strong>：MySQL 自己会判断这条 SQL 语句是否可能引起主备不一致，如果有可能，就用 row 格式，否则就用 statement 格式&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="redo-log和binlog的写入顺序---redo-log两阶段提交">redo log和binlog的写入顺序 - redo log两阶段提交&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Innodb引擎生成redo log，将其置为&lt;strong>prepare状态&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>执行器生成binlog并写入磁盘&lt;/p>
&lt;/li>
&lt;li>
&lt;p>执行器调用引擎的提交事务接口，引擎把刚写入的redo log改为&lt;strong>commit状态&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="常见配置参数">常见配置参数&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>innodb_flush_log_at_trx_commit&lt;/strong>：设置事务提交时redo log磁盘写入策略，默认值为&lt;code>1&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>0&lt;/strong>：提交事务时不立即把redo log buffer里的数据写入日志文件，而是依靠主线程每1s执行一次写入并刷新到磁盘，MySQL宕机时会丢失1s数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>1&lt;/strong>：提交事务时会把redo log buffer里的数据写入日志文件，并且会执行fsync（阻塞操作）强制将os buffer刷新到磁盘&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>2&lt;/strong>：提交事务时会把redo log buffer里的数据写入日志文件，但不会执行fsync强制将os buffer刷新到磁盘，而是依靠主线程每1s执行一次刷新到磁盘，MySQL宕机时可能会丢失1s数据&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>sync_binlog&lt;/strong>：设置事务提交时binlog磁盘写入策略，默认值为&lt;code>0&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>0&lt;/strong>：当事务提交之后，MySQL不做fsync之类的磁盘同步指令刷新binlog_cache中的信息到磁盘，而让Filesystem自行决定什么时候来做同步，或者cache满了之后才同步到磁盘&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>1&lt;/strong>：当每进行1次事务提交之后，MySQL将进行一次fsync之类的磁盘同步指令来将binlog_cache中的数据强制写入磁盘&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>n&lt;/strong>：当每进行n次事务提交之后，MySQL将进行一次fsync之类的磁盘同步指令来将binlog_cache中的数据强制写入磁盘&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>binlog_cache_size&lt;/strong>：控制单个线程内 binlog cache 所占内存的大小。如果超过了这个参数规定的大小，就要暂存到磁盘。默认值为&lt;code>32KB&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>innodb_log_buffer_size&lt;/strong>：控制 InnoDB 写入磁盘上日志文件的缓冲区大小。默认值为&lt;code>16M&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>binlog_group_commit_sync_delay&lt;/strong>：控制 binlog 提交在调用 fsync 之前等待的微秒数。默认值为&lt;code>0&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>binlog_group_commit_sync_no_delay_count&lt;/strong>：控制累积多少次事务以后才调用 fsync ，如果binlog_group_commit_sync_delay 设置为 0 ，则该参数设置无效。默认值为&lt;code>0&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="mysql事务">MySQL事务&lt;/h2>
&lt;h3 id="隔离性与隔离级别">隔离性与隔离级别&lt;/h3>
&lt;p>多个事务同时执行时，可能出现&lt;strong>脏读&lt;/strong>、&lt;strong>不可重复读&lt;/strong>、&lt;strong>幻读&lt;/strong>的问题，为了解决这些问题，就有了“隔离级别”，SQL标准的事务隔离级别包含：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>读未提交（Read Uncommitted）&lt;/strong>：一个事务还未提交时，它做的变更可以被其他事务看到&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>读已提交（Read Committed）&lt;/strong>：一个事务提交之后，它做的变更才能被其他事务看到&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>可重复读（Repeatable Read）&lt;/strong>：一个事务在执行过程中看到的数据，总是跟这个事务在启动时看到的数据是一致的（MySQL默认隔离级别）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>串行化（Serializable）&lt;/strong>：对于同一记录，写会加“写锁”，读会加“读锁”，当出现锁冲突时，后访问的事务必须等前一个事务执行完成才能继续进行&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="默认隔离级别">默认隔离级别&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Oracle默认隔离级别为Read Committed，Oracle支持Read Committed、Serializable和Read-Only，Serializable和Read-Only显然都是不适合作为默认隔离级别的，那么就只剩Read Committed这个唯一的选择）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>MySQL默认隔离级别为Repeatable Read，MySQL早期只有statement这种binlog格式，这时候如果使用读提交(Read Committed)、读未提交(Read Uncommitted)这两种隔离级别可能会出现主从数据不一致问题（出现事务乱序时）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="事务的启动方式">事务的启动方式&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>显示启动事务语句，begin或start transaction&lt;/p>
&lt;/li>
&lt;li>
&lt;p>set autocommit = 0，这个命令会将这个线程的自动提交关掉，意味着如果你只执行一个select语句，这个事务就启动了，并且不会自动提交，事务将持续到你主动执行 commit 或 rollback 语句，或者断开连接&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="幻读">幻读&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>欢读的定义：指的是一个事务在前后两次查询同一个范围的时候，后一次查询看到了前一次查询没有看到的行&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>在可重复读隔离级别下&lt;/strong>，普通的查询是快照读，是不会看到别的事务插入的数据的。因此，&lt;strong>幻读在“当前读”下才会出现&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>幻读仅专指“新插入的行”&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>幻读的问题&lt;/p>
&lt;ul>
&lt;li>
&lt;p>破坏语义上行的加锁声明&lt;/p>
&lt;/li>
&lt;li>
&lt;p>破坏数据的一致性&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>幻读的解决&lt;/p>
&lt;ul>
&lt;li>
&lt;p>InnoDB 引入了新的锁，也就是间隙锁 (Gap Lock)。跟间隙锁存在冲突关系的，是“往这个间隙中插入一个记录”这个操作，间隙锁之间都不存在冲突关系&lt;/p>
&lt;/li>
&lt;li>
&lt;p>间隙锁和行锁合称 next-key lock，每个 next-key lock 是前开后闭区间&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>间隙锁是在可重复读隔离级别下才会生效的&lt;/strong>。如果把隔离级别设置为读提交的话，就没有间隙锁了。但同时，要解决可能出现的数据和日志不一致问题，需要把 binlog 格式设置为 row&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="常见配置参数-1">常见配置参数&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>transaction-isolation&lt;/strong>：设置事务隔离级别，默认值为repeatable-read&lt;/li>
&lt;/ul>
&lt;h2 id="mysql索引">MySQL索引&lt;/h2>
&lt;h3 id="索引的常见模型">索引的常见模型&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>哈希表&lt;/strong>：以键值存储数据的结构，做区间查询的速度很慢（因链表无序），适用于只有等值查询的场景&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>有序数组&lt;/strong>：在等值查询和范围查询场景中的性能都很好，但更新数据时成本较高（需要挪动记录），只适用于静态存储引擎（即数据不会修改的场景）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>搜索树&lt;/strong>：二叉搜索树的父节点左子树所有结点的值小于父节点的值，右子树所有结点的值大于父节点的值，大多数的数据库存储并不使用二叉树，而是使用“N叉树”（&lt;strong>通过改变 key 值或改变页大小可以调整N值&lt;/strong>）。其原因是，索引不止存在内存中，还要写到磁盘上，使用”N叉树”可以减少树高，从而减少磁盘读写次数&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="innodb的索引模型">Innodb的索引模型&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>InnoDB 使用了 B+ 树索引模型，每一个索引对应一棵 B+ 树&lt;/p>
&lt;/li>
&lt;li>
&lt;p>根据叶子节点的内容，索引类型分为主键索引（聚簇索引）和非主键索引（二级索引）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>主键索引的叶子节点存的是整行数据，非主键索引的叶子节点内容是主键的值&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="索引维护">索引维护&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>页分裂：在&lt;strong>无序插入&lt;/strong>新数据时，如果索引数据页已经满了，根据 B+ 树的算法，这时候需要申请一个新的数据页，然后挪动部分数据过去，这个过程称为页分裂&lt;/p>
&lt;/li>
&lt;li>
&lt;p>页合并：当相邻两个页由于删除了数据，利用率很低之后，会将数据页做合并。合并的过程，可以认为是分裂过程的逆过程&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="为什么建议建表语句里要有自增主键">为什么建议建表语句里要有自增主键&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>从性能角度看，自增主键的插入数据模式为递增插入的场景，每次插入一条新纪录，都是追加操作，都不涉及到挪动其他记录，也不会触发叶子节点的分裂（写数据成本低/索引维护成本低）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>从存储角度看，普通索引的叶子节点需要存储主键，主键长度越小，普通索引占用的空间也就越小&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="性能优化">性能优化&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>覆盖索引&lt;/strong>：当查询字段在索引上可以直接获取结果，不需要回表操作时（即索引“覆盖”了我们的查询需求），我们称该索引为覆盖索引，覆盖索引可以减少树的搜索次数，显著提升查询性能&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>最左前缀原则&lt;/strong>：只要满足索引的最左前缀，就可以利用索引来加速检索。这个最左前缀可以是联合索引的最左 N 个字段，也可以是字符串索引的最左 M 个字符&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>索引下推&lt;/strong>：在 MySQL 5.6 引入的索引下推优化，可以在索引遍历过程中，对索引中包含的字段先做判断，直接过滤掉不满足条件的记录，减少回表次数&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="普通索引和唯一索引怎么选">普通索引和唯一索引怎么选&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>从业务角度考虑，如果字段需要数据库来保证唯一性，则只能选择唯一索引&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果字段由业务代码保证唯一性，则可从两种索引的查询和更新性能角度考虑&lt;/p>
&lt;ul>
&lt;li>
&lt;p>对于查询过程，唯一索引找到第一个满足条件的纪录后，就会停止检索；普通索引找到第一个满足条件的纪录后，需要继续往后找，直到碰到不满足条件的纪录。虽然普通索引检索次数相比唯一索引多，但因Innodb引擎是按页读写数据的，所以性能上的差异不大&lt;/p>
&lt;/li>
&lt;li>
&lt;p>对于更新过程，当纪录要更新的目标页不在内存时，唯一索引需要将数据页读入内存，判断到没有冲突，再更新这个值；普通索引可以利用** change buffer **机制，将更新记录在 change buffer 就可返回。利用 change buffer 机制，普通索引更新性能相比唯一索引会高点&lt;/p>
&lt;ul>
&lt;li>
&lt;p>change buffer的使用场景：对于写多读少的业务来说，页面在写完以后马上被访问到的概率比较小，此时 change buffer 的使用效果最好，常见的就是账单类、日志类的系统&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>redo log 主要节省的是随机写磁盘的 IO 消耗（转成顺序写），而 change buffer 主要节省的则是随机读磁盘的 IO 消耗&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="索引选择异常和处理">索引选择异常和处理&lt;/h3>
&lt;p>大多数时候优化器都能找到正确的索引，但偶尔会碰到索引选择错误的问题，可尝试通过以下几种方法处理&lt;/p>
&lt;ul>
&lt;li>
&lt;p>由于索引统计信息不准确导致的问题，可以用 analyze table 来解决&lt;/p>
&lt;/li>
&lt;li>
&lt;p>对于其他优化器误判的情况，可以采用以下方法处理&lt;/p>
&lt;ul>
&lt;li>
&lt;p>采用 force index 强行选择一个索引&lt;/p>
&lt;/li>
&lt;li>
&lt;p>考虑修改语句，引导 MySQL 使用我们期望的索引&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在有些场景下，可以新建一个更合适的索引，来提供给优化器做选择，或删掉误用的索引&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="字符串创建索引">字符串创建索引&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>直接创建完整索引，这样可能比较占用空间&lt;/p>
&lt;/li>
&lt;li>
&lt;p>创建前缀索引，节省空间，但会增加查询扫描次数，并且不能使用覆盖索引&lt;/p>
&lt;/li>
&lt;li>
&lt;p>倒序存储，再创建前缀索引，用于绕过字符串本身前缀的区分度不够的问题&lt;/p>
&lt;/li>
&lt;li>
&lt;p>创建 hash 字段索引，查询性能稳定，有额外的存储和计算消耗，跟第三种方式一样，都不支持范围扫描&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="索引不生效的场景">索引不生效的场景&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>条件字段函数操作&lt;/strong>：&lt;strong>对索引字段做函数操作，可能会破坏索引值的有序性，因此优化器就决定放弃走树搜索功能&lt;/strong>，即使是对于不改变有序性的函数，也不会考虑使用索引&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>隐式类型转换&lt;/strong>：where条件左侧因隐式类型转换操作使用了函数操作，同第一条规则&lt;/p>
&lt;ul>
&lt;li>在 MySQL 中，字符串和数字做比较的话，是将字符串转换成数字&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>隐式字符编码转换&lt;/strong>：where条件左侧因隐式字符编码转换操作使用了函数操作，同第一条规则&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="常见配置参数-2">常见配置参数&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>innodb_change_buffer_max_size&lt;/strong>：设置 Change Buffer能占用 Buffer Pool 的最大比例，默认值为25&lt;/li>
&lt;/ul>
&lt;br/></description><category domain="https://ithorizon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/">学习笔记</category><category domain="https://ithorizon.top/tags/mysql/">MySQL</category><category domain="https://ithorizon.top/tags/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/">极客时间</category></item><item><title>配置同时使用gitlab和github</title><link>https://ithorizon.top/posts/2022-05-18-config_gitlab_and_github/</link><guid isPermaLink="true">https://ithorizon.top/posts/2022-05-18-config_gitlab_and_github/</guid><pubDate>Wed, 18 May 2022 12:50:00 +0000</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;h2 id="配置步骤">配置步骤&lt;/h2>
&lt;h3 id="1-分别生成两份密钥文件">1. &lt;strong>分别生成两份密钥文件&lt;/strong>&lt;/h3>
&lt;p>git bash下执行以下命令，并将生成的文件分开存放：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">ssh-keygen -t rsa -C &lt;span class="s1">&amp;#39;your gitlab email&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ssh-keygen -t rsa -C &lt;span class="s1">&amp;#39;your github email&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2-设置ssh-key">2. &lt;strong>设置SSH Key&lt;/strong>&lt;/h3>
&lt;p>将生成的两份id_rsa.pub文件内容分别对应复制粘贴到github和gitlab的SSH Key配置下&lt;/p>
&lt;h3 id="3-将key在本地存储起来">3. &lt;strong>将key在本地存储起来&lt;/strong>&lt;/h3>
&lt;p>git bash下执行以下命令，ssh-add后的路径为上面生成的id_rsa文件的路径：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">ssh-agent -s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ssh-add ~/.ssh/github/id_rsa
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ssh-add ~/.ssh/id_rsa
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>PS：如果执行ssh-add时报了以下错误，需先执行： ssh-agent bash 命令&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>Could not open a connection to your authentication agent.&lt;/p>
&lt;/blockquote>
&lt;h3 id="4-ssh目录下创建config文件来管理key">4. &lt;strong>.ssh目录下创建config文件来管理key&lt;/strong>&lt;/h3>
&lt;p>在用户家目录下的.ssh目录（如果不存在可自己创建）下创建config文件，内容如下（需自行替换对应的内容）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">Host github.com // 不动
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HostName ssh.github.com // 不动
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> User xxxx@xxx.com // 你自己的github邮箱
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PreferredAuthentications publickey // 不动
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> IdentityFile ~/.ssh/github/id_rsa // github用的rsa文件路径
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Port 443
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // 如果ssh -T git@github.com的时候报 ssh: connect to host github.com port 22: Operation timed out就把Port这条加上吧
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Host 192.168.0.231 // 你们公司gitlab的ip地址
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HostName 192.168.0.231 //与Host保持一致
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> User xxx@xxxx.com // 你gitlab的邮箱
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> IdentityFile ~/.ssh/id_rsa // gitlab用的rsa文件路径
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Port 64222 // 你们公司gitlab的ip端口
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="5-验证">5. &lt;strong>验证&lt;/strong>&lt;/h3>
&lt;p>git bash下执行以下命名验证配置：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">ssh -T git@github.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ssh -T git@gitlab的hostname
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果有看到successfully或Welcome的相关信息，说明以及配置成功&lt;/p>
&lt;h2 id="设置仓库使用的提交用户">&lt;strong>设置仓库使用的提交用户&lt;/strong>&lt;/h2>
&lt;h3 id="针对项目配置">&lt;strong>针对项目配置&lt;/strong>&lt;/h3>
&lt;p>在初始化项目（本地创建项目、通过git clone或IDEA下载仓库）后，可以通过以下命令设置该项目提交时使用的用户，git bash下执行：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">git config --local user.name &lt;span class="s1">&amp;#39;your name&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git config --local user.email &lt;span class="s1">&amp;#39;your email&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>命令执行后会修改项目根目录下的.git目录下的config文件，你也可以直接修改这个文件，加入以下配置：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">[user]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> name = your name
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> email = your email
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="全局配置">&lt;strong>全局配置&lt;/strong>&lt;/h3>
&lt;p>如果不想针对一个一个项目设置，可以通过配置全局的参数对每个项目生效（相当于缺省的默认参数），但缺点就是只能设置一个用户，可以通过以下命令设置全局使用的用户，git bash下执行：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">git config --global user.name &lt;span class="s1">&amp;#39;your name&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git config --global user.email &lt;span class="s1">&amp;#39;your email&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="conditional-includes">&lt;strong>Conditional Includes&lt;/strong>&lt;/h3>
&lt;p>在 git 2.13 版本中，增加了 conditional includes 配置，可针对不同的根目录使用不同的.gitconfig配置文件，这样就可以针对不同项目使用不同的用户了。比如针对github和gitlab项目配置不同的用户，修改用户家目录下的.gitconfig文件，加入以下配置（项目存放路径需自己替换）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">[includeIf &amp;#34;gitdir:D:/Dev/github/&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> path = .github
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[includeIf &amp;#34;gitdir:D:/Dev/gitlab/&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> path = .gitlab
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在用户家目录下分别创建.github和.gitlab，并加入以下配置：&lt;/p>
&lt;ul>
&lt;li>.github&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">[user]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> name = your github name
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> email = your github email
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>.gitlab&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">[user]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> name = your gitlab name
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> email = your gitlab email
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>配置完成后可以到配置的目录下执行以下命令进行校验是否生效：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">git config --show-origin --get user.name
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git config --show-origin --get user.email
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="推荐资料">&lt;strong>推荐资料&lt;/strong>&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://gb.yekai.net/">Git 进阶指南&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://learngitbranching.js.org/?locale=zh_CN">Learn Git Branching&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description><category domain="https://ithorizon.top/categories/git/">Git</category><category domain="https://ithorizon.top/tags/git/">Git</category><category domain="https://ithorizon.top/tags/gitlab/">Gitlab</category><category domain="https://ithorizon.top/tags/github/">Github</category></item><item><title>推荐工程-搜索平台</title><link>https://ithorizon.top/posts/2022-04-06-search_platform/</link><guid isPermaLink="true">https://ithorizon.top/posts/2022-04-06-search_platform/</guid><pubDate>Wed, 06 Apr 2022 15:45:00 +0000</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;blockquote>
&lt;p>基于 Solrcloud 研发的大规模分布式搜索引擎平台，提供简单、高效、稳定、低成本和可扩展的搜索解决方案（核心：将不同数据源（Hive、MySQL、Kafka、文件等）的数据导入到Solr集群，对外提供检索服务）&lt;/p>
&lt;/blockquote>
&lt;h2 id="背景">背景&lt;/h2>
&lt;p>随着公司业务增长，需要对外提供站内搜索等搜索功能，早期维护人员采用了Solr作为检索引擎，搭建了Solrcloud集群，满足了当时的使用场景。但随着搜索的业务逐渐增多，在集群使用上存在的诸多问题逐渐暴露出来，比如每个业务接入都要手写程序同步数据（效率问题）、Collection数据来源分散难管理（管理问题）、查看数据需要到Solr自身的管理界面上查询（安全问题）等。为规范集群使用，解决以上众多问题，推动了搜索平台的建设，期望实现以下核心功能诉求：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>提供异构数据源数据自动同步到Solr，无需编写任何代码&lt;/p>
&lt;/li>
&lt;li>
&lt;p>对外提供数据检索服务，屏蔽Solr自身检索的复杂性&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="平台架构">平台架构&lt;/h2>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/b7/a7/b7a75082c03b1a800ff99929257418e0.png" alt="%E6%90%9C%E7%B4%A2%E5%B9%B3%E5%8F%B0.png">&lt;/p>
&lt;p>架构图由下向上分别是：&lt;/p>
&lt;h3 id="存储层">存储层&lt;/h3>
&lt;p>存储层包含Hive、MySQL、HBase、Kafka、HDFS等外部数据源，以及平台内部的Solr集群&lt;/p>
&lt;blockquote>
&lt;p>平台目前暂不支持同步HBase数据源的数据，目前HBase主要用于连接（join）获取额外字段&lt;/p>
&lt;/blockquote>
&lt;h3 id="索引层">索引层&lt;/h3>
&lt;p>索引层由多个子模块组成，分别处理来自不同数据源的数据，最终导入到Solr集群中&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Hive → Solr：该模块基于开源的&lt;a href="https://github.com/qindongliang/hive-solr">Hive-Solr&lt;/a>组件进行数据同步&lt;/p>
&lt;/li>
&lt;li>
&lt;p>MySQL → Solr：该模块基于Sqoop将MySQL数据导入到Hive临时表，再利用Hive → Solr模块导入数据，增量部分利用MySQL Binlog → Solr模块处理&lt;/p>
&lt;/li>
&lt;li>
&lt;p>MySQL Binlog → Solr：该模块通过客户端消费统一的Canal Kafka Topic，使用Solr API写入数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Kafka → Solr：该模块通过客户端消费指定的Kafka Topic，使用Solr API写入数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>文件 → Solr：该模块通过读取上传文件的数据，使用Solr API写入数据&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="接入层">接入层&lt;/h3>
&lt;p>接入层包含提供Web界面的Admin模块以及提供API接口的Service模块&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Admin：提供业务接入、数据查询/导出、索引触发/查询、集群节点注册/监控等功能&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Service：提供HTTP接口和RPC接口，包含查询、以及部分更新功能&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="核心功能">核心功能&lt;/h2>
&lt;h3 id="业务管理">业务管理&lt;/h3>
&lt;p>业务是对外部数据源接入平台时的一个统称，每个业务都会对应一个外部数据源、一个Solr Collection以及其他的一些配置信息（如同步信息等），用户使用平台需要先走业务接入申请，然后由管理员审核（主要是针对用户的场景审核配置是否合理）激活，激活后用户可手动进行同步或等待定时任务生效进行同步。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/f4/df/f4df59096b008907cbdbc4c8b197b9d4.png" alt="Untitled.png">&lt;/p>
&lt;p>业务接入需要填写的信息包含三个部分：接入信息、数据来源、同步信息&lt;/p>
&lt;p>&lt;strong>业务接入-接入信息：&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/12/de/12de1bb6784a1cebd2619db2df47e4eb.png" alt="Untitled.png">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>业务名称：对业务的一个简要描述&lt;/p>
&lt;/li>
&lt;li>
&lt;p>索引表名：Solr Collection名&lt;/p>
&lt;/li>
&lt;li>
&lt;p>业务描述：对业务的一个详细描述&lt;/p>
&lt;/li>
&lt;li>
&lt;p>业务类型：区分不同使用场景的业务，后续会针对不同类型的业务对Collection分配不同数量的分片&lt;/p>
&lt;/li>
&lt;li>
&lt;p>总数据量级：对数据量级的一个大致评估，后续会针对不同量级的业务对Collection分配不同数量的分片&lt;/p>
&lt;/li>
&lt;li>
&lt;p>分片数量：强制指定Collection的分片数量，未指定时会根据业务类型和数据量级进行决定&lt;/p>
&lt;/li>
&lt;li>
&lt;p>告警邮件：索引失败时接收通知的邮件，这里设计得有点不好，直填邮件的方式，容易因人员离职后邮件失效影响通知&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>业务接入-数据来源：&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Hive接入&lt;/strong>是目前平台使用最多的接入方式，平台会从Hive对应的元数据库中读取Hive库、表、字段供用户选取&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/fa/9f/fa9f0e8652ed7d401b06037e1b1bb4c3.png" alt="Untitled.png">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>集群：因集群迁移需要所冗余的字段，因之前只支持单集群&lt;/p>
&lt;/li>
&lt;li>
&lt;p>数据库：对应Hive库&lt;/p>
&lt;/li>
&lt;li>
&lt;p>数据表：对应Hive表&lt;/p>
&lt;/li>
&lt;li>
&lt;p>字段：对应Hive字段&lt;/p>
&lt;/li>
&lt;li>
&lt;p>主键：选择当成主键的Hive字段&lt;/p>
&lt;/li>
&lt;li>
&lt;p>是否连接额外字段：可以关联指定Hive表获取额外字段（目前跟业务绑定，只提供了固定的表）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>只索引字段：指定字段只需要建索引，不需要存储，默认会存储&lt;/p>
&lt;/li>
&lt;li>
&lt;p>只存储字段：指定字段只需要存储，不需要建索引，默认会索引&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>MySQL接入&lt;/strong>是另外一种常见的接入方式，其填写的信息除多了MySQL连接信息外，其他的与Hive接入方式一样，平台会根据用户填入的数据库地址去读取MySQL库、表、字段供用户选取&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/ec/19/ec19152f091b4fc5053dfff5d09550af.png" alt="Untitled.png">&lt;/p>
&lt;p>&lt;strong>MySQL Binlog接入&lt;/strong>需要先将指定库表注册到平台的Canal处理程序上，由Canal程序统一处理Binlog发送到指定的Kafka上，后续再由Kafka消费模块进行处理&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/b2/76/b276747eeaa2f91fe9468fc739e8e9c0.png" alt="Untitled.png">&lt;/p>
&lt;p>&lt;strong>Kafka接入&lt;/strong>是由接入方定义好消息模板（定义需要写入的字段），平台根据消息模板解析出对应的字段，然后再从消费的消息中取出数据，通过Solr API写入数据（批量写入，会有一定延迟）&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/59/95/59958f46deeea7ce1cba6c8bd3623262.png" alt="Untitled.png">&lt;/p>
&lt;p>&lt;strong>RPC接入&lt;/strong>是由接入方通过平台对外提供的RPC接口写入数据（实时写入）&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/1b/39/1b3946105194a95988cd65f2c365e4dd.png" alt="Untitled.png">&lt;/p>
&lt;p>&lt;strong>文件接入&lt;/strong>按照平台字段规范组织数据，并将文件通过接口上传到指定位置，同步程序检测到文件后会进行处理&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/56/5f/565f8d2133488df43cd0a37760ffe5d1.png" alt="Untitled.png">&lt;/p>
&lt;p>&lt;strong>业务接入-同步信息：&lt;/strong>&lt;/p>
&lt;p>同步信息跟随接入方式不同，需要填写的信息也随之不同，以下是Hive接入方式需要填写的信息：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/05/3d/053de3b008178521d57a671c0a0ac8e0.png" alt="Untitled.png">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>同步开始时间：指定定时同步开始时间&lt;/p>
&lt;/li>
&lt;li>
&lt;p>同步间隔时间：指定定时同步的间隔时间&lt;/p>
&lt;/li>
&lt;li>
&lt;p>同步分区：指定需要同步的分区，一般是指定最新分区，即会在同步的时候选择读取最新分区的数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>分区字段：指定作为分区的字段&lt;/p>
&lt;/li>
&lt;li>
&lt;p>同步方式：增量或全量，增量在更新时会覆盖主键相同的数据，全量在更新时会先删除数据再导入&lt;/p>
&lt;/li>
&lt;li>
&lt;p>保留时间：在增量同步方式下启用，选择数据需要保留的天数&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>目前保留指定天数采用的是按天生成分片，定时清理过期的分片&lt;/p>
&lt;/blockquote>
&lt;h3 id="索引管理">索引管理&lt;/h3>
&lt;p>当手动或定时触发业务同步时，会生成一条索引任务，通过界面可以查看业务最新的以及历史的索引任务进行情况（耗时、执行状态等），如果想了解索引执行的详细过程也可以通过索引日志查看，平台会记录索引过程中的关键日志。如果用户不想索引任务继续执行的话，可以在界面上操作终止索引&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/db/69/db69fe4945f5cb58ace5765a6d875210.png" alt="Untitled.png">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/90/3c/903c0c92a99cce7ba67f52bd3f469445.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="业务数据">业务数据&lt;/h3>
&lt;p>当索引任务执行完成，数据成功同步到平台的Solr集群后，可通过界面查看/查询具体数据，也可导出自己想要的数据&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/6e/e2/6ee263d0663849c2a6466b9533f511bb.png" alt="Untitled.png">&lt;/p>
&lt;p>有时候用户会想要知道某个字段的数据分布，比如某个类别字段在线上分别有哪些类别，因此平台也提供了分组统计的功能，并通过图表形式展示数据的分布情况&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/ba/f9/baf9de9d4c8d181475257ef5838a83e7.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="集群管理">集群管理&lt;/h3>
&lt;p>集群管理主要包含对集群节点的注册、监控与告警，在创建Collection时会根据节点的负载情况选择合适的节点存放&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/5d/a2/5da201a31db1ad2cad4ed0f4bd38ed3d.png" alt="Untitled.png">&lt;/p>
&lt;h2 id="展望未来">展望未来&lt;/h2>
&lt;p>平台建设初期主要是为了支撑内部的推荐和搜索业务，随着平台核心功能逐步稳定，也开始对其他外部系统开放使用，整体反馈效果良好，但平台在某些地方还是存在设计缺陷，要推广出去乃至作为数据中台的在线检索解决方案还需持续改进，从目前来看，平台至少可以在以下的几个方面做得更好：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>丰富支持的数据源类型，完善数据源扩展机制。当前Hive接入只支持平台内置的数据源，不支持动态扩展；缺乏其他常用数据源的支持，如PostgreSQL。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>提供灵活的告警机制，如指定通知发送模板、触发点、发送方式等。当前告警只提供了邮件方式且只有在失败的情况下才发。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>提升系统可用性。考虑索引节点宕机时如何迁移索引以保证可用等问题&lt;/p>
&lt;/li>
&lt;/ul>
&lt;br/>
&lt;br/></description><category domain="https://ithorizon.top/categories/%E6%8E%A8%E8%8D%90%E5%B7%A5%E7%A8%8B%E7%B3%BB%E5%88%97/">推荐工程系列</category><category domain="https://ithorizon.top/tags/%E6%8E%A8%E8%8D%90%E5%B7%A5%E7%A8%8B/">推荐工程</category><category domain="https://ithorizon.top/tags/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/">工作总结</category><category domain="https://ithorizon.top/tags/%E6%90%9C%E7%B4%A2%E5%B9%B3%E5%8F%B0/">搜索平台</category></item><item><title>推荐工程-实验平台</title><link>https://ithorizon.top/posts/2022-03-30-experiment_platform/</link><guid isPermaLink="true">https://ithorizon.top/posts/2022-03-30-experiment_platform/</guid><pubDate>Wed, 30 Mar 2022 04:48:00 +0000</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;blockquote>
&lt;p>基于Google重叠实验论文的（简化）实现，提供简单、高效的实验接入方式，支持同时进行大量线上实验，实验效果及时反馈等&lt;/p>
&lt;/blockquote>
&lt;h2 id="背景">背景&lt;/h2>
&lt;p>早期的AB实验一般都是单层实验，逻辑实现简单，比如直接对用户流量进行分组，即可假设所有用户固定分桶区间为[0, 99]，每个实验组为区间内的一个不重叠子集，然后使用userId/deviceId计算hash值对分组数取模，得出用户所命中的实验组。这种方法易用且具有相对的灵活性，但会存在以下的问题：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>扩展性差，只能同时支持少量实验。虽然可以将流量分成很多组，但实验组一般都会要求样本数不能太少，这对本身流量较少的业务来说，分组的数量会受到限制。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>流量饥饿问题：总流量固定，如果某些实验组需要比较大的流量进行实验，则需要减少其他实验组的流量，导致其他实验组只有少量流量甚至没有流量可用。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>流量偏置问题：比如某个实验把大部分男性用户都获取了，导致其他实验很少甚至没有男性用户的样本，实验结果会有偏差。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>为解决以上问题，需要搭建一个能支持大量线上实验且能够保障独立实验间不会相互影响的平台，通过调研发现，Google发布的论文【Google 重叠实验框架：更多，更好，更快地实验】（&lt;a href="https://github.com/oldratlee/translations/tree/master/overlapping-experiment-infrastructure-more-better-faster-experimentation">译文地址&lt;/a>）已经为如何实现这样的一个平台提供了相关实践，因此我们基于该论文以及自身业务的特点搭建了分层实验平台，使用该平台替代了旧的单层实验方式，大大的提升了做线上实验的效率。&lt;/p>
&lt;h2 id="平台架构">平台架构&lt;/h2>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/5b/40/5b40cb4e8567bc5b1df7a2ffb375adf1.png" alt="%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0.png">&lt;/p>
&lt;p>平台整体架构比较简单，主要以下三层结构：&lt;/p>
&lt;h3 id="存储层">&lt;strong>存储层&lt;/strong>&lt;/h3>
&lt;p>该层只依赖MySQL数据库，用来存放平台所生产的相关数据。&lt;/p>
&lt;h3 id="接口层">&lt;strong>接口层&lt;/strong>&lt;/h3>
&lt;p>接口层包含对外提供服务的Http接口以及语言相关的SDK包，应用可以通过以上两种方式进行接入，此外，平台也开放了相关写入API，方便接入方通过编码的方式生成场景或实验的相关配置。&lt;/p>
&lt;h3 id="展示层">&lt;strong>展示层&lt;/strong>&lt;/h3>
&lt;p>展示层提供面向用户的界面功能，包含应用管理、场景管理、参数管理、实验记录、实验效果和白名单管理功能，基本覆盖日常实验所需功能。&lt;/p>
&lt;h2 id="核心功能">核心功能&lt;/h2>
&lt;h3 id="应用管理">应用管理&lt;/h3>
&lt;p>应用是平台用来管理不同项目（可能是一个服务或多个服务）的接入信息所抽象出来的概念，每个接入的项目需要创建对应的应用，不同应用的数据是隔离的（没有应用的权限则看不到应用数据），负责人或管理员可以将应用权限授权给其他用户。&lt;/p>
&lt;p>&lt;strong>应用列表页：&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/57/98/5798b6490c9af346e5e147888d6760ca.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="场景管理">场景管理&lt;/h3>
&lt;p>场景是归属于应用内的数据，对应于实际线上需要进行实验的某个场景，比如猜你喜欢推荐场景等，这里的场景也是Google论文里面所提到的默认域的实现。&lt;/p>
&lt;p>&lt;strong>场景列表页：&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/17/15/1715779c3a135f7680255d750c08285c.png" alt="Untitled.png">&lt;/p>
&lt;p>进入到某个场景的内部，就是实际的编辑实验的位置，这里我们对于论文里面所提到的域、层、发布层以及实验都做了实现，但也根据自身业务做了一些精简，比如限制了层内不能再嵌套域、参数只能在默认域（默认参数）、实验（实验参数）和发布层（灰度参数）存在。&lt;/p>
&lt;p>&lt;strong>树形图的编辑方式&lt;/strong>，可快速构建层级结构或修改单一元素：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/62/2a/622a89328689299df5753f617d9bb40d.png" alt="Untitled.png">&lt;/p>
&lt;p>&lt;strong>目录树的编辑方式&lt;/strong>，可同时对多个元素进行修改：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/01/ef/01ef6aaf63b7c98c1252a40c86f070d6.png" alt="Untitled.png">&lt;/p>
&lt;p>另外，当实验越来越多时所需要的参数也随之变多，如果每次都在实验上直接修改，久而久之可能会忘记实验参数是来源于哪个实验内容，对此我们弄了针对实验参数单独管理的功能，通过独立出实验配置参数，可以追溯每个实验内容所涉及到的参数。&lt;/p>
&lt;p>&lt;strong>实验参数列表页：&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/51/25/51255e355b0bec050af2e32664cc57a1.png" alt="Untitled.png">&lt;/p>
&lt;p>当配置好实验参数并且测试/预发环境对实验组进行验证后，可以选择发布到线上的环境，每次发布（包含上线、下线、全量）实验会记录对应的实验内容，一个是方便产品或相关开发知道线上存在哪些实验，另一个是后续实验效果的统计会基于这些记录进行。&lt;/p>
&lt;p>&lt;strong>实验记录列表页：&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/e1/2a/e12a9ab7a5741d571d1289b6146cc60f.png" alt="Untitled.png">&lt;/p>
&lt;p>&lt;strong>实验效果页：&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/c0/dc/c0dcdea08c4695eed4b9721634277867.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="白名单管理">白名单管理&lt;/h3>
&lt;p>白名单是用来强制指定某个用户所命中的实验组，不需要经过hash分组过程，常用来测试或验证实验组所修改的东西。&lt;/p>
&lt;p>&lt;strong>白名单列表页：&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/f5/53/f553c44af35e949b9392f588a5a084ba.png" alt="Untitled.png">&lt;/p>
&lt;h2 id="展望未来">展望未来&lt;/h2>
&lt;p>目前平台已经满足主要业务的实验需求，核心功能已逐渐成熟稳定，平台所得到的反馈也更多的是在接入和使用流程方面，因此未来可以考虑在用户使用体验、平台周边工具这方面进行迭代优化，可以是以下的几个点：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>提供通用的场景配置模板，提高场景配置效率&lt;/p>
&lt;/li>
&lt;li>
&lt;p>提升实验效果统计数据的实时性（目前一般是T+1计算）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>提供流量评估相关的工具等&lt;/p>
&lt;/li>
&lt;/ul></description><category domain="https://ithorizon.top/categories/%E6%8E%A8%E8%8D%90%E5%B7%A5%E7%A8%8B%E7%B3%BB%E5%88%97/">推荐工程系列</category><category domain="https://ithorizon.top/tags/%E6%8E%A8%E8%8D%90%E5%B7%A5%E7%A8%8B/">推荐工程</category><category domain="https://ithorizon.top/tags/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/">工作总结</category><category domain="https://ithorizon.top/tags/%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0/">实验平台</category></item><item><title>推荐工程-策略平台</title><link>https://ithorizon.top/posts/2022-03-26-strategy_platform/</link><guid isPermaLink="true">https://ithorizon.top/posts/2022-03-26-strategy_platform/</guid><pubDate>Sat, 26 Mar 2022 10:45:00 +0000</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;blockquote>
&lt;p>对推荐和搜索业务处理通过DAG图可视化方式组织，提供统一对外服务接口、DAG图执行引擎，处理如并发执行、日志上报、监控等业务无关需求，让使用者可专注于业务开发&lt;/p>
&lt;/blockquote>
&lt;h2 id="背景">背景&lt;/h2>
&lt;p>随着公司业务的发展，有越来越多的业务场景需要接入推荐，推荐场景最初的开发模式是推荐算法和工程同事根据需求开发完成推荐接口，最后与业务服务端同事进行对接，在这个开发模式下遇到了众多问题：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>针对不同推荐场景需要单独开一个接口，接口协议按需制定，每开发完⼀个接口都要重新对接⼀遍&lt;/p>
&lt;/li>
&lt;li>
&lt;p>每个推荐场景内的处理流程是个黑盒，众多处理逻辑耦合在⼀起，重用困难，开发非常耗时&lt;/p>
&lt;/li>
&lt;li>
&lt;p>针对较复杂的推荐场景往往会有很多处理逻辑，为了保持接口性能，需要考虑并发处理等非业务相关的功能，无法专注于业务开发&lt;/p>
&lt;/li>
&lt;li>
&lt;p>推荐逻辑多而杂，仅以接口为粒度的监控太粗，难以定位接口内耗时较多的逻辑，优化受阻；针对部分逻辑（如某一路召回）无法在出错时做熔断处理，导致因部分出错而影响到整个接口的响应&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>为解决以上问题，工程同事推动了策略平台的建设，期望满足以下核心诉求：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>推荐服务对外抽象出⼀个通用接口，与业务方只需对接一次接口协议&lt;/p>
&lt;/li>
&lt;li>
&lt;p>每个推荐场景通过DAG图方式组织执行，由一个个逻辑处理模块组成，处理流程可视化，模块可复用&lt;/p>
&lt;/li>
&lt;li>
&lt;p>提供统一的DAG执行引擎，处理并发、日志上报等非业务相关的功能，让开发者可专注于业务开发&lt;/p>
&lt;/li>
&lt;li>
&lt;p>提供统一的监控、分析功能，为性能优化提供指引，支持针对单一模块、单一业务场景的熔断，以保证接口正常运行&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="平台架构">平台架构&lt;/h2>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/6d/87/6d8708a6fee2304a865f6a5254d08a8d.png" alt="%E6%8E%A8%E8%8D%90%E7%AD%96%E7%95%A5%E5%B9%B3%E5%8F%B0.png">&lt;/p>
&lt;h2 id="核心功能">核心功能&lt;/h2>
&lt;h3 id="业务场景管理">&lt;strong>业务场景管理&lt;/strong>&lt;/h3>
&lt;p>业务场景是用来表示某个推荐的场景或构成推荐的部分逻辑，比如综合-首页推荐（推荐场景）、固定位-首页固定位召回（推荐的部分逻辑）等，调用方会通过业务场景来识别具体的推荐。&lt;/p>
&lt;p>PS：在平台接入多个不同项目（App）后，业务将对应于某个App，场景则对应于App下的不同推荐场景&lt;/p>
&lt;p>&lt;strong>业务场景列表页：&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/b4/84/b484ca09609df21f5e3c0eed99e0ded0.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="项目管理">&lt;strong>项目管理&lt;/strong>&lt;/h3>
&lt;p>以上的业务场景只是描述了某个推荐的场景，具体在推荐做了什么事，则是由项目来说明的。项目中核心的组成部分是&lt;strong>模块/模块实例&lt;/strong>，每个项目由众多个模块/模块实例组成一个&lt;strong>有向无环图&lt;/strong>，完成一个推荐场景（部分逻辑）所做的事情。&lt;/p>
&lt;p>&lt;strong>项目列表页：&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/69/c5/69c5a687b86cd42558b41318e82671ca.png" alt="Untitled.png">&lt;/p>
&lt;p>&lt;strong>项目编辑页：&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/8b/40/8b4091cee2b1be56929aaf9fab94d976.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="模块管理">&lt;strong>模块管理&lt;/strong>&lt;/h3>
&lt;p>模块是项目中执行业务逻辑的最小单元，每个模块对应到项目代码中的某个类，模块的key为类的名称，模块可附带一些自定义的参数，方便在运行过程动态修改。
PS：为解决同一模块可在同一项目中存在多个，引入了模块实例，模块实例可完成的功能与它依赖的模块一样，可简单理解为是多带了标识的模块。&lt;/p>
&lt;p>&lt;strong>模块列表页：&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/93/8a/938a5f47c3937082a7a4b1745d91ff23.png" alt="Untitled.png">&lt;/p>
&lt;p>&lt;strong>模块编辑页：&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/20/1d/201d48e6921464ccd4469cf2c8cc8dda.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="推荐模拟">&lt;strong>推荐模拟&lt;/strong>&lt;/h3>
&lt;p>推荐模拟是用来模拟调用推荐接口的一个工具，通过调用推荐的rpc接口，可查看到推荐返回的结果，方便测试、检验推荐效果等。&lt;/p>
&lt;p>&lt;strong>模拟推荐页：&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/ab/7b/ab7b3897165b52789b02f0a4a9e45077.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="日志查询">&lt;strong>日志查询&lt;/strong>&lt;/h3>
&lt;p>日志查询提供了查看推荐过程及状态的功能，可查询某个用户的推荐，便于开发测试验证以及辅助定位线上问题等。&lt;/p>
&lt;p>&lt;strong>日志查询页：&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/d9/96/d99623d5dc5b0084e92865857f8cf7b3.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="模块数据">&lt;strong>模块数据&lt;/strong>&lt;/h3>
&lt;p>模块数据可实时查询每个业务场景、模块的耗时情况，也可查看两者的历史耗时情况，便于做性能优化。&lt;/p>
&lt;p>&lt;strong>模块数据页：&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/e7/e9/e7e9e394efcff685179e9197db90e50a.png" alt="Untitled.png">&lt;/p>
&lt;h2 id="展望未来">展望未来&lt;/h2>
&lt;p>因平台是从0到1构建的，初期为满足业务需求，平台与其他平台或业务存在较多的耦合，以至于整体功能/架构比较臃肿，且部分实现未考虑周全，现平台已逐步稳定运行，未来可考虑在以下方面进行进一步优化：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>优化整体架构，往可插拔的架构发展，平台核心只提供统一的DAG执行引擎，其他部分功能可通过插件按需扩展&lt;/p>
&lt;/li>
&lt;li>
&lt;p>沉淀一些可复用的模块，供各业务场景使用&lt;/p>
&lt;/li>
&lt;li>
&lt;p>提供模块热更新等动态加载功能，减少更新服务的频率&lt;/p>
&lt;/li>
&lt;/ul></description><category domain="https://ithorizon.top/categories/%E6%8E%A8%E8%8D%90%E5%B7%A5%E7%A8%8B%E7%B3%BB%E5%88%97/">推荐工程系列</category><category domain="https://ithorizon.top/tags/%E6%8E%A8%E8%8D%90%E5%B7%A5%E7%A8%8B/">推荐工程</category><category domain="https://ithorizon.top/tags/%E7%AD%96%E7%95%A5%E5%B9%B3%E5%8F%B0/">策略平台</category><category domain="https://ithorizon.top/tags/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/">工作总结</category></item><item><title>推荐工程-特征平台</title><link>https://ithorizon.top/posts/2022-03-13-feature_platform/</link><guid isPermaLink="true">https://ithorizon.top/posts/2022-03-13-feature_platform/</guid><pubDate>Sun, 13 Mar 2022 10:45:00 +0000</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;blockquote>
&lt;p>对线上特征统一进行管理，规范特征生产、存储、查询流程，降低特征的使用成本和维护成本&lt;/p>
&lt;/blockquote>
&lt;h1 id="背景">背景&lt;/h1>
&lt;p>在推荐业务场景日益增多的情况下，推荐所需要的特征也在不断增多，现有的特征使用情况逐渐暴露了以下使用问题：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>写入比较分散，每个人都生产自己需要的特征，写入格式杂乱，不能达到很好的特征复用&lt;/p>
&lt;/li>
&lt;li>
&lt;p>特征存储在HBase上，HBase集群运维成本大，偶尔发生不稳定的情况（因写入大影响到查询等），导致大量特征查询超时&lt;/p>
&lt;/li>
&lt;li>
&lt;p>特征使用情况不明确，不能很清楚各个服务对特征的依赖&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>为解决以上问题，工程同事推动了特征平台的建设，期望满足以下核心诉求：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>化零为整：提供web界面，统一管理特征的读写&lt;/p>
&lt;/li>
&lt;li>
&lt;p>稳定可靠：降低特征服务读取延时&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="平台架构">平台架构&lt;/h1>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/23/09/230951e7ab62a1a7b825ba7d906c349b.png" alt="%E7%89%B9%E5%BE%81%E5%B9%B3%E5%8F%B0.png">&lt;/p>
&lt;p>架构图由下向上分别是：&lt;/p>
&lt;h2 id="存储层">&lt;strong>存储层&lt;/strong>&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Kafka：用于接收实时特征&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Redis、HBase：用于存放特征（离线+实时），提供在线查询，其中离线特征在Redis中采取压缩手段以节省内存&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Hive：用于存放离线特征&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Rocksdb：用于存放物品特征（离线+实时），提供在线查询，替换Redis中存储的物品特征&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="计算层">&lt;strong>计算层&lt;/strong>&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Spark Streaming、Flink：用于生产实时特征&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Spark SQL：用于同步Hive离线特征到在线的存储&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="业务处理层">&lt;strong>业务处理层&lt;/strong>&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>实时处理程序：接收Kafka实时特征，写入Redis&lt;/p>
&lt;/li>
&lt;li>
&lt;p>离线处理程序：同步Hive离线特征，写入Redis&lt;/p>
&lt;/li>
&lt;li>
&lt;p>索引处理程序：接收Kafka实时特征 + 同步Hive离线特征，写入Rocksdb&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="接入层">&lt;strong>接入层&lt;/strong>&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Admin：特征管理界面，提供离线/实时特征注册、特征集配置、特征查询功能&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Service：提供特征查询Rpc接口&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="核心功能">核心功能&lt;/h1>
&lt;h2 id="特征生产">特征生产&lt;/h2>
&lt;h3 id="离线特征">&lt;strong>离线特征&lt;/strong>&lt;/h3>
&lt;p>目前在离线特征生产方面工程同学暂时还未有过多的介入，这方面的特征大都是算法同学通过Hive SQL计算提取出来，工程同学暂仅限于提供一些UDF函数支持。算法同学在这一过程最终会生产出多张Hive特征表，供后续流程使用。&lt;/p>
&lt;h3 id="实时特征">&lt;strong>实时特征&lt;/strong>&lt;/h3>
&lt;p>对于实时特征方面，工程同学尝试利用Spark Streaming结合Spark SQL定义一个规范处理流程（统一输入+SQL+统一输出），让算法同学可以在界面上编写SQL来生产实时特征，同时工程同学可以在流程内加入一些监控、告警等辅助功能，下面是Spark Streaming程序定义的界面：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/58/25/58252c8211eda29f89285bdf28107f94.png" alt="Untitled.png">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>基本信息：填写Spark Streaming程序的一些基础信息&lt;/p>
&lt;/li>
&lt;li>
&lt;p>补充数据信息：可以从其他数据源（如HBase）关联补充一些数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>计算信息：编写SQL&lt;/p>
&lt;/li>
&lt;li>
&lt;p>输出信息：指定输出结果存储到哪里&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>功能上线后陆续接入了几个生产程序，整体效果还是可以的，相比之前每个算法同学都自己编写和维护自己的Spark Streaming程序，使用这种方式明显减少了算法同学的开发以及维护成本。&lt;/p>
&lt;h2 id="特征存储">特征存储&lt;/h2>
&lt;h3 id="基于redis存储">基于Redis存储&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>特征类型&lt;/strong>：离线+实时&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>特征版本&lt;/strong>：单版本，用新数据直接覆盖旧数据，实现简单，对物理存储占用较少，但在数据异常时无法快速回滚&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>特征序列化&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>单表离线特征&lt;/strong>：hash结构，key为物品id，field为离线特征表id，value为所有特征列拼接的值（colConfigId\001colValue\001colValue，其中colConfigId为列配置记录id，\001为特殊分隔符，colValue为列值，colValue为null时用\002填充，采用Snappy压缩value以节省空间）&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/cc/2d/cc2df6fc3819b3dff8b3a98d8a7d93b4.png" alt="Redis%E7%A6%BB%E7%BA%BF%E7%89%B9%E5%BE%81%E5%AD%98%E5%82%A8%E6%A0%BC%E5%BC%8F.png">&lt;/p>
&lt;p>&lt;strong>交叉表离线特征&lt;/strong>：hash结构，key为物品id，field为交叉物品id，value为所有特征列拼接的值（colConfigId\001colValue\001colValue，其中colConfigId为列配置记录id，\001为特殊分隔符，colValue为列值，colValue为null时用\002填充，采用Snappy压缩value以节省空间）&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/87/33/8733d94f4cac1aeb80c26a62d87fda30.png" alt="redis%E5%AE%9E%E6%97%B6%E7%89%B9%E5%BE%81%E5%AD%98%E5%82%A8%E6%A0%BC%E5%BC%8F.png">&lt;/p>
&lt;p>&lt;strong>单表实时特征&lt;/strong>：hash结构，key为物品id_rt（_rt为后缀字符串，与离线特征区分），field为实时字段名，value为实时字段值&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/a0/c7/a0c7a14ae1e31d8b4fbbaa4d4dec67d8.png" alt="redis%E5%AE%9E%E6%97%B6%E7%89%B9%E5%BE%81%E5%AD%98%E5%82%A8%E6%A0%BC%E5%BC%8F.png">&lt;/p>
&lt;p>&lt;strong>交叉表实时特征&lt;/strong>：hash结构，key为物品id_rt（_rt为后缀字符串，与离线特征区分），field为交叉物品id，value为实时字段key-value json串&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/08/44/08447394944f828ec8730832e3481172.png" alt="redis%E5%AE%9E%E6%97%B6%E4%BA%A4%E5%8F%89%E8%A1%A8%E5%AD%98%E5%82%A8%E6%A0%BC%E5%BC%8F.png">&lt;/p>
&lt;blockquote>
&lt;p>PS：离线特征过期时间为7天、实时特征过期时间为3天，具体根据实际业务场景设置&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>实现方式&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>离线：利用&lt;code>SparkSQL&lt;/code>读取&lt;code>Hive&lt;/code>表数据通过&lt;code>Redis Pipline&lt;/code>录入到&lt;code>Redis&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>实时：利用&lt;code>Spark Streaming&lt;/code>生成实时特征发往&lt;code>Kafka&lt;/code>，消费&lt;code>Kafka&lt;/code>数据录入到&lt;code>Redis&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/04/cd/04cdb8602a957c826eda308f715c9584.png" alt="Untitled.png">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>优缺点&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>优点&lt;/p>
&lt;ul>
&lt;li>
&lt;p>实现简单&lt;/p>
&lt;/li>
&lt;li>
&lt;p>性能良好&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>缺点&lt;/p>
&lt;ul>
&lt;li>
&lt;p>用特殊值拼接各列值存在风险&lt;/p>
&lt;/li>
&lt;li>
&lt;p>不支持异常快速回滚&lt;/p>
&lt;/li>
&lt;li>
&lt;p>量大时更新较慢（为防止影响线上读控制了写入速率）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>内存占用较多&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="基于rocksdb存储">基于Rocksdb存储&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>特征类型&lt;/strong>：离线+实时&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>特征版本&lt;/strong>：多版本，每一份数据对应特定版本，虽然物理存储占用较多，但在数据异常时可通过版本切换的方式快速回滚&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>PS：离线按天生成版本，全实时/离线+全实时按每6小时生成一个版本，具体根据实际业务场景调整&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>特征序列化&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>KV存储，Value使用自定义的序列化方式以二进制的方式紧凑存储，Value的存储格式为：col_len + col_1_sign + col_1_val + col_2_sign + col_2_val + &amp;hellip; + col_n_sign + col_n_val（根据Schema定义的字段拼接字段值，col_len为定义的字段数，col_i_sign为字段是否为空标识，col_i_val为字段值）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>支持多种数据类型的序列化&lt;/p>
&lt;ul>
&lt;li>
&lt;p>string：len + val_bytes&lt;/p>
&lt;/li>
&lt;li>
&lt;p>list：len + val_1_type + val_1 + val_2 + &amp;hellip; + val_n&lt;/p>
&lt;/li>
&lt;li>
&lt;p>number：val_bytes&lt;/p>
&lt;/li>
&lt;li>
&lt;p>map：len + map_val_type + map_val_1 + map_val_2 + &amp;hellip; + map_val_n&lt;/p>
&lt;ul>
&lt;li>map_val：str_key + val&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/b7/d2/b7d2379e432cf570de29e56f71f7bd9e.png" alt="%E6%97%A0%E6%A0%87%E9%A2%98-2022-03-04-0917.png">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>实现方式&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>离线：由&lt;code>BuildService&lt;/code>读取&lt;code>Hive Metadata&lt;/code>并解析&lt;code>Hdfs File&lt;/code>数据生成&lt;code>Key-Value&lt;/code>录入到&lt;code>Rocksdb Table&lt;/code>，录入完成后将&lt;code>Rocksdb Table&lt;/code>在本地对应的文件打包压缩上传到&lt;code>Hdfs&lt;/code>上，最终由&lt;code>OnlineService&lt;/code>下载到本地并在内存中构建&lt;code>Rocksdb Table&lt;/code>提供在线服务&lt;/p>
&lt;/li>
&lt;li>
&lt;p>实时：由&lt;code>BuildService&lt;/code>消费&lt;code>Kafka&lt;/code>数据录入到&lt;code>Rocksdb Table&lt;/code>，消费到一定时间或数据时会生成一个版本，接着将&lt;code>Rocksdb Table&lt;/code>在本地对应的文件打包压缩上传到&lt;code>Hdfs&lt;/code>上，由&lt;code>OnlineService&lt;/code>下载到本地并在内存中构建&lt;code>Rocksdb Table&lt;/code>提供在线服务，同时&lt;code>OnlineService&lt;/code>也会基于下载版本所消费到的&lt;code>offset&lt;/code>继续消费数据往表中插入/更新数据&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/59/33/59333f9b94315d028602b49ef624cbca.png" alt="%E7%89%B9%E5%BE%81%E5%BD%95%E5%85%A5Rocksdb%E6%B5%81%E7%A8%8B.png">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>优缺点&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>优点&lt;/p>
&lt;ul>
&lt;li>
&lt;p>内存占用较少&lt;/p>
&lt;/li>
&lt;li>
&lt;p>性能良好&lt;/p>
&lt;/li>
&lt;li>
&lt;p>多版本支持异常回滚&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>缺点&lt;/p>
&lt;ul>
&lt;li>实现较复杂，需要进行调优&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="特征查询">特征查询&lt;/h2>
&lt;p>特征查询需要先通过界面配置申请特征集（多个特征）查询key，一个key可以关联多个特征，使用方调用特征查询服务时只需传入这个key，服务内部会根据key去获取关联的特征，拿到结果后返回给使用方，下面是特征集的定义和展示界面：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/8b/8c/8b8cc0f422bd74eb64f16d65f688e7ab.png" alt="Untitled.png">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/10/db/10db7cd02f735de3fa3ad277a34dcab1.png" alt="Untitled.png">&lt;/p>
&lt;h1 id="展望未来">展望未来&lt;/h1>
&lt;p>目前整个特征平台还不是很完善的，比如说离线特征生产这一块，完全还是由算法同学自己去生产，未实现任何工程保障，可能出现类似特征重复生产、特征异常未及时发现等问题。另外，在特征迁移到本地存储后，索引构建时间，特征查询毛刺现象等这些都是需要进行优化的。总的来说，特征平台未来可以在以下方面持续改进：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>特征生产流程工程化&lt;/p>
&lt;/li>
&lt;li>
&lt;p>减少特征存储索引构建时间&lt;/p>
&lt;/li>
&lt;li>
&lt;p>提升特征查询服务的性能&lt;/p>
&lt;/li>
&lt;li>
&lt;p>特征监控&lt;/p>
&lt;/li>
&lt;/ul>
&lt;br/></description><category domain="https://ithorizon.top/categories/%E6%8E%A8%E8%8D%90%E5%B7%A5%E7%A8%8B%E7%B3%BB%E5%88%97/">推荐工程系列</category><category domain="https://ithorizon.top/tags/%E7%89%B9%E5%BE%81%E5%B9%B3%E5%8F%B0/">特征平台</category><category domain="https://ithorizon.top/tags/%E6%8E%A8%E8%8D%90%E5%B7%A5%E7%A8%8B/">推荐工程</category><category domain="https://ithorizon.top/tags/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/">工作总结</category></item><item><title>采坑系列-tar命令解压写入速度过快</title><link>https://ithorizon.top/posts/2022-03-09-tar_command_write_too_fast/</link><guid isPermaLink="true">https://ithorizon.top/posts/2022-03-09-tar_command_write_too_fast/</guid><pubDate>Wed, 09 Mar 2022 01:17:00 +0000</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;blockquote>
&lt;p>采坑系列是记录日常学习/工作中所遇到的问题，可能是一个Bug、一次性能优化、一次思考等，目的是记录自己所处理过的问题，以及解决问题这一过程中所做的思考或总结，避免后续再犯相似的错误。&lt;/p>
&lt;/blockquote>
&lt;h2 id="问题描述">问题描述&lt;/h2>
&lt;p>近期线上的排序服务在某个时间点内出现了大量特征获取超时告警，大概是集中在中午12点左右和下午4点左右，告警持续一会后就自动恢复了，下面是某一天的告警情况：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/d7/80/d780280695b63d5f135984451d28820e.png" alt="">&lt;/p>
&lt;p>服务获取特征是以本地存储（基于Rocksdb）的方式获取的，且内存缓存配置得足够多，数据基本都是从内存中读取，耗时一般在几毫秒左右；看代码在获取特征的地方限制了300ms超时，正常情况下应该不会超过这个时间的，除非是有什么操作导致了获取数据得去读磁盘。&lt;/p>
&lt;h2 id="探究原因">探究原因&lt;/h2>
&lt;h3 id="初探">初探&lt;/h3>
&lt;p>基于以上的想法，首先排查看是否在产生超时的那个时间内，磁盘的读会比正常情况大，下面是服务的某个实例机的I/O监控：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/e3/80/e380cb49aac55da90a2e92b3a49ba15c.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/ce/fc/cefcde9f9eb3a5f3081441aefd180eee.png" alt="">&lt;/p>
&lt;p>基于上面两张监控图可以看到，确实在异常的时间点，磁盘的读会比其他时间段大很多，最大耗时到了 1s 以上，这种情况已经远超过设置的 300ms 超时时间了。此外，在这里也注意到了磁盘的写入速度也异常的大，峰值达到了287.9MB/s。观察到这里，猜测可能是磁盘的写过大导致读响应慢了（个人直觉-。-，具体未去验证），下面就是找出具体是什么原因导致那段时间内磁盘写入速度辣么大。&lt;/p>
&lt;h3 id="再探">再探&lt;/h3>
&lt;p>服务内部获取特征使用到的本地存储框架，是基于Rocksdb存储开发的，下面是该框架与服务的简单交互流程：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/d7/d8/d7d8a10e270b48a076d11a1cc1ffa91e.png" alt="">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>由一个索引服务去同步特征数据写成Rocksdb表，再将写好的Rocksdb文件打包压缩（tar文件）上传到Hdfs上&lt;/p>
&lt;/li>
&lt;li>
&lt;p>排序服务从Hdfs上下载索引服务上传的tar文件到本地，再进行解包解压，然后恢复成Rocksdb表提供查询&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>根据这个流程，再结合服务内部的一些日志，查到了在异常发生的时间段内会有表索引下载操作，所以认为可能是下载Hdfs文件到本地这一操作导致磁盘写入过快，因此在下载那里做了一个限速尝试，但上线后依然写入没有下降。后来再仔细对比了下载日志与磁盘写入监控，发现磁盘写入飙升的时间点刚好是tar文件刚下载完成后，所以猜测可能是tar文件的解压所导致的，接着查看了代码内tar文件的解压方式，发现内部是采用Linux的&lt;code>tar&lt;/code>命令去做解压的，再从网上查到tar命令确实会有解压速度的问题。&lt;/p>
&lt;h2 id="解决方法">解决方法&lt;/h2>
&lt;p>解决tar命令解压写入速度过快的方法，从网上找到了一种方法说可以结合&lt;code>pv&lt;/code>命令使用，但因为考虑安装服务的机器可能没有pv命令，所以没有采用这种方法。因考虑到用命令的方式无法控制写入速度，所以后面决定改用Java的方式去解压，这里采用了Apache的&lt;code>commons-compress&lt;/code>里面的&lt;code>TarArchiveInputStream&lt;/code>去做解压，具体实现如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// FileUtils.java&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">unTar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">InputStream&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">in&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">outputDir&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">unTar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">in&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">outputDir&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IOUtils&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">writeWithoutLimit&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">unTar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">InputStream&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">in&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">outputDir&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IOBiConsumer&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">File&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">InputStream&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">writeFileOp&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">TarArchiveInputStream&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tis&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TarArchiveInputStream&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">in&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">TarArchiveEntry&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">nextEntry&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">nextEntry&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getNextTarEntry&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nextEntry&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isDirectory&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">continue&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">writeFileOp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">accept&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">File&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">outputDir&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">nextEntry&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="p">()),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tis&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// IOUtils.java&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">writeWithoutLimit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">File&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">outputFile&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">InputStream&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">in&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">createParentIfNotExists&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">outputFile&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">BufferedOutputStream&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">bos&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">BufferedOutputStream&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">FileOutputStream&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">outputFile&lt;/span>&lt;span class="p">)))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">writeWithoutLimit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bos&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">in&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">createParentIfNotExists&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">File&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">outputFile&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">outputFile&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getParentFile&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">exists&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">outputFile&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getParentFile&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">mkdirs&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">writeWithoutLimit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">OutputStream&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">InputStream&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">in&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">bytes&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">1024&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">len&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">len&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">in&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bytes&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bytes&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">len&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">flush&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>更换了解压方式后，磁盘写入速度峰值降到了90MB/s左右，磁盘读耗时峰值也降到了300ms，下面是更换后的I/O监控：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/0a/e0/0ae0ed31581208c2f9790d4c5b6fb8b6.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/67/f7/67f7b2c8fb454c5b850efb571f9c1cb0.png" alt="">&lt;/p>
&lt;p>异常超时的量也从原来的1600多个，降到了200多个，下面是更换后的异常超时监控：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/5a/b8/5ab8edd7869f52d486dd34001e711f63.png" alt="">&lt;/p>
&lt;p>后面发现存储框架那边的流程其实可以简化，让排序服务直接读取Hdfs上的tar文件并解压到本地，可以省去从Hdfs上下载文件到本地的过程，不仅减少了索引下载到加载的时间，而且也减少了磁盘的写入，修改后的磁盘写入速度下降到了50MB/s以下，磁盘读取耗时峰值降到了170ms左右，异常超时发生的数量也减了不少。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>本次所遇到的问题算是比较不常见的，因为日常做业务开发涉及到磁盘I/O的可能会比较少，因此也很少关注这方面的问题；刚好是服务用到了本地存储这个对磁盘读写比较敏感的东西，磁盘有一点比较大的波动就可能对服务性能产生影响，因此需要特别留意磁盘的写入速度。这次排查能够比较顺利很大的功劳在于监控系统，在业务监控系统能够看到异常发生的问题点以及时间点，在基础监控系统能够看到机器磁盘I/O的变化情况，再结合部分业务日志，定位问题显然高效了许多，所以有一套比较完善的监控体系真挺重要的。&lt;/p></description><category domain="https://ithorizon.top/categories/%E9%87%87%E5%9D%91%E7%B3%BB%E5%88%97/">采坑系列</category><category domain="https://ithorizon.top/tags/tar%E5%91%BD%E4%BB%A4/">Tar命令</category><category domain="https://ithorizon.top/tags/%E7%A3%81%E7%9B%98i/o/">磁盘I/O</category></item><item><title>采坑系列-ArrayList并发写出现Null值</title><link>https://ithorizon.top/posts/2022-03-03-arraylist_concurrency-_issues/</link><guid isPermaLink="true">https://ithorizon.top/posts/2022-03-03-arraylist_concurrency-_issues/</guid><pubDate>Thu, 03 Mar 2022 15:27:00 +0000</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;blockquote>
&lt;p>采坑系列是记录日常学习/工作中所遇到的问题，可能是一个Bug、一次性能优化、一次思考等，目的是记录自己所处理过的问题，以及解决问题这一过程中所做的思考或总结，避免后续再犯相似的错误。&lt;/p>
&lt;/blockquote>
&lt;h2 id="问题描述">问题描述&lt;/h2>
&lt;p>在并发场景下ArrayList是线程非安全的，并发往ArrayList里面添加元素，可能导致内部出现Null值的情况，尽管你添加进去的元素能保证非Null，但Null值不是来源你添加进去的元素，而是因为并发add导致ArrayList内部索引错乱，下面例子可复现错误（如果跑一次没有复现需跑多几次）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Exception&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">threadNum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CountDownLatch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">await&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CountDownLatch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">threadNum&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CyclicBarrier&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">barrier&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CyclicBarrier&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">threadNum&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">threadNum&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">finalI&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">(()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">barrier&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">await&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">InterruptedException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">BrokenBarrierException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">printStackTrace&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">finalI&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">await&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">countDown&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}).&lt;/span>&lt;span class="na">start&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">await&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">await&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;arr.size=&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">size&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">size&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Value is null, index=&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>复现错误的输出如下，可见index为0的位置出现了Null值：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/25/21/25212518d205dbb58594b27b9af24688.png" alt="">&lt;/p>
&lt;p>Debug断点后可看到如下arr变量的数据，发现在index为0的位置确实是Null值，而且在arr里面缺少了本应该存在的数值0，说明在并发情况下ArrayList发生了不可预知的错误。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/ca/2a/ca2aa8b4ba5003550f184074ef19c4b6.png" alt="">&lt;/p>
&lt;h2 id="探究原因">探究原因&lt;/h2>
&lt;h3 id="初探">初探&lt;/h3>
&lt;p>查看ArrayList的add方法源码，内部操作很简单，只有三行代码：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;code>ensureCapacityInternal&lt;/code>，内部对&lt;code>modCount&lt;/code>值加1，并判断添加元素是否需要扩容，需要则对底层数组进行扩容&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>elementData[size++] = e&lt;/code>，将待添加元素e存放进数组，然后执行size++&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>return true&lt;/code>，返回添加成功&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">E&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ensureCapacityInternal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Increments modCount!!&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">elementData&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="o">++]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>从上面可看到修改ArrayList元素的地方是第二行代码&lt;code>elementData[size++] = e;&lt;/code>，该操作包含了&lt;code>size++&lt;/code>还有赋值操作，我们知道自增操作是非原子性的，可拆分为：读-加-写，那么这一语句就包含了4个操作：读-加-写-数组元素赋值，类似于下面的操作（下面的代码只是做说明，实际执行的是字节码指令）：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/5f/89/5f8967a85b981d4ec64c96896cdf7a05.png" alt="">&lt;/p>
&lt;p>拆分出上面几个操作后，我们可以尝试分析下在多个线程同时执行上面操作时，会出现哪些问题&lt;/p>
&lt;ol>
&lt;li>&lt;strong>覆盖/丢失值&lt;/strong>&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>
&lt;p>线程1拿到的size为0，执行完操作2后让出CPU给到线程2，此时index为0，size未更新还是0&lt;/p>
&lt;/li>
&lt;li>
&lt;p>线程2开始执行拿到的size为0，index为0，执行完以上所有操作后让出CPU给到线程1，此时size被更新为1&lt;/p>
&lt;/li>
&lt;li>
&lt;p>线程1继续执行步骤3和4，index为之前获取到的值0，size被更新为1，因此出现线程1的元素覆盖了线程2的元素（线程2的元素丢失了）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>到这里貌似没能找出为啥会出现Null值的原因，反而分析出了另外一个问题-。-；既然Null值问题不是出现在第二行代码，那么就只有可能在第一行代码里面出现了（废话-__-）&lt;/p>
&lt;h3 id="再探">再探&lt;/h3>
&lt;p>回头看&lt;code>ensureCapacityInternal&lt;/code>方法里面做了什么事情：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">ensureCapacityInternal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">minCapacity&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ensureExplicitCapacity&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">calculateCapacity&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">elementData&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">minCapacity&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">calculateCapacity&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">elementData&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">minCapacity&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 如果是空数组，则返回DEFAULT_CAPACITY（默认是10）与要求的最少容量minCapacity中的最大者&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">elementData&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DEFAULTCAPACITY_EMPTY_ELEMENTDATA&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DEFAULT_CAPACITY&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">minCapacity&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">minCapacity&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">ensureExplicitCapacity&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">minCapacity&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">modCount&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// overflow-conscious code&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">minCapacity&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">elementData&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">length&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">grow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">minCapacity&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">grow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">minCapacity&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// overflow-conscious code&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">oldCapacity&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">elementData&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">length&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 默认扩大原数组长度的1/2倍&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">newCapacity&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">oldCapacity&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">oldCapacity&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 不满足所要求的容量则以要求的容量为准&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">newCapacity&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">minCapacity&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">newCapacity&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">minCapacity&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 如果新容量大于期望的最大容量，确认最终使用的容量（MAX_ARRAY_SIZE or Integer.MAX_VALUE)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">newCapacity&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MAX_ARRAY_SIZE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">newCapacity&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hugeCapacity&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">minCapacity&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// minCapacity is usually close to size, so this is a win:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">elementData&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Arrays&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">copyOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">elementData&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">newCapacity&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">hugeCapacity&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">minCapacity&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">minCapacity&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// overflow&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">OutOfMemoryError&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">minCapacity&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MAX_ARRAY_SIZE&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">MAX_VALUE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">MAX_ARRAY_SIZE&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>&lt;code>calculateCapacity&lt;/code>：计算数组所需要的容量&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>ensureExplicitCapacity&lt;/code>：修改&lt;code>modCount&lt;/code>值，确认是否数组所需要的容量大于现有数组的长度，是则表明需要对数组进行扩容&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>grow&lt;/code>：对数组进行扩容，默认扩大原数组长度的1/2倍，如果扩大后还不满足所要求的容量&lt;code>minCapacity&lt;/code>，则以要求的容量为准，如果新容量&lt;code>newCapacity&lt;/code>大于&lt;code>MAX_ARRAY_SIZE&lt;/code>，则取&lt;code>MAX_ARRAY_SIZE&lt;/code>或&lt;code>Integer.MAX_VALUE&lt;/code>（取决于&lt;code>minCapacity&lt;/code>是否大于&lt;code>MAX_ARRAY_SIZE&lt;/code>）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>PS：&lt;code>MAX_ARRAY_SIZE&lt;/code>值为&lt;code>Integer.MAX_VALUE - 8&lt;/code>，为啥减8可自行查看&lt;code>MAX_ARRAY_SIZE&lt;/code>的Java doc&lt;/p>
&lt;p>从上面代码来看，会修改数组的只有扩容方法里面的这一句：&lt;code>elementData = Arrays.copyOf(elementData, newCapacity)&lt;/code>，这里会将原数组数据复制到扩大长度后的新数组，并将数组引用指向新数组，考虑以下的并发情况：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>线程1拿到的size为0，要插入元素需要进行扩容，还未执行&lt;code>elementData = Arrays.copyOf(elementData, newCapacity);&lt;/code>时让出了CPU给到线程2&lt;/p>
&lt;/li>
&lt;li>
&lt;p>线程2拿到的size也为0（因线程1还未执行到&lt;code>elementData[size++] = e;&lt;/code>），要插入元素需要进行扩容，扩容完成后往下标为0的位置设置了元素并成功返回，此时&lt;code>size&lt;/code>变成了1&lt;/p>
&lt;/li>
&lt;li>
&lt;p>线程1继续执行扩容，拿到的数组可能还是旧的&lt;code>elementDate&lt;/code>（根据JVM的内存模型，每个线程在使用主内存中的变量时，会将变量拷贝到自己的工作内存中，线程1读取&lt;code>elementDate&lt;/code>时可能线程2对&lt;code>elementDate&lt;/code>的修改还未写回主内存，所以拿到的是旧值），线程1扩容后的新数组（数据全部为null）将赋值给&lt;code>elementDate&lt;/code>，之后线程1将执行&lt;code>elementData[size++] = e;&lt;/code>，此时获取到的&lt;code>size&lt;/code>可能为1（由线程1对&lt;code>size&lt;/code>的修改被线程2读到了），即会给下标为1的位置赋值，然后&lt;code>size&lt;/code>变成了2，至此导致下标为0的位置出现了null值&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="解决方法">解决方法&lt;/h2>
&lt;p>如果必须在并发情况下使用List，可按以下方式解决List并发安全问题，可根据实际业务场景选用：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>使用线程安全的&lt;code>java.util.Vector&lt;/code>类（具体是&lt;strong>对每个方法&lt;/strong>加&lt;code>synchronized&lt;/code>保证线程安全，不推荐使用）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用&lt;code>java.util.Collections&lt;/code>类的&lt;code>synchronizedList&lt;/code>方法对List进行包装，让其变成线程安全的类（具体是&lt;strong>对非线程安全的方法&lt;/strong>内部加了&lt;code>synchronized&lt;/code>保证线程安全，推荐使用）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用&lt;code>JUC&lt;/code>的&lt;code>java.util.concurrent.CopyOnWriteArrayList&lt;/code>类（写操作加锁且数组变量用&lt;code>volatile&lt;/code>修饰，读操作无锁，具体是在写内部使用&lt;code>ReentrantLock&lt;/code>加锁，并且采用复制原数组-往新数组添加元素-替换旧数组的形式，保证读操作的线程安全，适合读多写少的场景）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>本次针对ArrayList并发写出现Null值的问题进行探究，最初怀疑是因为&lt;code>size++&lt;/code>不是原子性导致的（而且貌似网上也挺多这样说的-_-），按照思路分析下去后才发现问题不是出现在这里，不过也发现了&lt;code>size++&lt;/code>不是原子性导致的另外一个并发问题（覆盖/丢失值）；后面回过头来分析扩容操作，看到针对实例变量的赋值后，有点想不起一个线程对实例变量修改后，另一线程用到这一实例变量会怎么样了，又去看了下JVM内存模型相关的资料，最后才确认了问题的根源。现在想想一个小问题涉及到的知识点其实蛮多的，做下复盘其实也是一次很好的学习机会。&lt;/p></description><category domain="https://ithorizon.top/categories/%E9%87%87%E5%9D%91%E7%B3%BB%E5%88%97/">采坑系列</category><category domain="https://ithorizon.top/tags/arraylist/">ArrayList</category><category domain="https://ithorizon.top/tags/%E5%B9%B6%E5%8F%91%E9%97%AE%E9%A2%98/">并发问题</category></item><item><title>JMeter压测工具使用入门</title><link>https://ithorizon.top/posts/2022-01-08-jmeter_induction/</link><guid isPermaLink="true">https://ithorizon.top/posts/2022-01-08-jmeter_induction/</guid><pubDate>Sat, 08 Jan 2022 09:57:00 +0000</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;h2 id="安装">安装&lt;/h2>
&lt;h3 id="jmeter安装">JMeter安装&lt;/h3>
&lt;p>JMeter的安装很简单，直接访问 &lt;a href="https://jmeter.apache.org/download_jmeter.cgi">官方下载页面&lt;/a> 下载即可。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/3c/bb/3cbb309951eb3a6450eb8ff22762db20.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="jmeter-plugins-manager安装">JMeter Plugins Manager安装&lt;/h3>
&lt;p>JMeter的插件管理安装不是必须的，不过安装插件管理后可以下载一些有用的插件，建议也安装一下。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/76/b5/76b5d5d31a78b61da10e95c8202496e3.png" alt="Untitled.png">&lt;/p>
&lt;p>启动JMeter后，可以通过&lt;code>Options &lt;/code>→ &lt;code>Plugins Manager &lt;/code>选项打开插件管理界面。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/95/8a/958a3c41feb082d5d46a3bafb3ec3a46.png" alt="Untitled.png">&lt;/p>
&lt;p>插件管理界面可以在&lt;code>Installed Plugins&lt;/code>栏看到已安装的插件，如果将已安装的插件去掉勾选，则表示要卸载插件；在&lt;code>Available Plugins&lt;/code>栏可以看到可用的插件，可以勾选需要安装的插件，然后点击右下方的&lt;code>Apply Changes and Restart JMeter&lt;/code>按钮保存即可。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/55/4f/554fb57f54476d9bf976a156b3dd8c77.png" alt="Untitled.png">&lt;/p>
&lt;h2 id="启动">启动&lt;/h2>
&lt;p>JMeter的启动也很简单，只需要找到安装目录下的 &lt;code>bin/jmeter.bat&lt;/code>（Windows系统）或 &lt;code>bin/jmeter.sh&lt;/code> （Mac或Linux系统）执行即可，这种方式或启动JMeter的GUI界面。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/7f/66/7f66d2f375d9f6d3b2cb8e2208e0ead9.png" alt="Untitled.png">&lt;/p>
&lt;h2 id="使用">使用&lt;/h2>
&lt;p>下面以配置固定吞吐量10/s来测试HTTP接口为例说明如何使用。&lt;/p>
&lt;h3 id="配置线程组">配置线程组&lt;/h3>
&lt;p>首先需要在测试计划上点击右键 &lt;code>Add&lt;/code> → &lt;code>Threads(Users)&lt;/code> → &lt;code>Thread Group&lt;/code> 添加线程组，线程组用来模拟访问测试接口的用户。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/bf/c4/bfc429f9ab2cd97800e6909ff2e226e8.png" alt="Untitled.png">&lt;/p>
&lt;p>线程组涉及了如下的一些配置：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Action to be taken after a Sampler error&lt;/strong>：由于采样器失败或断言失败而导致执行遇到错误时该如何处理&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Continue&lt;/strong>：忽略错误，继续执行&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Start Next Thread Loop&lt;/strong>：忽略错误，终止当前线程的循环，执行下一个循环&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Stop Thread&lt;/strong>：终止当前执行的线程，不影响其他线程的执行&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Stop Test&lt;/strong>：在当前正在执行的线程执行完后停止测试&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Stop Test Now&lt;/strong>：立即终止当前正在执行的线程后停止测试&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Number of Threads(users)&lt;/strong>：定义执行时想模拟的线程（用户）数量&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Ramp-up period(seconds)&lt;/strong>：全部线程启动执行的时间，比如线程数量设置为10，启动执行时间设置为100秒，那么第一个线程将在第0秒（测试执行开始时）启动执行，然后每个线程将在10秒(100/10)后启动执行&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Loop Count&lt;/strong>：每个线程的执行次数，可以设置为不限次数（Infinite）或固定次数，比如循环数设置为2，线程数为100，那么总的将运行200次&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Same user on each iteration&lt;/strong>：在每次循环中使用相同的用户，当有设置HTTP Cookie Manager时，开始这个选项后会将在第一个响应中获得的cookie用于后续的请求&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Delay Thread creation until needed&lt;/strong>：延迟创建线程所需的资源，比如设置要启动1000个线程，即使设置了Ramp-up，JMeter也会立即为所有线程分配内存；启用该选项则可以在新线程开始执行时分配内存&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Specify Thread lifetime&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Duration(seconds)&lt;/strong>：设置线程组运行多长时间，跟线程数和每个线程运行次数配合使用，即使线程数和线程运行次数还未跑完，持续时间到了，线程组直接停止&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Startup delay(seconds)&lt;/strong>：设置线程启动延时时间，是指多少秒后才开始启动线程，不是说每个线程都延迟多少秒启动&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="配置http采样器">配置HTTP采样器&lt;/h3>
&lt;p>在线程组上点击右键 &lt;code>Add&lt;/code> → &lt;code>Sampler&lt;/code>→&lt;code>Http Request&lt;/code>添加HTTP采样器，一般测试GET方法或简单的POST方法基本上用这个采样器就足够了，但有时候我们需要设置一些请求头信息，可以看到在HTTP采样器这个里面是没有办法配置的，这时候就需要用到配置元素HTTP Header Manager。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/ef/13/ef134dfe1ecb0066051e7f3dcacd397d.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="配置http头管理器">配置HTTP头管理器&lt;/h3>
&lt;p>在线程组上点击右键 &lt;code>Add&lt;/code> → &lt;code>Sampler&lt;/code>→&lt;code>HTTP Header Manager&lt;/code>添加HTTP请求头管理器，点击下方的&lt;code>Add&lt;/code>可以添加请求头配置项，如下添加了Content-Type: application/json。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/59/2a/592abf2088ec2daf860448056dd04d37.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="配置固定吞吐量计时器">配置固定吞吐量计时器&lt;/h3>
&lt;p>在线程组上点击右键 &lt;code>Add&lt;/code> → &lt;code>Timer&lt;/code>→&lt;code>Constant Throughput Timer&lt;/code>添加固定吞吐量计时器，该计时器可以控制请求执行的吞吐量，下面设置了线程组内的所有线程执行吞吐量控制在600/min（10/s）左右（可能会有误差），当然这个的前提是要线程组的执行次数能满足要求。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/e9/80/e9806446d2fc7e009f31442093bd649d.png" alt="Untitled.png">&lt;/p>
&lt;h3 id="配置聚合报告">配置聚合报告&lt;/h3>
&lt;p>在线程组上点击右键 &lt;code>Add&lt;/code> → &lt;code>Listener&lt;/code>→&lt;code>Aggregate Report&lt;/code>添加聚合报告，聚合报告可以查看样本执行的耗时、吞吐量和接发数据量情况，如下是控制吞吐量在10/s左右执行1000次的聚合结果。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/5d/64/5d644d5c75d2b8eed45777c311155732.png" alt="Untitled.png">&lt;/p>
&lt;p>聚合报告中每一行（除了最后一行）为每个HTTP采样器的执行情况，最后一行为统计所有采样器的执行情况，每一列表示的意思如下说明：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Label&lt;/strong>：HTTP采样器设置的名称&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>#Samples&lt;/strong>：总请求样本数&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Average&lt;/strong>：平均耗时，单位ms&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Median&lt;/strong>：中位数耗时，单位ms&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>90%Line&lt;/strong>：90分位线耗时，单位ms&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>95%Line&lt;/strong>：95分位线耗时，单位ms&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>99%Line&lt;/strong>：99分位线耗时，单位ms&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Min&lt;/strong>：最小耗时，单位ms&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Maximum&lt;/strong>：最大耗时，单位ms&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Error%&lt;/strong>：错误百分比&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Throughput&lt;/strong>：每秒处理的请求数（n/sec）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Received KB/sec&lt;/strong>：每秒接收的数据量（KB/sec）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Sent KB/sec&lt;/strong>：每秒发送的数据量（KB/sec）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="linux下执行jmeter">Linux下执行JMeter&lt;/h2>
&lt;p>在本地配置好要执行的测试计划后保存成脚本xxx.jmx（自由命名），然后将文件上传到Linux服务器上，然后输入以下命令执行（以下~/jmeter/apache-jmeter-5.4.1为服务器上JMeter的安装目录）。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">~/jmeter/apache-jmeter-5.4.1/bin/jmeter -n -t ~/jmeter/xxx.jmx -l ~/jmeter/xxx.jtl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>JMeter启动常用参数说明：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plain" data-lang="plain">&lt;span class="line">&lt;span class="cl">-h 帮助：打印出有用的信息并退出
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-n 非 GUI 模式：在非 GUI 模式下运行 JMeter
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-t 测试文件：要运行的 JMeter 测试脚本文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-l 输出文件：记录结果的文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-r 远程执行：启动远程服务
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-H 代理主机：设置 JMeter 使用的代理主机
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-P 代理端口：设置 JMeter 使用的代理主机的端口号
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>测试计划执行完成后会输出xxx.jtl文件，将其下载到本地，然后启动JMeter，添加所需的监听器并打开浏览即可。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/linyanbin666/pic/master/notionimg/4f/56/4f567190df427695d491d21cd16007ce.png" alt="Untitled.png">&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>本文首先介绍了如何安装JMeter，安装步骤很简单，直接上官网下载安装包安装即可；接着通过一个简单的HTTP请求接口测试例子介绍了如何使用JMeter，并在其中对一些关键的配置进行说明；最后介绍了如何在Linux上运行JMeter，通过非GUI模式启动脚本运行并输出执行结果文件，再通过GUI界面打开文件浏览即可。&lt;/p>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>&lt;a href="http://www.testingjournals.com/5-must-know-features-thread-group-jmeter/">5 must know features of Thread Group in Jmeter&lt;/a>&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;a href="https://www.redline13.com/blog/2018/05/guide-jmeter-thread-groups/">Guide to JMeter Thread Groups&lt;/a>&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;a href="https://www.blazemeter.com/blog/introducing-jmeter-5.2">Introducing JMeter 5.2!&lt;/a>&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;a href="https://www.blazemeter.com/blog/how-to-use-the-delay-thread-creation-on-jmeter">How to Use the Delay Thread Creation on JMeter&lt;/a>&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;a href="http://www.testingjournals.com/understand-aggregate-report-jmeter/">Understand and Analyze Aggregate Report in Jmeter&lt;/a>&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;a href="https://www.cnblogs.com/imyalost/p/9808079.html">linux环境运行jmeter并生成报告&lt;/a>&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ol></description><category domain="https://ithorizon.top/categories/%E5%B7%A5%E5%85%B7/">工具</category><category domain="https://ithorizon.top/tags/%E5%B7%A5%E5%85%B7/">工具</category><category domain="https://ithorizon.top/tags/%E5%8E%8B%E6%B5%8B/">压测</category><category domain="https://ithorizon.top/tags/jmeter/">JMeter</category></item><item><title>Spring Data JPA多数据源配置</title><link>https://ithorizon.top/posts/2021-10-28-jpa_multi_data_source/</link><guid isPermaLink="true">https://ithorizon.top/posts/2021-10-28-jpa_multi_data_source/</guid><pubDate>Thu, 28 Oct 2021 13:39:51 +0800</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;blockquote>
&lt;p>每日一言：知识是勤奋的影子，汗珠是勤奋的镜子&lt;/p>
&lt;/blockquote>
&lt;h3 id="配置多数据源">配置多数据源&lt;/h3>
&lt;h4 id="maven依赖">maven依赖&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">parent&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">groupId&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">springframework&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">boot&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">groupId&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">artifactId&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">spring&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">boot&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">starter&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">parent&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">artifactId&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">version&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">RELEASE&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">version&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">relativePath&lt;/span>&lt;span class="o">/&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;!--&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lookup&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">parent&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">repository&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">--&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">parent&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">dependencies&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">dependency&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">groupId&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">springframework&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">boot&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">groupId&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">artifactId&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">spring&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">boot&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">starter&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">jpa&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">artifactId&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">dependency&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">dependencies&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="applicationyml文件">application.yml文件&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nl">spring&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">datasource&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">primary&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">primaryDataSource&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">driver&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="kd">class&lt;/span>&lt;span class="err">-&lt;/span>&lt;span class="nc">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">h2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">Driver&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">jdbc&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">h2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">mem&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">test1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">MODE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">MySQL&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">jpa&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">sql&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">generate&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">ddl&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">properties&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">hibernate&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">dialect&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">hibernate&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">dialect&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">H2Dialect&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">hibernate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ddl&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">auto&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">secondary&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">secondaryDataSource&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">driver&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="kd">class&lt;/span>&lt;span class="err">-&lt;/span>&lt;span class="nc">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">h2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">Driver&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">jdbc&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">h2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">mem&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">test2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">MODE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">MySQL&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">jpa&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">sql&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">generate&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">ddl&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">properties&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">hibernate&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">dialect&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">hibernate&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">dialect&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">H2Dialect&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">hibernate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ddl&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">auto&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="java-config">Java Config&lt;/h4>
&lt;p>第一个数据源配置类&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Configuration&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nd">@EnableJpaRepositories&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">entityManagerFactoryRef&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;primaryEntityManager&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">transactionManagerRef&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;primaryTransactionManager&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">basePackageClasses&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">horizon&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">article&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">demo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">jpa&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">primary&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">repo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">Package&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">})&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">PrimaryDsConfiguration&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;primaryDataSourceProperties&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@ConfigurationProperties&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">prefix&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;spring.datasource.primary&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DataSourceProperties&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">primaryDataSourceProperties&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DataSourceProperties&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;primaryDataSource&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DataSource&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">primaryDataSource&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">primaryDataSourceProperties&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">initializeDataSourceBuilder&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;primaryJpaProperties&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@ConfigurationProperties&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">prefix&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;spring.datasource.primary.jpa&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JpaProperties&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">primaryJpaProperties&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JpaProperties&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;primaryHibernateProperties&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@ConfigurationProperties&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">prefix&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;spring.datasource.primary.jpa.hibernate&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HibernateProperties&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">primaryHibernateProperties&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HibernateProperties&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;primaryEntityManager&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">LocalContainerEntityManagerFactoryBean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">primaryEntityManager&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">LocalContainerEntityManagerFactoryBean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">LocalContainerEntityManagerFactoryBean&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setPackagesToScan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">horizon&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">article&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">demo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">jpa&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">primary&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">bean&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">Package&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getPackage&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setDataSource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">primaryDataSource&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setJpaVendorAdapter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">primaryVendorAdapter&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">properties&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">primaryHibernateProperties&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">determineHibernateProperties&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">primaryJpaProperties&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getProperties&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HibernateSettings&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setJpaPropertyMap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">properties&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setPersistenceUnitName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;primary&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;primaryVendorAdapter&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HibernateJpaVendorAdapter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">primaryVendorAdapter&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HibernateJpaVendorAdapter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">adapter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HibernateJpaVendorAdapter&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">adapter&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setGenerateDdl&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">adapter&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;primaryTransactionManager&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PlatformTransactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">primaryTransactionManager&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JpaTransactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">transactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JpaTransactionManager&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">transactionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setEntityManagerFactory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">primaryEntityManager&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getObject&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">transactionManager&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Qualifier&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;primaryJdbcTemplate&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JdbcTemplate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">primaryJdbcTemplate&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JdbcTemplate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">primaryDataSource&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>以同样的方式配置第二个数据源&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Configuration&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nd">@EnableJpaRepositories&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">entityManagerFactoryRef&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;secondaryEntityManager&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">transactionManagerRef&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;secondaryTransactionManager&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">basePackageClasses&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">horizon&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">article&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">demo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">jpa&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">secondary&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">repo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">Package&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">})&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">SecondaryDsConfiguration&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;secondaryDataSourceProperties&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@ConfigurationProperties&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">prefix&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;spring.datasource.secondary&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DataSourceProperties&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">secondaryDataSourceProperties&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DataSourceProperties&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;secondaryDataSource&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DataSource&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">secondaryDataSource&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">secondaryDataSourceProperties&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">initializeDataSourceBuilder&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;secondaryJpaProperties&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@ConfigurationProperties&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">prefix&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;spring.datasource.secondary.jpa&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JpaProperties&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">secondaryJpaProperties&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JpaProperties&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;secondaryHibernateProperties&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@ConfigurationProperties&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">prefix&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;spring.datasource.secondary.jpa.hibernate&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HibernateProperties&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">secondaryHibernateProperties&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HibernateProperties&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;secondaryEntityManager&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">LocalContainerEntityManagerFactoryBean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">secondaryEntityManager&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">LocalContainerEntityManagerFactoryBean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">LocalContainerEntityManagerFactoryBean&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setPackagesToScan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">horizon&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">article&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">demo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">jpa&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">secondary&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">bean&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">Package&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getPackage&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setDataSource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">secondaryDataSource&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setJpaVendorAdapter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">secondaryVendorAdapter&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">properties&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">secondaryHibernateProperties&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">determineHibernateProperties&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">secondaryJpaProperties&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getProperties&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HibernateSettings&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setJpaPropertyMap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">properties&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setPersistenceUnitName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;secondary&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;secondaryVendorAdapter&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HibernateJpaVendorAdapter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">secondaryVendorAdapter&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HibernateJpaVendorAdapter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">adapter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HibernateJpaVendorAdapter&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">adapter&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setGenerateDdl&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">adapter&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;secondaryTransactionManager&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PlatformTransactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">secondaryTransactionManager&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JpaTransactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">transactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JpaTransactionManager&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">transactionManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setEntityManagerFactory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">secondaryEntityManager&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getObject&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">transactionManager&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Qualifier&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;secondaryJdbcTemplate&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JdbcTemplate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">secondaryJdbcTemplate&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JdbcTemplate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">secondaryDataSource&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>排除SpringBoot本身的数据源自动配置及JPA自动配置&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@SpringBootApplication&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">exclude&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">DataSourceAutoConfiguration&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">DataSourceTransactionManagerAutoConfiguration&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">JdbcTemplateAutoConfiguration&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">HibernateJpaAutoConfiguration&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">})&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Application&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SpringApplication&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Application&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;a href="https://github.com/linyanbin666/article-demo-code/tree/master/src/main/java/com/horizon/article/demo/jpa">完整示例代码地址&lt;/a>&lt;/p>
&lt;h3 id="配置动态切换数据源">配置动态切换数据源&lt;/h3>
&lt;h4 id="使用枚举或字符串定义不同数据源的唯一标识">使用枚举（或字符串）定义不同数据源的唯一标识&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">enum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DatabaseEnvironment&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">DEVELOPMENT&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TESTING&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PRODUCTION&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="使用threadlocal存放当前线程持有的环境">使用ThreadLocal存放当前线程持有的环境&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">DatabaseContextHolder&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ThreadLocal&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">DatabaseEnvironment&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CONTEXT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ThreadLocal&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DatabaseEnvironment&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">databaseEnvironment&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CONTEXT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">databaseEnvironment&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DatabaseEnvironment&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getEnvironment&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CONTEXT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">clear&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">CONTEXT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">remove&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="继承abstractroutingdatasource类创建自定义路由数据源">继承AbstractRoutingDataSource类，创建自定义路由数据源&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">DataSourceRouter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">extends&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AbstractRoutingDataSource&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">protected&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">determineCurrentLookupKey&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DatabaseContextHolder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getEnvironment&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="java-config配置路由数据源">Java Config配置路由数据源&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Configuration&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nd">@EnableJpaRepositories&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">basePackageClasses&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CustomerRepository&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">entityManagerFactoryRef&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;customerEntityManager&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">transactionManagerRef&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;customerTransactionManager&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">DataSourceConfiguration&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Autowired&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">required&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PersistenceUnitManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">persistenceUnitManager&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@ConfigurationProperties&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;app.customer.jpa&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JpaProperties&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">customerJpaProperties&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JpaProperties&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@ConfigurationProperties&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;app.customer.jpa.hibernate&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HibernateProperties&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">customerHibernateProperties&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HibernateProperties&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@ConfigurationProperties&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;app.customer.development.datasource&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DataSourceProperties&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">developmentDataSourceProperties&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DataSourceProperties&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DataSource&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">developmentDataSource&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">developmentDataSourceProperties&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">initializeDataSourceBuilder&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@ConfigurationProperties&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;app.customer.testing.datasource&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DataSourceProperties&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testingDataSourceProperties&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DataSourceProperties&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DataSource&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testingDataSource&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">testingDataSourceProperties&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">initializeDataSourceBuilder&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@ConfigurationProperties&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;app.customer.production.datasource&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DataSourceProperties&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">productionDataSourceProperties&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DataSourceProperties&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DataSource&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">productionDataSource&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">testingDataSourceProperties&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">initializeDataSourceBuilder&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Adds all available datasources to datasource map.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @return datasource of current context
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Primary&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DataSource&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">customerDataSource&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">DataSourceRouter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DataSourceRouter&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HashMap&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HashMap&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DatabaseEnvironment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">DEVELOPMENT&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">developmentDataSource&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DatabaseEnvironment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">TESTING&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">testingDataSource&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DatabaseEnvironment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">PRODUCTION&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">productionDataSource&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setTargetDataSources&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">LocalContainerEntityManagerFactoryBean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">customerEntityManager&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Qualifier&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;customerJpaProperties&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JpaProperties&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">customerJpaProperties&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">EntityManagerFactoryBuilder&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">createEntityManagerFactoryBuilder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">customerJpaProperties&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">dataSource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">customerDataSource&lt;/span>&lt;span class="p">()).&lt;/span>&lt;span class="na">packages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Customer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">properties&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">customerHibernateProperties&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">determineHibernateProperties&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">customerJpaProperties&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getProperties&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HibernateSettings&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="na">persistenceUnit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;customerEntityManager&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Bean&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Primary&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JpaTransactionManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">customerTransactionManager&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Qualifier&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;customerEntityManager&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">EntityManagerFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">factory&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JpaTransactionManager&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">factory&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">EntityManagerFactoryBuilder&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">createEntityManagerFactoryBuilder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JpaProperties&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">customerJpaProperties&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">JpaVendorAdapter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">jpaVendorAdapter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">createJpaVendorAdapter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">customerJpaProperties&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">EntityManagerFactoryBuilder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">jpaVendorAdapter&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">customerJpaProperties&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getProperties&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">persistenceUnitManager&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JpaVendorAdapter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">createJpaVendorAdapter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">JpaProperties&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">jpaProperties&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">AbstractJpaVendorAdapter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">adapter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HibernateJpaVendorAdapter&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">adapter&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setShowSql&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">jpaProperties&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isShowSql&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">adapter&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setGenerateDdl&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">jpaProperties&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isGenerateDdl&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">adapter&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="定义aop拦截切换不同数据源">定义AOP拦截切换不同数据源&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Aspect&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nd">@Component&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">DataSourceDetermineAspect&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Before&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;@annotation(applyDataSource)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">before&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ApplyDataSource&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">applyDataSource&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">DatabaseContextHolder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">applyDataSource&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">value&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@After&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;@annotation(applyDataSource)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">after&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ApplyDataSource&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">applyDataSource&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">DatabaseContextHolder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">clear&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description><category domain="https://ithorizon.top/categories/spring/">Spring</category><category domain="https://ithorizon.top/tags/jpa/">JPA</category><category domain="https://ithorizon.top/tags/%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90/">多数据源</category></item><item><title>Promise学习笔记（B站）</title><link>https://ithorizon.top/posts/2021-04-18-atguigu_promise_note/</link><guid isPermaLink="true">https://ithorizon.top/posts/2021-04-18-atguigu_promise_note/</guid><pubDate>Sun, 18 Apr 2021 16:27:31 +0800</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;h3 id="promise是什么">Promise是什么？&lt;/h3>
&lt;h4 id="理解">理解&lt;/h4>
&lt;ol>
&lt;li>Promise是ES6引入的一种异步编程的解决方案&lt;/li>
&lt;li>具体表达&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>从语法上来说，Promise是一个构造函数&lt;/li>
&lt;li>从功能上来说，promise对象用来封装一个异步操作并可以获取其返回结果&lt;/li>
&lt;/ul>
&lt;h4 id="promise的状态改变">promise的状态改变&lt;/h4>
&lt;ul>
&lt;li>pending 变为 resolved（fulfilled）&lt;/li>
&lt;li>pending 变为 rejected
PS：一个promise对象只能改变一次，无论变为成功或失败，都会有一个结果数据，成功的结果一般称为 value，失败的结果一般称为 reason&lt;/li>
&lt;/ul>
&lt;h4 id="promise的基本运行流程">promise的基本运行流程&lt;/h4>
&lt;p>&lt;img src="https://ithorizon.top/images/atguigu_promise_note-promise_run_process.png" alt="Promise运行流程">&lt;/p>
&lt;h4 id="promise的基本使用">promise的基本使用&lt;/h4>
&lt;pre tabindex="0">&lt;code>const p = new Promise((resolve, reject) =&amp;gt; {
setTimeout(() =&amp;gt; {
const time = Date.now();
if (time % 2 === 0) {
resolve(&amp;#39;成功的数据，time=&amp;#39; + time)
} else {
reject(&amp;#39;失败的数据，time=&amp;#39; + time)
}
}, 1000)
})
p.then(value =&amp;gt; {
console.log(&amp;#39;成功的回调&amp;#39;, value)
}, reason =&amp;gt; {
console.log(&amp;#39;失败的回调&amp;#39;, value)
})
&lt;/code>&lt;/pre>&lt;h3 id="为什么要用promise">为什么要用Promise&lt;/h3>
&lt;h4 id="指定回调函数的方式更加灵活">指定回调函数的方式更加灵活&lt;/h4>
&lt;ul>
&lt;li>旧的：必须在启动异步任务前指定&lt;/li>
&lt;li>promise：启动异步任务 =&amp;gt; 返回promise对象 =&amp;gt; 给promise对象绑定回调函数（甚至可以在异步任务执行结束后再指定）&lt;/li>
&lt;/ul>
&lt;h4 id="支持链式调用解决回调地狱问题">支持链式调用，解决回调地狱问题&lt;/h4>
&lt;ul>
&lt;li>什么是回调地狱？
回调函数嵌套调用，外部回调函数异步执行的结果是嵌套的回调函数执行的条件&lt;/li>
&lt;li>回调地狱的缺点？
不便于阅读/不便于异常处理&lt;/li>
&lt;li>解决方案：promise链式调用&lt;/li>
&lt;li>终极解决方案：async/await&lt;/li>
&lt;/ul>
&lt;h3 id="如何使用promise">如何使用Promise？&lt;/h3>
&lt;h4 id="api">API&lt;/h4>
&lt;ul>
&lt;li>Promise构造函数：Promise(executor)
&lt;ul>
&lt;li>executor函数：执行器 (resolve, reject) =&amp;gt; {}&lt;/li>
&lt;li>resolve函数：成功时调用的函数 resolve =&amp;gt; {}&lt;/li>
&lt;li>reject函数：失败时调用的函数 reject =&amp;gt; {}&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Promise.prototype.then&lt;/li>
&lt;li>Promise.prototype.catch&lt;/li>
&lt;li>Promise.prototype.finally&lt;/li>
&lt;li>Promise.resolve&lt;/li>
&lt;li>Promise.reject&lt;/li>
&lt;li>Promise.race&lt;/li>
&lt;li>Promise.all&lt;/li>
&lt;li>&amp;hellip;.&lt;/li>
&lt;/ul>
&lt;h4 id="promise的几个关键问题">promise的几个关键问题&lt;/h4>
&lt;ol>
&lt;li>如何改变promise的状态？&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>resolve(vale)：如果当前是 pending 就会变为 resolved&lt;/li>
&lt;li>reject(reason)：如果当前是 pending 就会变为 rejected&lt;/li>
&lt;li>抛出异常：如果当前是 pending 就会变为 rejected&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>
&lt;p>一个 promise 指定多个成功/失败回调函数，都会调用吗？
单 promise 改变为对应状态时都会调用&lt;/p>
&lt;/li>
&lt;li>
&lt;p>改变 promise 状态和指定回调函数谁先谁后？&lt;/p>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>都有可能，正常情况下是先指定回调再改变状态，但也可以先改状态再指定回调&lt;/li>
&lt;li>如何先改状态再指定回调？
&lt;ul>
&lt;li>在执行器中直接调用resolve()/reject()&lt;/li>
&lt;li>延迟更长时间才调用then()&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;ol start="4">
&lt;li>promise.then() 返回的新 promise 的结果状态由什么决定？&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>简单表达：由 then() 指定的回调函数执行的结果决定&lt;/li>
&lt;li>详细表达：
&lt;ul>
&lt;li>如果抛出异常，新 promise 变为 rejected，reason 为抛出的异常&lt;/li>
&lt;li>如果返回的是非 promise 对象，新 promise 变为 resolved，value 为返回的值&lt;/li>
&lt;li>如果返回的是一个 promise 对象，此 promise 对象的结果会成为新 promise 的结果&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;ol start="5">
&lt;li>
&lt;p>promise 如何串连多个操作任务？
promise 的 then() 返回一个新的 promise，通过 then() 的链式调用串连多个同步/异步任务&lt;/p>
&lt;/li>
&lt;li>
&lt;p>promise 异常传透&lt;/p>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>理解：当使用 promise 的 then 链式调用时，可以在最后指定失败的回调，前面任何操作出了异常，都会传到最后失败的回调中处理&lt;/li>
&lt;li>原理：then 方法未指定 onRejected 回调函数时，其默认值会是：reason =&amp;gt; Promise.reject(reason)，将异常传递下去&lt;/li>
&lt;/ul>
&lt;ol start="7">
&lt;li>中断 promise 链&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>理解：当使用 promise 的 then 链式调用时，在中间中断，不在调用后面的回调函数&lt;/li>
&lt;li>办法：在回调函数中返回一个 pending 状态的 promise 对象（如：new Promise(() =&amp;gt; {})）&lt;/li>
&lt;/ul>
&lt;h3 id="async与await">async与await&lt;/h3>
&lt;ul>
&lt;li>async 函数
&lt;ul>
&lt;li>函数的返回值是 promise 对象&lt;/li>
&lt;li>promise 对象的结果由 async 函数执行的返回值决定&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>await 表达式
&lt;ul>
&lt;li>await 右侧表达式一般为 promise 对象，但也可以是其他值&lt;/li>
&lt;li>如果表达式是 promise 对象，await 返回的是 promise 成功的值&lt;/li>
&lt;li>如果表达式是其他值，直接将此值作为 await 的返回值&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>注意点
&lt;ul>
&lt;li>await 必须写在 async 函数中，但 async 函数可以没有 await&lt;/li>
&lt;li>如果 await 的 promise 失败了，会抛出异常，需要通过try&amp;hellip;catch捕获处理&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="js异步之宏队列与微队列">JS异步之宏队列与微队列&lt;/h3>
&lt;h4 id="原理图">原理图&lt;/h4>
&lt;blockquote>
&lt;p>图片来源：https://www.cnblogs.com/BAHG/p/12921321.html
&lt;img src="https://ithorizon.top/images/atguigu_promise_note-macro_queue_and_micro_queue.png" alt="JS异步之宏队列与微队列">&lt;/p>
&lt;/blockquote>
&lt;h4 id="说明">说明&lt;/h4>
&lt;ol>
&lt;li>JS中用来存储执行回调函数的队列包含2个，分别为宏队列和微队列&lt;/li>
&lt;li>宏队列：用来保存待执行的宏任务（回调），比如：定时器回调/DOM事件回调/Ajax回调&lt;/li>
&lt;li>微队列：用来保存待执行的微任务（回调），比如：promise的回调、MutationObserver的回调&lt;/li>
&lt;li>JS执行时会区分这两个队列&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>JS引擎首先必须先执行所有的初始化同步任务代码&lt;/li>
&lt;li>每次准备取出第一个宏任务执行前，都要将所有的微任务取出执行，即微队列的优先级比宏任务高，且与微任务所处的代码位置无关&lt;/li>
&lt;/ul></description><category domain="https://ithorizon.top/categories/%E5%89%8D%E7%AB%AF/">前端</category><category domain="https://ithorizon.top/tags/promise/">Promise</category></item><item><title>ES6-11新特性学习笔记（B站）</title><link>https://ithorizon.top/posts/2021-04-18-atguigu_es_feature_note/</link><guid isPermaLink="true">https://ithorizon.top/posts/2021-04-18-atguigu_es_feature_note/</guid><pubDate>Sun, 18 Apr 2021 16:09:33 +0800</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;blockquote>
&lt;p>此文为学习 &lt;a href="https://www.bilibili.com/video/BV1uK411H7on">尚硅谷Web前端ES6教程，涵盖ES6-ES11&lt;/a> 记录的笔记&lt;/p>
&lt;/blockquote>
&lt;h3 id="es6">ES6&lt;/h3>
&lt;h4 id="let变量声明">let变量声明&lt;/h4>
&lt;ul>
&lt;li>变量不能重复声明&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>let i = 1;
let i = 2; // error
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>块级作用域&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>{
let i = 1;
}
console.log(i); // error
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>不存在变量提升&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>console.log(i); // error
let i = 1;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>不影响作用域链&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>{
let i = 1;
function fn() {
console.log(i); // 1
}
fn();
}
&lt;/code>&lt;/pre>&lt;h4 id="const声明常量">const声明常量&lt;/h4>
&lt;ul>
&lt;li>常量声明时需要赋初始值，一般常量名使用大写&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>const ERROR; // error
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>常量值不能修改&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>const ERROR = &amp;#34;error&amp;#34;;
ERROR = &amp;#34;&amp;#34;; // error
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>块级作用域（同let）&lt;/li>
&lt;li>对于数组和对象值的修改，不算对常量的修改&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>const ARR = [&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;];
ARR[0] = &amp;#34;c&amp;#34;;
ARR.push(&amp;#34;d&amp;#34;);
const OBJ = {
name: &amp;#34;a&amp;#34;
}
OBJ[name] = &amp;#34;b&amp;#34;;
OBJ.age = 10;
&lt;/code>&lt;/pre>&lt;h4 id="变量的解构赋值">变量的解构赋值&lt;/h4>
&lt;ul>
&lt;li>数组解构&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>let arr = [&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;];
const [a, b] = arr;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>对象解构&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>let obj = {
name: &amp;#39;horizon&amp;#39;,
age: 23
};
const {name, age} = obj;
&lt;/code>&lt;/pre>&lt;h4 id="模板字符串">模板字符串&lt;/h4>
&lt;pre tabindex="0">&lt;code>// 使用 `` 定义模板字符串
const key = &amp;#34;key&amp;#34;
const str = `${key}-value`
&lt;/code>&lt;/pre>&lt;h4 id="对象的简化写法">对象的简化写法&lt;/h4>
&lt;pre tabindex="0">&lt;code>const name = &amp;#34;horizon&amp;#34;;
const age = 23;
const user = {
name,
age
eat() {
console.log(&amp;#39;eat&amp;#39;);
}
};
&lt;/code>&lt;/pre>&lt;h4 id="箭头函数">箭头函数&lt;/h4>
&lt;ul>
&lt;li>this是静态的。this 始终指向函数声明时所在作用域下的 this 的值&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>function getName() {
console.log(this.name);
}
const getName2 = () =&amp;gt; {
console.log(this.name);
}
window.name = &amp;#39;horizon&amp;#39;;
getName(); // horizon
getName2(); // horizon
const user = {
name: &amp;#39;jeson&amp;#39;
}
getName.call(user); // jeson
getName2.call(user); // horizon
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>不能作为构造实例化对象&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>const Persion = (name) =&amp;gt; {
this.name = name;
}
const me = new Persion(&amp;#39;horizon&amp;#39;); // error
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>不能使用 arguments 变量&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>const fn = () =&amp;gt; {
console.log(arguments); // error
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>箭头函数的简写&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>// 1. 当形参有且只有一个时，可以省略小括号
const fn = n =&amp;gt; {
return n + n;
}
// 2. 当代码体只有一条语句时，可以省略花括号，且如果该语句是返回值的语句，必须省略 return
const pw = n =&amp;gt; n * n;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>箭头函数的使用场景&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;ul>
&lt;li>适合与 this 无关的回调，如定时器、数组的方法回调&lt;/li>
&lt;li>不适合与 this 有关的回调，如事件回调，对象的方法&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h4 id="函数参数的初始值一般位置要靠后">函数参数的初始值，一般位置要靠后&lt;/h4>
&lt;ul>
&lt;li>形参初始值，&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>function incr(a, b = 1) {
return a + b;
}
console.log(incr(10)); // 11
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>与解构赋值结合&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>function getName({name = &amp;#39;horizon&amp;#39;}) {
console.log(name);
}
getName(); // horizon
getName({name: &amp;#39;jeson&amp;#39;}); // jeson
&lt;/code>&lt;/pre>&lt;h4 id="rest参数">rest参数&lt;/h4>
&lt;p>rest参数用于获取函数的实参，用来代替 arguments&lt;/p>
&lt;pre tabindex="0">&lt;code>// arguments是对象
function output() {
console.log(arguments);
}
// args是数组，必须放在参数的最后一个位置
const output2 = (...args) {
console.log(args);
}
&lt;/code>&lt;/pre>&lt;h4 id="扩展运算符">扩展运算符&lt;/h4>
&lt;p>[&amp;hellip;] 扩展运算符能够将【数组】转换为逗号分隔的【参数序列】&lt;/p>
&lt;pre tabindex="0">&lt;code>function output(a, b) {
return a + b;
}
const arr = [1, 2];
console.log(output(...arr)); // 3
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>扩展运算符的应用
&lt;ul>
&lt;li>数组的合并&lt;/li>
&lt;li>数组的克隆&lt;/li>
&lt;li>将伪数组转为真正的数组&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="symbol">Symbol&lt;/h4>
&lt;p>新的原始数据类型，表示独一无二的值，Symbol的特点：&lt;/p>
&lt;ul>
&lt;li>Symbol的值是唯一的，用来解决命名冲突的问题&lt;/li>
&lt;li>Symbol值不能与其他数据进行运算&lt;/li>
&lt;li>Symbol定义的对象不能使用 for&amp;hellip;in 循环符，但是可以使用 Reflect.ownKeys 来获取对象的所有键名&lt;/li>
&lt;/ul>
&lt;h4 id="迭代器">迭代器&lt;/h4>
&lt;p>迭代器是一种接口，为各种不同的数据结构提供统一的访问机制，任何数据结构只要部署了 Iterator 接口（对象里的一个属性：Symbol.iterator），就可以完成遍历操作&lt;/p>
&lt;ul>
&lt;li>ES6创造了一种新的遍历命令 for&amp;hellip;of 循环，Iterator 接口主要供 for&amp;hellip;of 消费&lt;/li>
&lt;li>原生具备 Iterator 接口的数据（可用 for&amp;hellip;of 循环）
&lt;ul>
&lt;li>Array&lt;/li>
&lt;li>Arguments&lt;/li>
&lt;li>Set&lt;/li>
&lt;li>Map&lt;/li>
&lt;li>String&lt;/li>
&lt;li>TypeArray&lt;/li>
&lt;li>NodeList&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>工作原理
&lt;ul>
&lt;li>创建一个指针对象，指向当前数据结构的起始位置&lt;/li>
&lt;li>第一次调用对象的 next 方法，指针自动指向数据的第一个成员&lt;/li>
&lt;li>接下来不断调用 next 方法，指针一直往后移动，直到指向最后一个&lt;/li>
&lt;li>每调用 next 方法返回一个包含 value 和 done 属性的对象&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>const user = {
name: &amp;#39;horizon&amp;#39;,
skill: [&amp;#39;java&amp;#39;, &amp;#39;js&amp;#39;, &amp;#39;ts&amp;#39;],
[Symbol.iterator]() {
let i = 0;
return {
next: () =&amp;gt; {
if (i &amp;lt; this.skill.length) {
const result = {
value: this.skill[i],
done: false
}
i++;
return result;
} else {
return {
value: undefined,
done: true
}
}
}
}
}
}
for (const each of user) {
console.log(each);
}
&lt;/code>&lt;/pre>&lt;h4 id="生成器函数">生成器函数&lt;/h4>
&lt;p>生成器函数是ES6提供的一种异步编程解决方案，语法行为与传统函数完成不同&lt;/p>
&lt;ul>
&lt;li>使用&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>// 加&amp;#34;*&amp;#34;表明是生成器函数
function * gen() {
console.log(&amp;#39;1&amp;#39;); // code1
yield &amp;#39;1&amp;#39;;
console.log(&amp;#39;2&amp;#39;); // code2
yield &amp;#39;2&amp;#39;;
}
let iterator = gen(); // 调用生成器函数返回的是一个迭代器对象
iterator.next(); // 执行code1
iterator.next(); // 执行code2
// 输出 yield 返回的结果
for (const v of iterator) {
console.log(v);
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>实例
模拟获取：用户数据 -&amp;gt; 订单数据 -&amp;gt; 商品数据&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>// 调用生成器函数
let iterator = gen();
iterator.next();
function getUsers() {
setTimeout(() =&amp;gt; {
let data = &amp;#34;用户数据&amp;#34;;
iterator.next(data);
}, 1000)
}
function getOrders() {
setTimeout(() =&amp;gt; {
let data = &amp;#34;订单数据&amp;#34;;
// 第二次调用 next 传入的实参将作为第一个 yield 语句返回的结果
iterator.next(data);
}, 1000)
}
function getProducts() {
setTimeout(() =&amp;gt; {
let data = &amp;#34;商品数据&amp;#34;;
iterator.next(data);
}, 1000)
}
function * gen() {
const users = yield getUsers();
const orders = yield getOrders();
const products = yield getProducts();
}
&lt;/code>&lt;/pre>&lt;h4 id="promise">Promise&lt;/h4>
&lt;p>Promise是ES6引入的异步编程的新解决方案，语法上Promise是一个构造函数，用来封装异步操作并可以获取成功或失败的结果。&lt;/p>
&lt;h4 id="set">Set&lt;/h4>
&lt;p>常用API&lt;/p>
&lt;ul>
&lt;li>add&lt;/li>
&lt;li>delete&lt;/li>
&lt;li>has&lt;/li>
&lt;li>clear&lt;/li>
&lt;li>size（属性）&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>const set = new Set([1, 2, 3, 1]);
for (const num of set) {
console.log(num);
}
&lt;/code>&lt;/pre>&lt;h4 id="map">Map&lt;/h4>
&lt;p>常用API&lt;/p>
&lt;ul>
&lt;li>set&lt;/li>
&lt;li>delete&lt;/li>
&lt;li>get&lt;/li>
&lt;li>clear&lt;/li>
&lt;li>size（属性）&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>let m = new Map();
m.set(&amp;#39;name&amp;#39;, &amp;#39;horizon&amp;#39;);
for (const o of m) {
console.log(o); // 输出长度为2的数组，第一个元素为key，第二个元素为value
}
&lt;/code>&lt;/pre>&lt;h4 id="class类">Class类&lt;/h4>
&lt;p>通过class关键字可以定义类，基本上ES6的class可以看做是一种语法糖，它的绝大部分功能ES5都可以做到，新的class写法只是让对象原型的写法更加清晰、更像面向对象编程的语法而已。&lt;/p>
&lt;ul>
&lt;li>class声明类&lt;/li>
&lt;li>constructor定义构造函数初始化&lt;/li>
&lt;li>extends继承父类&lt;/li>
&lt;li>super调用父类构造方法&lt;/li>
&lt;li>static定义静态方法和属性&lt;/li>
&lt;li>父类方法可以重写&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>// ES5实现类的写法
function Person(name, age) {
this.name = name;
this.age = age;
}
Person.prototype.eat = function() {
console.log(&amp;#39;eat&amp;#39;);
}
// ES6实现类的写法
class Person {
constructor(name, age) {
this.name = name;
this.age = age;
}
eat() {
console.log(&amp;#39;eat&amp;#39;);
}
}
Person person = new Person(&amp;#39;horizon&amp;#39;, 23);
person.call();
// ES5实现继承
function Phone(brand, price) {
this.brand = brand;
this.price = price;
}
Phone.prototype.call = function() {
console.log(&amp;#39;I can call&amp;#39;);
}
function SmartPhone(brand, price, color) {
Phone.call(this, brand, price);
this.color = color
}
// 设置子级构造函数的原型
SmartPhone.prototype = new Phone;
SmartPhone.prototype.contructor = SmartPhone
SmartPhone.prototype.photo = function() {
console.log(&amp;#39;I can photo&amp;#39;);
}
// ES6实现继承
class Phone {
constructor(brand, price) {
this.brand = brand;
this.price= price;
}
call() {
console.log(&amp;#39;I can call&amp;#39;);
}
}
class SmartPhone extends Phone {
constructor(brand, price, color) {
super(brand, price);
this.color = color;
}
photo() {
console.log(&amp;#39;I can photo&amp;#39;);
}
}
&lt;/code>&lt;/pre>&lt;h4 id="数值扩展">数值扩展&lt;/h4>
&lt;ul>
&lt;li>Math.EPSILON：js表示的最小精度&lt;/li>
&lt;li>二进制和八进制&lt;/li>
&lt;li>Number.isFinite：检测一个数值是否为有限数&lt;/li>
&lt;li>Number.isNaN：检测一个数值是否为NaN&lt;/li>
&lt;li>Number.isInteger：判断一个数是否为整数&lt;/li>
&lt;li>Math.trunc：将数字的小数部分抹掉&lt;/li>
&lt;li>Math.sign：判断一个数是正数、零还是负数&lt;/li>
&lt;/ul>
&lt;h4 id="对象方法扩展">对象方法扩展&lt;/h4>
&lt;ul>
&lt;li>Object.is：判断两个值是否相等&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>console.log(Object.is(1, 1)); // true
console.log(NaN === NaN); // false
console.log(Object.is(NaN, NaN)); // true
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Object.assign：对象的合并&lt;/li>
&lt;li>Object.setPropertyOf、Object.getPropertyOf：设置原型对象&lt;/li>
&lt;/ul>
&lt;h4 id="模块化">模块化&lt;/h4>
&lt;p>模块化是指将一个大的程序文件，拆分成许多小的文件，然后将小文件组合起来&lt;/p>
&lt;ul>
&lt;li>模块化的好处
&lt;ul>
&lt;li>防止命名冲突&lt;/li>
&lt;li>代码复用&lt;/li>
&lt;li>高维护性&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>模块化规范产品
&lt;ul>
&lt;li>CommonJS =&amp;gt; NodeJS、Browserify&lt;/li>
&lt;li>AMD =&amp;gt; requireJS&lt;/li>
&lt;li>CMD =&amp;gt; seaJS&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ES6模块化语法
&lt;ul>
&lt;li>export命令用于规定模块的对外接口&lt;/li>
&lt;li>import命令用于输入其他模块提供的功能&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="es7">ES7&lt;/h3>
&lt;h4 id="arrayprototypeincludes">Array.prototype.includes&lt;/h4>
&lt;p>includes 方法用来检测数组中是否包含某个元素，返回布尔类型值&lt;/p>
&lt;h4 id="指数操作符">指数操作符&lt;/h4>
&lt;p>在ES7中引入了指数运算符[**]，用来实现幂运算，功能与Math.pow结果相同&lt;/p>
&lt;h3 id="es8">ES8&lt;/h3>
&lt;h4 id="async和await">async和await&lt;/h4>
&lt;p>async和await两种语法结合可以让异步代码像同步代码一样&lt;/p>
&lt;h5 id="async函数">async函数&lt;/h5>
&lt;ul>
&lt;li>async函数的返回值为Promise对象&lt;/li>
&lt;li>Promise对象的结果由async函数执行的返回值决定&lt;/li>
&lt;/ul>
&lt;h5 id="await表达式">await表达式&lt;/h5>
&lt;ul>
&lt;li>await必须写在async函数中&lt;/li>
&lt;li>await右侧的表达式一般为Promise对象&lt;/li>
&lt;li>await返回的是Promise成功的值&lt;/li>
&lt;li>await的Promise失败了，就会抛出异常，需要通过try&amp;hellip;catch捕获处理&lt;/li>
&lt;/ul>
&lt;h4 id="对象方法扩展-1">对象方法扩展&lt;/h4>
&lt;ul>
&lt;li>Object.values()：返回一个给定对象的所有可枚举属性值的数组&lt;/li>
&lt;li>Object.entries()：返回一个给定对象自身可遍历属性[key,value]的数组&lt;/li>
&lt;li>Object.getOwnPropertyDescriptors()：返回指定对象所有自身属性的描述对象&lt;/li>
&lt;/ul>
&lt;h3 id="es9">ES9&lt;/h3>
&lt;h4 id="扩展运算符与rest参数">扩展运算符与rest参数&lt;/h4>
&lt;p>扩展运算符与rest参数在ES6中已引入，但只针对数组，在ES9中为对象提供了像数组一样的扩展运算符与rest参数&lt;/p>
&lt;h4 id="正则扩展">正则扩展&lt;/h4>
&lt;ul>
&lt;li>命名捕获分组（?&lt;name>）&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>let str = &amp;#39;&amp;lt;a href=&amp;#34;http://www.baidu.com&amp;#34;&amp;gt;百度&amp;lt;/a&amp;gt;&amp;#39;;
const reg = /&amp;lt;a href=&amp;#34;(?&amp;lt;url&amp;gt;.*)&amp;#34;&amp;gt;(?&amp;lt;text&amp;gt;.*)&amp;lt;\/a&amp;gt;/;
const result = reg.exec(str)
console.log(result.groups.url);
console.log(result.groups.text);
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>反向断言（?&amp;lt;=）&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>let str = &amp;#34;ES110哔哔120哩哩&amp;#34;;
// 正向断言
const reg = /\d+(?=哩)/;
console.log(reg.exec(str)); // 120
// 反向断言
const reg2 = /(?&amp;lt;=哔)\d+/;
console.log(reg2.exec(str)); // 120
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>dotAll模式&lt;br>
正则的dot(.)匹配除换行符以外的任意一个字符，dotAll模式下dot(.)将可以匹配任意字符（包括换行符）。&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>// 正则表达式的最后加了s符号
const reg = /.*/s;
&lt;/code>&lt;/pre>&lt;h3 id="es10">ES10&lt;/h3>
&lt;h4 id="对象扩展方法objectfromentries">对象扩展方法Object.fromEntries&lt;/h4>
&lt;p>接收一个二维数组或Map将其转换为对象，与ES8的Object.entries方法互为逆运算&lt;/p>
&lt;pre tabindex="0">&lt;code>const res = Object.fromEntries([
[&amp;#39;name&amp;#39;, &amp;#39;horizon&amp;#39;]
])
console.log(res); // {name: &amp;#39;horizon&amp;#39;}
const m = new Map();
m.set(&amp;#39;name&amp;#39;, &amp;#39;horizon&amp;#39;);
const obj = Object.fromEntries(m);
console.log(obj); // {name: &amp;#39;horizon&amp;#39;}
&lt;/code>&lt;/pre>&lt;h4 id="字符串扩展方法trimstart与trimend">字符串扩展方法trimStart与trimEnd&lt;/h4>
&lt;ul>
&lt;li>trimStart：清除字符串左侧空白字符&lt;/li>
&lt;li>trimEnd：清除字符串右侧空白字符&lt;/li>
&lt;/ul>
&lt;h4 id="数组扩展方法flat与flatmap">数组扩展方法flat与flatMap&lt;/h4>
&lt;ul>
&lt;li>flat：将多维数组转化为低维数组，参数可传入需要降几维，默认值为1&lt;/li>
&lt;li>flatMap：将map的结果进行维度降低&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>const array = [1,2,[3,4,[5,6]]];
console.log(array.flat()); // [1,2,3,4,[5,6]]
console.log(array.flat(2)); // [1,2,3,4,5,6]
const arr = [1,2,3,4,5];
const newArr = arr.flatMap(each =&amp;gt; [each * 10]); // [10,20,30,40,50]
&lt;/code>&lt;/pre>&lt;h4 id="symbolprototypedescription">Symbol.prototype.description&lt;/h4>
&lt;pre tabindex="0">&lt;code>const s = Symbol(&amp;#39;horizon&amp;#39;);
console.log(Symbol.description); // horizon
&lt;/code>&lt;/pre>&lt;h3 id="es11">ES11&lt;/h3>
&lt;h4 id="私有属性">私有属性&lt;/h4>
&lt;pre tabindex="0">&lt;code>class Person {
// 公有属性
name;
// 私有属性
#age;
constructor(name, age) {
this.name = name;
this.#age = age;
}
}
const person = new Person(&amp;#39;horizon&amp;#39;, 23);
console.log(person.name); // horizon
console.log(person.#age); // error
&lt;/code>&lt;/pre>&lt;h4 id="promiseallsettled">Promise.allSettled&lt;/h4>
&lt;p>接收一个Promise数组，不管Promise数组内的Promise是否成功或失败，allSettled返回的Promise都是成功状态的，这与all不同。&lt;/p>
&lt;h4 id="字符串扩展stringmatchall">字符串扩展String.matchAll&lt;/h4>
&lt;p>将所有的匹配结果取出来，返回一个可迭代的对象，可用for&amp;hellip;of循环遍历&lt;/p>
&lt;h4 id="可选链操作符">可选链操作符（?.）&lt;/h4>
&lt;pre tabindex="0">&lt;code>function main(config) {
// const host = config &amp;amp;&amp;amp; config.db &amp;amp;&amp;amp; config.db.host;
const host = config?.db?.host;
}
const config = {
db: {
host: &amp;#39;127.0.0.1&amp;#39;
}
}
&lt;/code>&lt;/pre>&lt;h4 id="动态import">动态import&lt;/h4>
&lt;p>使用 import(&amp;rsquo;/path&amp;rsquo;) 动态导入模块，返回一个Promise对象&lt;/p>
&lt;h4 id="bigint类型">BigInt类型&lt;/h4>
&lt;pre tabindex="0">&lt;code>const num1 = 123n;
const num2 = BigInt(123);
&lt;/code>&lt;/pre>&lt;h4 id="绝对全局对象globalthis">绝对全局对象globalThis&lt;/h4></description><category domain="https://ithorizon.top/categories/%E5%89%8D%E7%AB%AF/">前端</category><category domain="https://ithorizon.top/tags/es6/">ES6</category><category domain="https://ithorizon.top/tags/es%E6%96%B0%E7%89%B9%E6%80%A7/">ES新特性</category></item><item><title>Hugo + Github Pages搭建个人博客</title><link>https://ithorizon.top/posts/2021-03-03-hugo_start/</link><guid isPermaLink="true">https://ithorizon.top/posts/2021-03-03-hugo_start/</guid><pubDate>Wed, 03 Mar 2021 13:11:51 +0800</pubDate><author>1468387317@qq.com (Yanbin Lin)</author><copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享</copyright><description>&lt;h4 id="下载hugo">下载Hugo&lt;/h4>
&lt;h5 id="二进制安装">二进制安装&lt;/h5>
&lt;pre tabindex="0">&lt;code>1. 上github（https://github.com/gohugoio/hugo/releases）下载对应的压缩包，然后进行解压，再将目录配置到环境变量中
2. 执行：hugo version，验证是否安装成功
&lt;/code>&lt;/pre>&lt;h5 id="源码安装">源码安装&lt;/h5>
&lt;pre tabindex="0">&lt;code>1. 安装Git（https://git-scm.com/downloads）
2. 安装Golang（https://golang.org/dl/）
3. 安装Hugo
git clone https://github.com/gohugoio/hugo.git
cd hugo
go install
PS：如果需要下载支持编译SASS的版本，需要为clone时加上--tags extended参数，
安装go模块由go install改为执行：CGO_ENABLED=1 go install --tags extended，
如果安装go模块时报错：exec: &amp;#34;gcc&amp;#34;: executable file not found in %PATH%，可按参考文献1做法安装gcc后再重试
&lt;/code>&lt;/pre>&lt;p>PS：如果按源码的方式安装，后续执行hugo命令可能需要在git的客户端内才能执行，在windows cmd客户端内执行可能会报一下错误
&lt;img src="https://ithorizon.top/images/hugo_start-hugo_exe_error.png" alt="Windows窗口执行错误">&lt;/p>
&lt;h4 id="创建项目">创建项目&lt;/h4>
&lt;pre tabindex="0">&lt;code># 生成项目
hugo new site &amp;#34;项目名&amp;#34;
# 生成博文
hogo new posts/xxx.md
&lt;/code>&lt;/pre>&lt;h4 id="安装主题">安装主题&lt;/h4>
&lt;p>官网主题库：&lt;a href="https://themes.gohugo.io/">Hugo Themes&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code># 引入主题
git submodule add &amp;lt;主题仓库地址&amp;gt; themes/&amp;lt;主题名&amp;gt;
&lt;/code>&lt;/pre>&lt;h4 id="修改配置">修改配置&lt;/h4>
&lt;p>一般主题都有提供一份config.toml或config.yml配置，将其拷贝到项目的根目录并进行修改即可，如果使用Github Pages发布的话，需要在config.toml内添加：publishDir = docs 配置&lt;/p>
&lt;h4 id="生成静态站点的目录">生成静态站点的目录&lt;/h4>
&lt;pre tabindex="0">&lt;code># 根目录下执行hugo命令生成静态站点的目录，默认为 public 目录
hugo
&lt;/code>&lt;/pre>&lt;h4 id="配置github-pages">配置Github Pages&lt;/h4>
&lt;p>在仓库的Settings -&amp;gt; Options下方找到Github Pages配置，配置source为以上生成的博客文件夹
&lt;img src="https://ithorizon.top/images/hugo_start-github_pages_config.png" alt="GitHub Pages配置">&lt;/p>
&lt;h4 id="参考文献">参考文献&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://www.jianshu.com/p/c38483c30fb7">golang 编译cgo模块exec: &amp;ldquo;gcc&amp;rdquo;: executable file not found in %PATH%&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jsonbruce.com/posts/userguide/">Hugo 和 GitHub Pages 使用指南&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sspai.com/post/59904">浅谈我为什么从 HEXO 迁移到 HUGO&lt;/a>&lt;/li>
&lt;/ul></description><category domain="https://ithorizon.top/categories/%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/">静态网站</category><category domain="https://ithorizon.top/tags/hugo/">Hugo</category><category domain="https://ithorizon.top/tags/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/">搭建个人博客</category></item></channel></rss>