[{"categories":null,"content":"下载Hugo 二进制安装 1. 上github（https://github.com/gohugoio/hugo/releases）下载对应的压缩包，然后进行解压，再将目录配置到环境变量中 2. 执行：hugo version，验证是否安装成功 源码安装 1. 安装Git（https://git-scm.com/downloads） 2. 安装Golang（https://golang.org/dl/） 3. 安装Hugo git clone https://github.com/gohugoio/hugo.git cd hugo go install PS：如果需要下载支持编译SASS的版本，需要为clone时加上--tags extended参数， 安装go模块由go install改为执行：CGO_ENABLED=1 go install --tags extended， 如果安装go模块时报错：exec: \"gcc\": executable file not found in %PATH%，可按参考文献1做法安装gcc后再重试 PS：如果按源码的方式安装，后续执行hugo命令可能需要在git的客户端内才能执行，在windows cmd客户端内执行可能会报一下错误 创建项目 # 生成项目 hugo new site \"项目名\" # 生成博文 hogo new posts/xxx.md 安装主题 官网主题库：Hugo Themes\n# 引入主题 git submodule add \u003c主题仓库地址\u003e themes/\u003c主题名\u003e 修改配置 一般主题都有提供一份config.toml或config.yml配置，将其拷贝到项目的根目录并进行修改即可，如果使用Github Pages发布的话，需要在config.toml内添加：publishDir = docs 配置\n生成静态站点的目录 # 根目录下执行hugo命令生成静态站点的目录，默认为 public 目录 hugo 配置Github Pages 在仓库的Settings -\u003e Options下方找到Github Pages配置，配置source为以上生成的博客文件夹 参考文献  golang 编译cgo模块exec: “gcc”: executable file not found in %PATH% Hugo 和 GitHub Pages 使用指南 浅谈我为什么从 HEXO 迁移到 HUGO  ","description":"","tags":null,"title":"Hugo + Github Pages搭建个人博客","uri":"/posts/hugo_start/"},{"categories":null,"content":"原生菜鸟简介 啥都不会，啥都想学\n","description":"","tags":null,"title":"About","uri":"/about/"}]
